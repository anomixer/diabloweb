{"version":3,"sources":["../webpack/bootstrap","../node_modules/axios/lib/utils.js","../node_modules/process/browser.js","../node_modules/axios/lib/defaults.js","../node_modules/path-browserify/index.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/core/enhanceError.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/core/createError.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/cancel/Cancel.js","api/Diablo.wasm","api/Diablo.jscc","api/DiabloSpawn.wasm","api/DiabloSpawn.jscc","../node_modules/axios/index.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js","api/websocket.js","api/game.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","toString","isArray","val","isUndefined","isObject","isPlainObject","getPrototypeOf","isFunction","forEach","obj","fn","length","isArrayBuffer","isBuffer","constructor","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","result","assignValue","slice","arguments","extend","a","b","thisArg","trim","str","replace","stripBOM","content","charCodeAt","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","utils","normalizeHeaderName","enhanceError","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","headers","defaults","transitional","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","adapter","XMLHttpRequest","getDefaultAdapter","transformRequest","data","rawValue","parser","encoder","JSON","parse","stringify","stringifySafely","transformResponse","strictJSONParsing","responseType","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","status","common","Accept","method","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","filter","xs","f","res","resolve","resolvedPath","resolvedAbsolute","path","TypeError","charAt","split","join","normalize","isAbsolute","trailingSlash","substr","paths","index","relative","from","to","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","sep","delimiter","dirname","code","hasRoot","matchedSlash","basename","ext","extname","startDot","startPart","preDotState","encode","encodeURIComponent","url","params","paramsSerializer","serializedParams","v","toISOString","hashmarkIndex","indexOf","error","config","request","response","isAxiosError","toJSON","message","description","number","fileName","lineNumber","columnNumber","stack","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","Promise","reject","requestData","requestHeaders","auth","username","password","unescape","Authorization","btoa","fullPath","baseURL","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","open","toUpperCase","onreadystatechange","readyState","responseURL","onabort","onerror","ontimeout","timeoutErrorMessage","xsrfValue","withCredentials","read","undefined","toLowerCase","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","__CANCEL__","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","target","source","mergeDeepProperties","prop","axiosKeys","otherKeys","keys","Cancel","Diablo","_scriptDir","currentScript","src","Module","moduleOverrides","toThrow","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","importScripts","node","read_","readBinary","nodeFS","nodePath","scriptDirectory","__dirname","filename","binary","ret","Uint8Array","assert","ex","ExitStatus","readbuffer","scriptArgs","quit","self","location","href","lastIndexOf","xhr","onload","out","console","log","print","err","printErr","warn","asm2wasmImports","f64-rem","x","y","debugger","wasmMemory","tempRet0","setTempRet0","WebAssembly","ABORT","condition","text","UTF8Decoder","TextDecoder","UTF8ArrayToString","u8Array","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","ptr","HEAPU8","HEAP8","HEAP32","HEAPF32","alignUp","multiple","updateGlobalBufferViews","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","DYNAMICTOP_PTR","INITIAL_TOTAL_MEMORY","callRuntimeCallbacks","callbacks","callback","shift","func","arg","Memory","initial","byteLength","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","addOnPostRun","cb","abs","cos","sin","tan","acos","asin","atan","atan2","exp","sqrt","ceil","floor","pow","imul","fround","round","max","clz32","trunc","runDependencies","runDependencyWatcher","dependenciesFulfilled","dataURIPrefix","isDataURI","startsWith","wasmBinaryFile","getBinary","createWasm","info","global","NaN","Infinity","global.Math","asm2wasm","receiveInstance","instance","id","clearInterval","removeRunDependency","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","fetch","credentials","catch","instantiate","reason","instantiateStreaming","instantiateAsync","providedBuffer","Table","maximum","element","ASM_CONSTS","$0","DApi","current_save_id","globalCtors","tempDoublePtr","___exception_infos","___exception_caught","___exception_addRef","refcount","___exception_deAdjust","adjusted","adj","___exception_last","___cxa_free_exception","_free","___exception_decRef","rethrown","destructor","___cxa_find_matching_catch","thrown","throwntype","type","typeArray","___cxa_is_pointer_type","___cxa_can_catch","SYSCALLS","buffers","printChar","stream","curr","varargs","getStr","get64","low","getZero","_emscripten_get_heap_size","emscripten_realloc_buffer","size","oldSize","grow","asmLibraryArg","getTempRet0","invoke_i","sp","stackSave","dynCall_i","stackRestore","_setThrew","invoke_ii","a1","dynCall_ii","invoke_iii","a2","dynCall_iii","invoke_iiii","a3","dynCall_iiii","invoke_iiiii","a4","dynCall_iiiii","invoke_iiiiii","a5","dynCall_iiiiii","invoke_ji","dynCall_ji","invoke_v","dynCall_v","invoke_vi","dynCall_vi","invoke_vii","dynCall_vii","invoke_viii","dynCall_viii","invoke_viiii","dynCall_viiii","invoke_viiiii","dynCall_viiiii","invoke_viiiiiii","a6","a7","dynCall_viiiiiii","invoke_viij","dynCall_viij","invoke_viji","dynCall_viji","___assert_fail","line","___cxa_allocate_exception","_malloc","___cxa_begin_catch","caught","__ZSt18uncaught_exceptionv","uncaught_exceptions","___cxa_end_catch","pop","___cxa_find_matching_catch_2","a0","___cxa_find_matching_catch_3","___cxa_get_exception_ptr","___cxa_pure_virtual","___cxa_throw","___cxa_uncaught_exceptions","___gxx_personality_v0","___lock","___resumeException","___setErrNo","___syscall140","which","getStreamFromFD","FS","ErrnoError","errno","___syscall146","iov","iovcnt","j","___syscall54","___syscall6","___unlock","__api_close_keyboard","close_keyboard","__api_open_keyboard","x0","y0","x1","y1","open_keyboard","_abort","_api_create_sound","create_sound","_api_create_sound_float","samples","channels","rate","create_sound_raw","_api_delete_sound","delete_sound","_api_draw_begin","draw_begin","_api_draw_belt","items","draw_belt","_api_draw_blit","w","h","draw_blit","_api_draw_clip_text","draw_clip_text","_api_draw_end","draw_end","_api_draw_text","color","draw_text","_api_duplicate_sound","srcId","duplicate_sound","_api_exit_game","exit_game","_api_play_sound","volume","pan","loop","play_sound","_api_set_cursor","set_cursor","_api_set_volume","set_volume","_api_stop_sound","stop_sound","_api_use_websocket","use","use_websocket","_api_websocket_closed","websocket_closed","_api_websocket_send","websocket_send","_emscripten_asm_const_ii","_emscripten_memcpy_big","dest","num","set","_emscripten_resize_heap","requestedSize","newSize","_exit","implicit","exit","_exit_error","exit_error","_get_file_contents","offset","get_file_contents","_get_file_size","get_file_size","_llvm_eh_typeid_for","_llvm_trap","_put_file_contents","put_file_contents","_remove_file","remove_file","_show_alert","alert","_time","Date","now","_trace_pop","WASM_TRACE","_trace_push","abortOnCannotGrowMemory","flush_NO_FILESYSTEM","fflush","asm","old","doRun","postRun","preRun","runCaller","what","DiabloSpawn","Axios","mergeConfig","createInstance","defaultConfig","context","axios","instanceConfig","CancelToken","isCancel","all","promises","spread","default","InterceptorManager","dispatchRequest","validator","validators","interceptors","assertOptions","boolean","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","fulfilled","rejected","responseInterceptorChain","chain","newConfig","onFulfilled","onRejected","getUri","handlers","options","eject","transformData","throwIfCancellationRequested","throwIfRequested","fns","normalizedName","write","expires","domain","secure","cookie","toGMTString","match","RegExp","decodeURIComponent","remove","isAbsoluteURL","combineURLs","requestedURL","test","relativeURL","ignoreDuplicateOf","parsed","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","setAttribute","protocol","host","search","hash","hostname","port","pathname","requestURL","pkg","thing","deprecatedWarnings","currentVerArr","isOlderVersion","thanVersion","pkgVersionArr","destVer","isDeprecated","formatMessage","opt","desc","opts","schema","allowUnknown","executor","resolvePromise","token","payload","websocket_open","handler","finisher","ws","batch","intr","proxy","msg","close","async","socket","WebSocket","binaryType","versionCbk","_ref","onError","removeEventListener","u8","vers","clientInfo","parseInt","do_websocket_open","sock","setInterval","reduce","sum","pos","DiabloSize","SpawnSize","worker","canvas","imageData","files","renderBatch","drawBelt","is_spawn","websocket","action","postMessage","ChunkSize","RemoteFile","getResponseHeader","chunks","chunk0","chunk1","missing0","missing1","header","delete","_len","_key","rect","flag","call_api","try_api","wasm","_DApi_AllocPacket","DApi_renderLegacy","images","clip","belt","transfer","map","DApi_renderOffscreen","save","font","putImageData","beginPath","g","fillStyle","fillText","restore","bitmap","transferToImageBitmap","audioBatch","audioTransfer","maxSoundId","maxBatchId","_len2","_key2","_len3","_key3","packetBatch","_len4","_key4","nested","_DApi_SyncTextPtr","heap","_DApi_SyncText","progress","loaded","total","readFile","file","reader","FileReader","readAsArrayBuffer","init_game","mpq","spawn","offscreen","texts","loading","initializing","OffscreenCanvas","getContext","createImageData","assign","has","mpqLoaded","mpqTotal","wasmLoaded","wasmTotal","wasmWeight","updateProgress","loadWasm","SpawnBinary","DiabloBinary","SpawnModule","DiabloModule","wasmBinary","ready","initWasm","loadMpq","_DApi_Init","performance","_ref2","packet"],"mappings":"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","file":"944f146ef3ad57d4dff1.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 36);\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return typeof FormData !== 'undefined' && val instanceof FormData;\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = val && val.buffer && val.buffer instanceof ArrayBuffer;\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' || navigator.product === 'NativeScript' || navigator.product === 'NS')) {\n    return false;\n  }\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */\n) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  }\n  // if setTimeout wasn't available but was latter defined\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  }\n  // if clearTimeout wasn't available but was latter defined\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n  draining = false;\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n  if (queue.length) {\n    drainQueue();\n  }\n}\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n    queueIndex = -1;\n    len = queue.length;\n  }\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n  queue.push(new Item(fun, args));\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\nfunction noop() {}\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\nprocess.listeners = function (name) {\n  return [];\n};\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\nprocess.cwd = function () {\n  return '/';\n};\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\nprocess.umask = function () {\n  return 0;\n};","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\nvar enhanceError = require('./core/enhanceError');\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n  return (encoder || JSON.stringify)(rawValue);\n}\nvar defaults = {\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n  adapter: getDefaultAdapter(),\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || headers && headers['Content-Type'] === 'application/json') {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n    if (strictJSONParsing || forcedJSONParsing && utils.isString(data) && data.length) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n    return data;\n  }],\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n  maxContentLength: -1,\n  maxBodyLength: -1,\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\nmodule.exports = defaults;","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function () {\n  var resolvedPath = '',\n    resolvedAbsolute = false;\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = i >= 0 ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function (p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function (path) {\n  var isAbsolute = exports.isAbsolute(path),\n    trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function (p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function (path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function () {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function (p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n// path.relative(from, to)\n// posix version\nexports.relative = function (from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n  return outputParts.join('/');\n};\nexports.sep = '/';\nexports.delimiter = ':';\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n      if (!matchedSlash) {\n        end = i;\n        break;\n      }\n    } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now\n      if (!matchedSlash) {\n        start = i + 1;\n        break;\n      }\n    } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now\n      if (!matchedSlash) {\n        startPart = i + 1;\n        break;\n      }\n      continue;\n    }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n      // If this is our first dot, mark it as the start of our extension\n      if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n  if (startDot === -1 || end === -1 ||\n  // We saw a non-dot character immediately before the dot\n  preDotState === 0 ||\n  // The (right-most) trimmed path component is exactly '..'\n  preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\nfunction filter(xs, f) {\n  if (xs.filter) return xs.filter(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    if (f(xs[i], i, xs)) res.push(xs[i]);\n  }\n  return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b' ? function (str, start, len) {\n  return str.substr(start, len);\n} : function (str, start, len) {\n  if (start < 0) start = str.length + start;\n  return str.substr(start, len);\n};","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};","'use strict';\n\nvar utils = require('./../utils');\nfunction encode(val) {\n  return encodeURIComponent(val).replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n    serializedParams = parts.join('&');\n  }\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n  return url;\n};","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' || responseType === 'json' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    }\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = ['baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer', 'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName', 'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress', 'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent', 'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'];\n  var directMergeKeys = ['validateStatus'];\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n  var axiosKeys = valueFromConfig2Keys.concat(mergeDeepPropertiesKeys).concat(defaultToConfig2Keys).concat(directMergeKeys);\n  var otherKeys = Object.keys(config1).concat(Object.keys(config2)).filter(function filterAxiosKeys(key) {\n    return axiosKeys.indexOf(key) === -1;\n  });\n  utils.forEach(otherKeys, mergeDeepProperties);\n  return config;\n};","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\nCancel.prototype.__CANCEL__ = true;\nmodule.exports = Cancel;","module.exports = __webpack_public_path__ + \"static/media/Diablo.570bd59a.wasm\";","\r\nvar Diablo = (function() {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  return (\r\nfunction(Diablo) {\r\n  Diablo = Diablo || {};\r\n\r\n// Copyright 2010 The Emscripten Authors.  All rights reserved.\r\n// Emscripten is available under two separate licenses, the MIT license and the\r\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\r\n// found in the LICENSE file.\r\n\r\n// The Module object: Our interface to the outside world. We import\r\n// and export values on it. There are various ways Module can be used:\r\n// 1. Not defined. We create it here\r\n// 2. A function parameter, function(Module) { ..generated code.. }\r\n// 3. pre-run appended it, var Module = {}; ..generated code..\r\n// 4. External script tag defines var Module.\r\n// We need to check if Module already exists (e.g. case 3 above).\r\n// Substitution will be replaced with actual code on later stage of the build,\r\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\r\n// Note that if you want to run closure, and also to use Module\r\n// after the generated code, you will need to define   var Module = {};\r\n// before the code. Then that object will be used in the code, and you\r\n// can continue to use Module afterwards as well.\r\nvar Module = typeof Diablo !== 'undefined' ? Diablo : {};\r\n\r\n// --pre-jses are emitted after the Module integration code, so that they can\r\n// refer to Module (if they choose; they can also define Module)\r\n\r\n\r\n// Sometimes an existing Module object exists with properties\r\n// meant to overwrite the default module functionality. Here\r\n// we collect those properties and reapply _after_ we configure\r\n// the current environment's defaults to avoid having to be so\r\n// defensive during initialization.\r\nvar moduleOverrides = {};\r\nvar key;\r\nfor (key in Module) {\r\n  if (Module.hasOwnProperty(key)) {\r\n    moduleOverrides[key] = Module[key];\r\n  }\r\n}\r\n\r\nModule['arguments'] = [];\r\nModule['thisProgram'] = './this.program';\r\nModule['quit'] = function(status, toThrow) {\r\n  throw toThrow;\r\n};\r\nModule['preRun'] = [];\r\nModule['postRun'] = [];\r\n\r\n// Determine the runtime environment we are in. You can customize this by\r\n// setting the ENVIRONMENT setting at compile time (see settings.js).\r\n\r\nvar ENVIRONMENT_IS_WEB = false;\r\nvar ENVIRONMENT_IS_WORKER = false;\r\nvar ENVIRONMENT_IS_NODE = false;\r\nvar ENVIRONMENT_HAS_NODE = false;\r\nvar ENVIRONMENT_IS_SHELL = false;\r\nENVIRONMENT_IS_WEB = typeof window === 'object';\r\nENVIRONMENT_IS_WORKER = typeof importScripts === 'function';\r\n// A web environment like Electron.js can have Node enabled, so we must\r\n// distinguish between Node-enabled environments and Node environments per se.\r\n// This will allow the former to do things like mount NODEFS.\r\n// Extended check using process.versions fixes issue #8816.\r\n// (Also makes redundant the original check that 'require' is a function.)\r\nENVIRONMENT_HAS_NODE = typeof process === 'object' && typeof process.versions === 'object' && typeof process.versions.node === 'string';\r\nENVIRONMENT_IS_NODE = ENVIRONMENT_HAS_NODE && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;\r\nENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\r\n\r\n\r\n\r\n// Three configurations we can be running in:\r\n// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)\r\n// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)\r\n// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)\r\n\r\n\r\n\r\n\r\n// `/` should be present at the end if `scriptDirectory` is not empty\r\nvar scriptDirectory = '';\r\nfunction locateFile(path) {\r\n  if (Module['locateFile']) {\r\n    return Module['locateFile'](path, scriptDirectory);\r\n  } else {\r\n    return scriptDirectory + path;\r\n  }\r\n}\r\n\r\n// Hooks that are implemented differently in different runtime environments.\r\nvar read_,\r\n    readAsync,\r\n    readBinary,\r\n    setWindowTitle;\r\n\r\nif (ENVIRONMENT_IS_NODE) {\r\n  scriptDirectory = __dirname + '/';\r\n\r\n  // Expose functionality in the same simple way that the shells work\r\n  // Note that we pollute the global namespace here, otherwise we break in node\r\n  var nodeFS;\r\n  var nodePath;\r\n\r\n  read_ = function shell_read(filename, binary) {\r\n    var ret;\r\n      if (!nodeFS) nodeFS = require('fs');\r\n      if (!nodePath) nodePath = require('path');\r\n      filename = nodePath['normalize'](filename);\r\n      ret = nodeFS['readFileSync'](filename);\r\n    return binary ? ret : ret.toString();\r\n  };\r\n\r\n  readBinary = function readBinary(filename) {\r\n    var ret = read_(filename, true);\r\n    if (!ret.buffer) {\r\n      ret = new Uint8Array(ret);\r\n    }\r\n    assert(ret.buffer);\r\n    return ret;\r\n  };\r\n\r\n  if (process['argv'].length > 1) {\r\n    Module['thisProgram'] = process['argv'][1].replace(/\\\\/g, '/');\r\n  }\r\n\r\n  Module['arguments'] = process['argv'].slice(2);\r\n\r\n  // MODULARIZE will export the module in the proper place outside, we don't need to export here\r\n\r\n  process['on']('uncaughtException', function(ex) {\r\n    // suppress ExitStatus exceptions from showing an error\r\n    if (!(ex instanceof ExitStatus)) {\r\n      throw ex;\r\n    }\r\n  });\r\n  // Currently node will swallow unhandled rejections, but this behavior is\r\n  // deprecated, and in the future it will exit with error status.\r\n  process['on']('unhandledRejection', abort);\r\n\r\n  Module['quit'] = function(status) {\r\n    process['exit'](status);\r\n  };\r\n\r\n  Module['inspect'] = function () { return '[Emscripten Module object]'; };\r\n} else\r\nif (ENVIRONMENT_IS_SHELL) {\r\n\r\n\r\n  if (typeof read != 'undefined') {\r\n    read_ = function shell_read(f) {\r\n      return read(f);\r\n    };\r\n  }\r\n\r\n  readBinary = function readBinary(f) {\r\n    var data;\r\n    if (typeof readbuffer === 'function') {\r\n      return new Uint8Array(readbuffer(f));\r\n    }\r\n    data = read(f, 'binary');\r\n    assert(typeof data === 'object');\r\n    return data;\r\n  };\r\n\r\n  if (typeof scriptArgs != 'undefined') {\r\n    Module['arguments'] = scriptArgs;\r\n  } else if (typeof arguments != 'undefined') {\r\n    Module['arguments'] = arguments;\r\n  }\r\n\r\n  if (typeof quit === 'function') {\r\n    Module['quit'] = function(status) {\r\n      quit(status);\r\n    }\r\n  }\r\n} else\r\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\r\n    scriptDirectory = self.location.href;\r\n  } else if (document.currentScript) { // web\r\n    scriptDirectory = document.currentScript.src;\r\n  }\r\n  // When MODULARIZE (and not _INSTANCE), this JS may be executed later, after document.currentScript\r\n  // is gone, so we saved it, and we use it here instead of any other info.\r\n  if (_scriptDir) {\r\n    scriptDirectory = _scriptDir;\r\n  }\r\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\r\n  // otherwise, slice off the final part of the url to find the script directory.\r\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\r\n  // and scriptDirectory will correctly be replaced with an empty string.\r\n  if (scriptDirectory.indexOf('blob:') !== 0) {\r\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf('/')+1);\r\n  } else {\r\n    scriptDirectory = '';\r\n  }\r\n\r\n\r\n  read_ = function shell_read(url) {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url, false);\r\n      xhr.send(null);\r\n      return xhr.responseText;\r\n  };\r\n\r\n  if (ENVIRONMENT_IS_WORKER) {\r\n    readBinary = function readBinary(url) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url, false);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.send(null);\r\n        return new Uint8Array(xhr.response);\r\n    };\r\n  }\r\n\r\n  readAsync = function readAsync(url, onload, onerror) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('GET', url, true);\r\n    xhr.responseType = 'arraybuffer';\r\n    xhr.onload = function xhr_onload() {\r\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\r\n        onload(xhr.response);\r\n        return;\r\n      }\r\n      onerror();\r\n    };\r\n    xhr.onerror = onerror;\r\n    xhr.send(null);\r\n  };\r\n\r\n  setWindowTitle = function(title) { document.title = title };\r\n} else\r\n{\r\n}\r\n\r\n// Set up the out() and err() hooks, which are how we can print to stdout or\r\n// stderr, respectively.\r\n// If the user provided Module.print or printErr, use that. Otherwise,\r\n// console.log is checked first, as 'print' on the web will open a print dialogue\r\n// printErr is preferable to console.warn (works better in shells)\r\n// bind(console) is necessary to fix IE/Edge closed dev tools panel behavior.\r\nvar out = Module['print'] || (typeof console !== 'undefined' ? console.log.bind(console) : (typeof print !== 'undefined' ? print : null));\r\nvar err = Module['printErr'] || (typeof printErr !== 'undefined' ? printErr : ((typeof console !== 'undefined' && console.warn.bind(console)) || out));\r\n\r\n// Merge back in the overrides\r\nfor (key in moduleOverrides) {\r\n  if (moduleOverrides.hasOwnProperty(key)) {\r\n    Module[key] = moduleOverrides[key];\r\n  }\r\n}\r\n// Free the object hierarchy contained in the overrides, this lets the GC\r\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\r\nmoduleOverrides = undefined;\r\n\r\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\r\n\r\n// TODO remove when SDL2 is fixed; also add the above assertion\r\n\r\n\r\n\r\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\r\n// Emscripten is available under two separate licenses, the MIT license and the\r\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\r\n// found in the LICENSE file.\r\n\r\n// {{PREAMBLE_ADDITIONS}}\r\n\r\nvar STACK_ALIGN = 16;\r\n\r\n\r\nfunction dynamicAlloc(size) {\r\n  var ret = HEAP32[DYNAMICTOP_PTR>>2];\r\n  var end = (ret + size + 15) & -16;\r\n  if (end > _emscripten_get_heap_size()) {\r\n    abort();\r\n  }\r\n  HEAP32[DYNAMICTOP_PTR>>2] = end;\r\n  return ret;\r\n}\r\n\r\nfunction alignMemory(size, factor) {\r\n  if (!factor) factor = STACK_ALIGN; // stack alignment (16-byte) by default\r\n  return Math.ceil(size / factor) * factor;\r\n}\r\n\r\nfunction getNativeTypeSize(type) {\r\n  switch (type) {\r\n    case 'i1': case 'i8': return 1;\r\n    case 'i16': return 2;\r\n    case 'i32': return 4;\r\n    case 'i64': return 8;\r\n    case 'float': return 4;\r\n    case 'double': return 8;\r\n    default: {\r\n      if (type[type.length-1] === '*') {\r\n        return 4; // A pointer\r\n      } else if (type[0] === 'i') {\r\n        var bits = parseInt(type.substr(1));\r\n        assert(bits % 8 === 0, 'getNativeTypeSize invalid bits ' + bits + ', type ' + type);\r\n        return bits / 8;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction warnOnce(text) {\r\n  if (!warnOnce.shown) warnOnce.shown = {};\r\n  if (!warnOnce.shown[text]) {\r\n    warnOnce.shown[text] = 1;\r\n    err(text);\r\n  }\r\n}\r\n\r\nvar asm2wasmImports = { // special asm2wasm imports\r\n    \"f64-rem\": function(x, y) {\r\n        return x % y;\r\n    },\r\n    \"debugger\": function() {\r\n        debugger;\r\n    }\r\n};\r\n\r\n\r\n\r\nvar jsCallStartIndex = 1;\r\nvar functionPointers = new Array(0);\r\n\r\n// Wraps a JS function as a wasm function with a given signature.\r\n// In the future, we may get a WebAssembly.Function constructor. Until then,\r\n// we create a wasm module that takes the JS function as an import with a given\r\n// signature, and re-exports that as a wasm function.\r\nfunction convertJsFunctionToWasm(func, sig) {\r\n\r\n  // The module is static, with the exception of the type section, which is\r\n  // generated based on the signature passed in.\r\n  var typeSection = [\r\n    0x01, // id: section,\r\n    0x00, // length: 0 (placeholder)\r\n    0x01, // count: 1\r\n    0x60, // form: func\r\n  ];\r\n  var sigRet = sig.slice(0, 1);\r\n  var sigParam = sig.slice(1);\r\n  var typeCodes = {\r\n    'i': 0x7f, // i32\r\n    'j': 0x7e, // i64\r\n    'f': 0x7d, // f32\r\n    'd': 0x7c, // f64\r\n  };\r\n\r\n  // Parameters, length + signatures\r\n  typeSection.push(sigParam.length);\r\n  for (var i = 0; i < sigParam.length; ++i) {\r\n    typeSection.push(typeCodes[sigParam[i]]);\r\n  }\r\n\r\n  // Return values, length + signatures\r\n  // With no multi-return in MVP, either 0 (void) or 1 (anything else)\r\n  if (sigRet == 'v') {\r\n    typeSection.push(0x00);\r\n  } else {\r\n    typeSection = typeSection.concat([0x01, typeCodes[sigRet]]);\r\n  }\r\n\r\n  // Write the overall length of the type section back into the section header\r\n  // (excepting the 2 bytes for the section id and length)\r\n  typeSection[1] = typeSection.length - 2;\r\n\r\n  // Rest of the module is static\r\n  var bytes = new Uint8Array([\r\n    0x00, 0x61, 0x73, 0x6d, // magic (\"\\0asm\")\r\n    0x01, 0x00, 0x00, 0x00, // version: 1\r\n  ].concat(typeSection, [\r\n    0x02, 0x07, // import section\r\n      // (import \"e\" \"f\" (func 0 (type 0)))\r\n      0x01, 0x01, 0x65, 0x01, 0x66, 0x00, 0x00,\r\n    0x07, 0x05, // export section\r\n      // (export \"f\" (func 0 (type 0)))\r\n      0x01, 0x01, 0x66, 0x00, 0x00,\r\n  ]));\r\n\r\n   // We can compile this wasm module synchronously because it is very small.\r\n  // This accepts an import (at \"e.f\"), that it reroutes to an export (at \"f\")\r\n  var module = new WebAssembly.Module(bytes);\r\n  var instance = new WebAssembly.Instance(module, {\r\n    e: {\r\n      f: func\r\n    }\r\n  });\r\n  var wrappedFunc = instance.exports.f;\r\n  return wrappedFunc;\r\n}\r\n\r\n// Add a wasm function to the table.\r\nfunction addFunctionWasm(func, sig) {\r\n  var table = wasmTable;\r\n  var ret = table.length;\r\n\r\n  // Grow the table\r\n  try {\r\n    table.grow(1);\r\n  } catch (err) {\r\n    if (!err instanceof RangeError) {\r\n      throw err;\r\n    }\r\n    throw 'Unable to grow wasm table. Use a higher value for RESERVED_FUNCTION_POINTERS or set ALLOW_TABLE_GROWTH.';\r\n  }\r\n\r\n  // Insert new element\r\n  try {\r\n    // Attempting to call this with JS function will cause of table.set() to fail\r\n    table.set(ret, func);\r\n  } catch (err) {\r\n    if (!err instanceof TypeError) {\r\n      throw err;\r\n    }\r\n    assert(typeof sig !== 'undefined', 'Missing signature argument to addFunction');\r\n    var wrapped = convertJsFunctionToWasm(func, sig);\r\n    table.set(ret, wrapped);\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nfunction removeFunctionWasm(index) {\r\n  // TODO(sbc): Look into implementing this to allow re-using of table slots\r\n}\r\n\r\n// 'sig' parameter is required for the llvm backend but only when func is not\r\n// already a WebAssembly function.\r\nfunction addFunction(func, sig) {\r\n\r\n\r\n  var base = 0;\r\n  for (var i = base; i < base + 0; i++) {\r\n    if (!functionPointers[i]) {\r\n      functionPointers[i] = func;\r\n      return jsCallStartIndex + i;\r\n    }\r\n  }\r\n  throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';\r\n\r\n}\r\n\r\nfunction removeFunction(index) {\r\n\r\n  functionPointers[index-jsCallStartIndex] = null;\r\n}\r\n\r\nvar funcWrappers = {};\r\n\r\nfunction getFuncWrapper(func, sig) {\r\n  if (!func) return; // on null pointer, return undefined\r\n  assert(sig);\r\n  if (!funcWrappers[sig]) {\r\n    funcWrappers[sig] = {};\r\n  }\r\n  var sigCache = funcWrappers[sig];\r\n  if (!sigCache[func]) {\r\n    // optimize away arguments usage in common cases\r\n    if (sig.length === 1) {\r\n      sigCache[func] = function dynCall_wrapper() {\r\n        return dynCall(sig, func);\r\n      };\r\n    } else if (sig.length === 2) {\r\n      sigCache[func] = function dynCall_wrapper(arg) {\r\n        return dynCall(sig, func, [arg]);\r\n      };\r\n    } else {\r\n      // general case\r\n      sigCache[func] = function dynCall_wrapper() {\r\n        return dynCall(sig, func, Array.prototype.slice.call(arguments));\r\n      };\r\n    }\r\n  }\r\n  return sigCache[func];\r\n}\r\n\r\n\r\nfunction makeBigInt(low, high, unsigned) {\r\n  return unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0));\r\n}\r\n\r\nfunction dynCall(sig, ptr, args) {\r\n  if (args && args.length) {\r\n    return Module['dynCall_' + sig].apply(null, [ptr].concat(args));\r\n  } else {\r\n    return Module['dynCall_' + sig].call(null, ptr);\r\n  }\r\n}\r\n\r\nvar tempRet0 = 0;\r\n\r\nvar setTempRet0 = function(value) {\r\n  tempRet0 = value;\r\n};\r\n\r\nvar getTempRet0 = function() {\r\n  return tempRet0;\r\n};\r\n\r\n\r\nvar Runtime = {\r\n};\r\n\r\n// The address globals begin at. Very low in memory, for code size and optimization opportunities.\r\n// Above 0 is static memory, starting with globals.\r\n// Then the stack.\r\n// Then 'dynamic' memory for sbrk.\r\nvar GLOBAL_BASE = 1024;\r\n\r\n\r\n\r\n\r\n// === Preamble library stuff ===\r\n\r\n// Documentation for the public APIs defined in this file must be updated in:\r\n//    site/source/docs/api_reference/preamble.js.rst\r\n// A prebuilt local version of the documentation is available at:\r\n//    site/build/text/docs/api_reference/preamble.js.txt\r\n// You can also build docs locally as HTML or other formats in site/\r\n// An online HTML version (which may be of a different version of Emscripten)\r\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\r\n\r\n\r\n\r\nif (typeof WebAssembly !== 'object') {\r\n  err('no native wasm support detected');\r\n}\r\n\r\n\r\n// In MINIMAL_RUNTIME, setValue() and getValue() are only available when building with safe heap enabled, for heap safety checking.\r\n// In traditional runtime, setValue() and getValue() are always available (although their use is highly discouraged due to perf penalties)\r\n\r\n/** @type {function(number, number, string, boolean=)} */\r\nfunction setValue(ptr, value, type, noSafe) {\r\n  type = type || 'i8';\r\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\r\n    switch(type) {\r\n      case 'i1': HEAP8[((ptr)>>0)]=value; break;\r\n      case 'i8': HEAP8[((ptr)>>0)]=value; break;\r\n      case 'i16': HEAP16[((ptr)>>1)]=value; break;\r\n      case 'i32': HEAP32[((ptr)>>2)]=value; break;\r\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;\r\n      case 'float': HEAPF32[((ptr)>>2)]=value; break;\r\n      case 'double': HEAPF64[((ptr)>>3)]=value; break;\r\n      default: abort('invalid type for setValue: ' + type);\r\n    }\r\n}\r\n\r\n/** @type {function(number, string, boolean=)} */\r\nfunction getValue(ptr, type, noSafe) {\r\n  type = type || 'i8';\r\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\r\n    switch(type) {\r\n      case 'i1': return HEAP8[((ptr)>>0)];\r\n      case 'i8': return HEAP8[((ptr)>>0)];\r\n      case 'i16': return HEAP16[((ptr)>>1)];\r\n      case 'i32': return HEAP32[((ptr)>>2)];\r\n      case 'i64': return HEAP32[((ptr)>>2)];\r\n      case 'float': return HEAPF32[((ptr)>>2)];\r\n      case 'double': return HEAPF64[((ptr)>>3)];\r\n      default: abort('invalid type for getValue: ' + type);\r\n    }\r\n  return null;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Wasm globals\r\n\r\nvar wasmMemory;\r\n\r\n// Potentially used for direct table calls.\r\nvar wasmTable;\r\n\r\n\r\n//========================================\r\n// Runtime essentials\r\n//========================================\r\n\r\n// whether we are quitting the application. no code should run after this.\r\n// set in exit() and abort()\r\nvar ABORT = false;\r\n\r\n// set by exit() and abort().  Passed to 'onExit' handler.\r\n// NOTE: This is also used as the process return code code in shell environments\r\n// but only when noExitRuntime is false.\r\nvar EXITSTATUS = 0;\r\n\r\n/** @type {function(*, string=)} */\r\nfunction assert(condition, text) {\r\n  if (!condition) {\r\n    abort('Assertion failed: ' + text);\r\n  }\r\n}\r\n\r\n// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)\r\nfunction getCFunc(ident) {\r\n  var func = Module['_' + ident]; // closure exported function\r\n  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');\r\n  return func;\r\n}\r\n\r\n// C calling interface.\r\nfunction ccall(ident, returnType, argTypes, args, opts) {\r\n  // For fast lookup of conversion functions\r\n  var toC = {\r\n    'string': function(str) {\r\n      var ret = 0;\r\n      if (str !== null && str !== undefined && str !== 0) { // null string\r\n        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\r\n        var len = (str.length << 2) + 1;\r\n        ret = stackAlloc(len);\r\n        stringToUTF8(str, ret, len);\r\n      }\r\n      return ret;\r\n    },\r\n    'array': function(arr) {\r\n      var ret = stackAlloc(arr.length);\r\n      writeArrayToMemory(arr, ret);\r\n      return ret;\r\n    }\r\n  };\r\n\r\n  function convertReturnValue(ret) {\r\n    if (returnType === 'string') return UTF8ToString(ret);\r\n    if (returnType === 'boolean') return Boolean(ret);\r\n    return ret;\r\n  }\r\n\r\n  var func = getCFunc(ident);\r\n  var cArgs = [];\r\n  var stack = 0;\r\n  if (args) {\r\n    for (var i = 0; i < args.length; i++) {\r\n      var converter = toC[argTypes[i]];\r\n      if (converter) {\r\n        if (stack === 0) stack = stackSave();\r\n        cArgs[i] = converter(args[i]);\r\n      } else {\r\n        cArgs[i] = args[i];\r\n      }\r\n    }\r\n  }\r\n  var ret = func.apply(null, cArgs);\r\n  ret = convertReturnValue(ret);\r\n  if (stack !== 0) stackRestore(stack);\r\n  return ret;\r\n}\r\n\r\nfunction cwrap(ident, returnType, argTypes, opts) {\r\n  argTypes = argTypes || [];\r\n  // When the function takes numbers and returns a number, we can just return\r\n  // the original function\r\n  var numericArgs = argTypes.every(function(type){ return type === 'number'});\r\n  var numericRet = returnType !== 'string';\r\n  if (numericRet && numericArgs && !opts) {\r\n    return getCFunc(ident);\r\n  }\r\n  return function() {\r\n    return ccall(ident, returnType, argTypes, arguments, opts);\r\n  }\r\n}\r\n\r\nvar ALLOC_NORMAL = 0; // Tries to use _malloc()\r\nvar ALLOC_STACK = 1; // Lives for the duration of the current function call\r\nvar ALLOC_DYNAMIC = 2; // Cannot be freed except through sbrk\r\nvar ALLOC_NONE = 3; // Do not allocate\r\n\r\n// allocate(): This is for internal use. You can use it yourself as well, but the interface\r\n//             is a little tricky (see docs right below). The reason is that it is optimized\r\n//             for multiple syntaxes to save space in generated code. So you should\r\n//             normally not use allocate(), and instead allocate memory using _malloc(),\r\n//             initialize it with setValue(), and so forth.\r\n// @slab: An array of data, or a number. If a number, then the size of the block to allocate,\r\n//        in *bytes* (note that this is sometimes confusing: the next parameter does not\r\n//        affect this!)\r\n// @types: Either an array of types, one for each byte (or 0 if no type at that position),\r\n//         or a single type which is used for the entire block. This only matters if there\r\n//         is initial data - if @slab is a number, then this does not matter at all and is\r\n//         ignored.\r\n// @allocator: How to allocate memory, see ALLOC_*\r\n/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */\r\nfunction allocate(slab, types, allocator, ptr) {\r\n  var zeroinit, size;\r\n  if (typeof slab === 'number') {\r\n    zeroinit = true;\r\n    size = slab;\r\n  } else {\r\n    zeroinit = false;\r\n    size = slab.length;\r\n  }\r\n\r\n  var singleType = typeof types === 'string' ? types : null;\r\n\r\n  var ret;\r\n  if (allocator == ALLOC_NONE) {\r\n    ret = ptr;\r\n  } else {\r\n    ret = [_malloc,\r\n    stackAlloc,\r\n    dynamicAlloc][allocator](Math.max(size, singleType ? 1 : types.length));\r\n  }\r\n\r\n  if (zeroinit) {\r\n    var stop;\r\n    ptr = ret;\r\n    assert((ret & 3) == 0);\r\n    stop = ret + (size & ~3);\r\n    for (; ptr < stop; ptr += 4) {\r\n      HEAP32[((ptr)>>2)]=0;\r\n    }\r\n    stop = ret + size;\r\n    while (ptr < stop) {\r\n      HEAP8[((ptr++)>>0)]=0;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  if (singleType === 'i8') {\r\n    if (slab.subarray || slab.slice) {\r\n      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);\r\n    } else {\r\n      HEAPU8.set(new Uint8Array(slab), ret);\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  var i = 0, type, typeSize, previousType;\r\n  while (i < size) {\r\n    var curr = slab[i];\r\n\r\n    type = singleType || types[i];\r\n    if (type === 0) {\r\n      i++;\r\n      continue;\r\n    }\r\n\r\n    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later\r\n\r\n    setValue(ret+i, curr, type);\r\n\r\n    // no need to look up size unless type changes, so cache it\r\n    if (previousType !== type) {\r\n      typeSize = getNativeTypeSize(type);\r\n      previousType = type;\r\n    }\r\n    i += typeSize;\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready\r\nfunction getMemory(size) {\r\n  if (!runtimeInitialized) return dynamicAlloc(size);\r\n  return _malloc(size);\r\n}\r\n\r\n\r\n\r\n\r\n/** @type {function(number, number=)} */\r\nfunction Pointer_stringify(ptr, length) {\r\n  abort(\"this function has been removed - you should use UTF8ToString(ptr, maxBytesToRead) instead!\");\r\n}\r\n\r\n// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns\r\n// a copy of that string as a Javascript String object.\r\n\r\nfunction AsciiToString(ptr) {\r\n  var str = '';\r\n  while (1) {\r\n    var ch = HEAPU8[((ptr++)>>0)];\r\n    if (!ch) return str;\r\n    str += String.fromCharCode(ch);\r\n  }\r\n}\r\n\r\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\r\n// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.\r\n\r\nfunction stringToAscii(str, outPtr) {\r\n  return writeAsciiToMemory(str, outPtr, false);\r\n}\r\n\r\n\r\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns\r\n// a copy of that string as a Javascript String object.\r\n\r\nvar UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;\r\n\r\n/**\r\n * @param {number} idx\r\n * @param {number=} maxBytesToRead\r\n * @return {string}\r\n */\r\nfunction UTF8ArrayToString(u8Array, idx, maxBytesToRead) {\r\n  var endIdx = idx + maxBytesToRead;\r\n  var endPtr = idx;\r\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\r\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\r\n  // (As a tiny code save trick, compare endPtr against endIdx using a negation, so that undefined means Infinity)\r\n  while (u8Array[endPtr] && !(endPtr >= endIdx)) ++endPtr;\r\n\r\n  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {\r\n    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));\r\n  } else {\r\n    var str = '';\r\n    // If building with TextDecoder, we have already computed the string length above, so test loop end condition against that\r\n    while (idx < endPtr) {\r\n      // For UTF8 byte structure, see:\r\n      // http://en.wikipedia.org/wiki/UTF-8#Description\r\n      // https://www.ietf.org/rfc/rfc2279.txt\r\n      // https://tools.ietf.org/html/rfc3629\r\n      var u0 = u8Array[idx++];\r\n      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\r\n      var u1 = u8Array[idx++] & 63;\r\n      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\r\n      var u2 = u8Array[idx++] & 63;\r\n      if ((u0 & 0xF0) == 0xE0) {\r\n        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\r\n      } else {\r\n        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (u8Array[idx++] & 63);\r\n      }\r\n\r\n      if (u0 < 0x10000) {\r\n        str += String.fromCharCode(u0);\r\n      } else {\r\n        var ch = u0 - 0x10000;\r\n        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\r\n      }\r\n    }\r\n  }\r\n  return str;\r\n}\r\n\r\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns a\r\n// copy of that string as a Javascript String object.\r\n// maxBytesToRead: an optional length that specifies the maximum number of bytes to read. You can omit\r\n//                 this parameter to scan the string until the first \\0 byte. If maxBytesToRead is\r\n//                 passed, and the string at [ptr, ptr+maxBytesToReadr[ contains a null byte in the\r\n//                 middle, then the string will cut short at that byte index (i.e. maxBytesToRead will\r\n//                 not produce a string of exact length [ptr, ptr+maxBytesToRead[)\r\n//                 N.B. mixing frequent uses of UTF8ToString() with and without maxBytesToRead may\r\n//                 throw JS JIT optimizations off, so it is worth to consider consistently using one\r\n//                 style or the other.\r\n/**\r\n * @param {number} ptr\r\n * @param {number=} maxBytesToRead\r\n * @return {string}\r\n */\r\nfunction UTF8ToString(ptr, maxBytesToRead) {\r\n  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\r\n}\r\n\r\n// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',\r\n// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.\r\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\r\n// Parameters:\r\n//   str: the Javascript string to copy.\r\n//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.\r\n//   outIdx: The starting offset in the array to begin the copying.\r\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array.\r\n//                    This count should include the null terminator,\r\n//                    i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.\r\n//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.\r\n// Returns the number of bytes written, EXCLUDING the null terminator.\r\n\r\nfunction stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {\r\n  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.\r\n    return 0;\r\n\r\n  var startIdx = outIdx;\r\n  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629\r\n    var u = str.charCodeAt(i); // possibly a lead surrogate\r\n    if (u >= 0xD800 && u <= 0xDFFF) {\r\n      var u1 = str.charCodeAt(++i);\r\n      u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\r\n    }\r\n    if (u <= 0x7F) {\r\n      if (outIdx >= endIdx) break;\r\n      outU8Array[outIdx++] = u;\r\n    } else if (u <= 0x7FF) {\r\n      if (outIdx + 1 >= endIdx) break;\r\n      outU8Array[outIdx++] = 0xC0 | (u >> 6);\r\n      outU8Array[outIdx++] = 0x80 | (u & 63);\r\n    } else if (u <= 0xFFFF) {\r\n      if (outIdx + 2 >= endIdx) break;\r\n      outU8Array[outIdx++] = 0xE0 | (u >> 12);\r\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n      outU8Array[outIdx++] = 0x80 | (u & 63);\r\n    } else {\r\n      if (outIdx + 3 >= endIdx) break;\r\n      outU8Array[outIdx++] = 0xF0 | (u >> 18);\r\n      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\r\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n      outU8Array[outIdx++] = 0x80 | (u & 63);\r\n    }\r\n  }\r\n  // Null-terminate the pointer to the buffer.\r\n  outU8Array[outIdx] = 0;\r\n  return outIdx - startIdx;\r\n}\r\n\r\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\r\n// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.\r\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\r\n// Returns the number of bytes written, EXCLUDING the null terminator.\r\n\r\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\r\n  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\r\n}\r\n\r\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.\r\nfunction lengthBytesUTF8(str) {\r\n  var len = 0;\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    var u = str.charCodeAt(i); // possibly a lead surrogate\r\n    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);\r\n    if (u <= 0x7F) ++len;\r\n    else if (u <= 0x7FF) len += 2;\r\n    else if (u <= 0xFFFF) len += 3;\r\n    else len += 4;\r\n  }\r\n  return len;\r\n}\r\n\r\n\r\n// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns\r\n// a copy of that string as a Javascript String object.\r\n\r\nvar UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;\r\nfunction UTF16ToString(ptr) {\r\n  var endPtr = ptr;\r\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\r\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\r\n  var idx = endPtr >> 1;\r\n  while (HEAP16[idx]) ++idx;\r\n  endPtr = idx << 1;\r\n\r\n  if (endPtr - ptr > 32 && UTF16Decoder) {\r\n    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\r\n  } else {\r\n    var i = 0;\r\n\r\n    var str = '';\r\n    while (1) {\r\n      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];\r\n      if (codeUnit == 0) return str;\r\n      ++i;\r\n      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.\r\n      str += String.fromCharCode(codeUnit);\r\n    }\r\n  }\r\n}\r\n\r\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\r\n// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.\r\n// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.\r\n// Parameters:\r\n//   str: the Javascript string to copy.\r\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\r\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\r\n//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.\r\n//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.\r\n// Returns the number of bytes written, EXCLUDING the null terminator.\r\n\r\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\r\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\r\n  if (maxBytesToWrite === undefined) {\r\n    maxBytesToWrite = 0x7FFFFFFF;\r\n  }\r\n  if (maxBytesToWrite < 2) return 0;\r\n  maxBytesToWrite -= 2; // Null terminator.\r\n  var startPtr = outPtr;\r\n  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;\r\n  for (var i = 0; i < numCharsToWrite; ++i) {\r\n    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\r\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\r\n    HEAP16[((outPtr)>>1)]=codeUnit;\r\n    outPtr += 2;\r\n  }\r\n  // Null-terminate the pointer to the HEAP.\r\n  HEAP16[((outPtr)>>1)]=0;\r\n  return outPtr - startPtr;\r\n}\r\n\r\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\r\n\r\nfunction lengthBytesUTF16(str) {\r\n  return str.length*2;\r\n}\r\n\r\nfunction UTF32ToString(ptr) {\r\n  var i = 0;\r\n\r\n  var str = '';\r\n  while (1) {\r\n    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];\r\n    if (utf32 == 0)\r\n      return str;\r\n    ++i;\r\n    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    if (utf32 >= 0x10000) {\r\n      var ch = utf32 - 0x10000;\r\n      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\r\n    } else {\r\n      str += String.fromCharCode(utf32);\r\n    }\r\n  }\r\n}\r\n\r\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\r\n// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.\r\n// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.\r\n// Parameters:\r\n//   str: the Javascript string to copy.\r\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\r\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\r\n//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.\r\n//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.\r\n// Returns the number of bytes written, EXCLUDING the null terminator.\r\n\r\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\r\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\r\n  if (maxBytesToWrite === undefined) {\r\n    maxBytesToWrite = 0x7FFFFFFF;\r\n  }\r\n  if (maxBytesToWrite < 4) return 0;\r\n  var startPtr = outPtr;\r\n  var endPtr = startPtr + maxBytesToWrite - 4;\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\r\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\r\n      var trailSurrogate = str.charCodeAt(++i);\r\n      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);\r\n    }\r\n    HEAP32[((outPtr)>>2)]=codeUnit;\r\n    outPtr += 4;\r\n    if (outPtr + 4 > endPtr) break;\r\n  }\r\n  // Null-terminate the pointer to the HEAP.\r\n  HEAP32[((outPtr)>>2)]=0;\r\n  return outPtr - startPtr;\r\n}\r\n\r\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\r\n\r\nfunction lengthBytesUTF32(str) {\r\n  var len = 0;\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    var codeUnit = str.charCodeAt(i);\r\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\r\n    len += 4;\r\n  }\r\n\r\n  return len;\r\n}\r\n\r\n// Allocate heap space for a JS string, and write it there.\r\n// It is the responsibility of the caller to free() that memory.\r\nfunction allocateUTF8(str) {\r\n  var size = lengthBytesUTF8(str) + 1;\r\n  var ret = _malloc(size);\r\n  if (ret) stringToUTF8Array(str, HEAP8, ret, size);\r\n  return ret;\r\n}\r\n\r\n// Allocate stack space for a JS string, and write it there.\r\nfunction allocateUTF8OnStack(str) {\r\n  var size = lengthBytesUTF8(str) + 1;\r\n  var ret = stackAlloc(size);\r\n  stringToUTF8Array(str, HEAP8, ret, size);\r\n  return ret;\r\n}\r\n\r\n// Deprecated: This function should not be called because it is unsafe and does not provide\r\n// a maximum length limit of how many bytes it is allowed to write. Prefer calling the\r\n// function stringToUTF8Array() instead, which takes in a maximum length that can be used\r\n// to be secure from out of bounds writes.\r\n/** @deprecated */\r\nfunction writeStringToMemory(string, buffer, dontAddNull) {\r\n  warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');\r\n\r\n  var /** @type {number} */ lastChar, /** @type {number} */ end;\r\n  if (dontAddNull) {\r\n    // stringToUTF8Array always appends null. If we don't want to do that, remember the\r\n    // character that existed at the location where the null will be placed, and restore\r\n    // that after the write (below).\r\n    end = buffer + lengthBytesUTF8(string);\r\n    lastChar = HEAP8[end];\r\n  }\r\n  stringToUTF8(string, buffer, Infinity);\r\n  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.\r\n}\r\n\r\nfunction writeArrayToMemory(array, buffer) {\r\n  HEAP8.set(array, buffer);\r\n}\r\n\r\nfunction writeAsciiToMemory(str, buffer, dontAddNull) {\r\n  for (var i = 0; i < str.length; ++i) {\r\n    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);\r\n  }\r\n  // Null-terminate the pointer to the HEAP.\r\n  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction demangle(func) {\r\n  return func;\r\n}\r\n\r\nfunction demangleAll(text) {\r\n  var regex =\r\n    /__Z[\\w\\d_]+/g;\r\n  return text.replace(regex,\r\n    function(x) {\r\n      var y = demangle(x);\r\n      return x === y ? x : (y + ' [' + x + ']');\r\n    });\r\n}\r\n\r\nfunction jsStackTrace() {\r\n  var err = new Error();\r\n  if (!err.stack) {\r\n    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,\r\n    // so try that as a special-case.\r\n    try {\r\n      throw new Error(0);\r\n    } catch(e) {\r\n      err = e;\r\n    }\r\n    if (!err.stack) {\r\n      return '(no stack trace available)';\r\n    }\r\n  }\r\n  return err.stack.toString();\r\n}\r\n\r\nfunction stackTrace() {\r\n  var js = jsStackTrace();\r\n  if (Module['extraStackTrace']) js += '\\n' + Module['extraStackTrace']();\r\n  return demangleAll(js);\r\n}\r\n\r\n\r\n\r\n// Memory management\r\n\r\nvar PAGE_SIZE = 16384;\r\nvar WASM_PAGE_SIZE = 65536;\r\nvar ASMJS_PAGE_SIZE = 16777216;\r\n\r\nfunction alignUp(x, multiple) {\r\n  if (x % multiple > 0) {\r\n    x += multiple - (x % multiple);\r\n  }\r\n  return x;\r\n}\r\n\r\nvar HEAP,\r\n/** @type {ArrayBuffer} */\r\n  buffer,\r\n/** @type {Int8Array} */\r\n  HEAP8,\r\n/** @type {Uint8Array} */\r\n  HEAPU8,\r\n/** @type {Int16Array} */\r\n  HEAP16,\r\n/** @type {Uint16Array} */\r\n  HEAPU16,\r\n/** @type {Int32Array} */\r\n  HEAP32,\r\n/** @type {Uint32Array} */\r\n  HEAPU32,\r\n/** @type {Float32Array} */\r\n  HEAPF32,\r\n/** @type {Float64Array} */\r\n  HEAPF64;\r\n\r\nfunction updateGlobalBufferViews() {\r\n  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);\r\n  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);\r\n  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);\r\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);\r\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);\r\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);\r\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);\r\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);\r\n}\r\n\r\n\r\nvar STATIC_BASE = 1024,\r\n    STACK_BASE = 1875744,\r\n    STACKTOP = STACK_BASE,\r\n    STACK_MAX = 7118624,\r\n    DYNAMIC_BASE = 7118624,\r\n    DYNAMICTOP_PTR = 1875712;\r\n\r\n\r\n\r\n\r\nvar TOTAL_STACK = 5242880;\r\n\r\nvar INITIAL_TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 134217728;\r\nif (INITIAL_TOTAL_MEMORY < TOTAL_STACK) err('TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + INITIAL_TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');\r\n\r\n// Initialize the runtime's memory\r\n\r\n\r\n\r\n\r\n\r\n\r\n  if (Module['wasmMemory']) {\r\n    wasmMemory = Module['wasmMemory'];\r\n  } else {\r\n    wasmMemory = new WebAssembly.Memory({\r\n      'initial': INITIAL_TOTAL_MEMORY / WASM_PAGE_SIZE\r\n    });\r\n  }\r\n\r\n\r\nif (wasmMemory) {\r\n  buffer = wasmMemory.buffer;\r\n}\r\n\r\n// If the user provides an incorrect length, just use that length instead rather than providing the user to\r\n// specifically provide the memory length with Module['TOTAL_MEMORY'].\r\nINITIAL_TOTAL_MEMORY = buffer.byteLength;\r\nupdateGlobalBufferViews();\r\n\r\nHEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Endianness check (note: assumes compiler arch was little-endian)\r\n\r\nfunction callRuntimeCallbacks(callbacks) {\r\n  while(callbacks.length > 0) {\r\n    var callback = callbacks.shift();\r\n    if (typeof callback == 'function') {\r\n      callback();\r\n      continue;\r\n    }\r\n    var func = callback.func;\r\n    if (typeof func === 'number') {\r\n      if (callback.arg === undefined) {\r\n        Module['dynCall_v'](func);\r\n      } else {\r\n        Module['dynCall_vi'](func, callback.arg);\r\n      }\r\n    } else {\r\n      func(callback.arg === undefined ? null : callback.arg);\r\n    }\r\n  }\r\n}\r\n\r\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\r\nvar __ATINIT__    = []; // functions called during startup\r\nvar __ATMAIN__    = []; // functions called when main() is to be run\r\nvar __ATEXIT__    = []; // functions called during shutdown\r\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\r\n\r\nvar runtimeInitialized = false;\r\nvar runtimeExited = false;\r\n\r\n\r\nfunction preRun() {\r\n  // compatibility - merge in anything from Module['preRun'] at this time\r\n  if (Module['preRun']) {\r\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\r\n    while (Module['preRun'].length) {\r\n      addOnPreRun(Module['preRun'].shift());\r\n    }\r\n  }\r\n  callRuntimeCallbacks(__ATPRERUN__);\r\n}\r\n\r\nfunction initRuntime() {\r\n  runtimeInitialized = true;\r\n  \r\n  callRuntimeCallbacks(__ATINIT__);\r\n}\r\n\r\nfunction preMain() {\r\n  \r\n  callRuntimeCallbacks(__ATMAIN__);\r\n}\r\n\r\nfunction exitRuntime() {\r\n  runtimeExited = true;\r\n}\r\n\r\nfunction postRun() {\r\n  // compatibility - merge in anything from Module['postRun'] at this time\r\n  if (Module['postRun']) {\r\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\r\n    while (Module['postRun'].length) {\r\n      addOnPostRun(Module['postRun'].shift());\r\n    }\r\n  }\r\n  callRuntimeCallbacks(__ATPOSTRUN__);\r\n}\r\n\r\nfunction addOnPreRun(cb) {\r\n  __ATPRERUN__.unshift(cb);\r\n}\r\n\r\nfunction addOnInit(cb) {\r\n  __ATINIT__.unshift(cb);\r\n}\r\n\r\nfunction addOnPreMain(cb) {\r\n  __ATMAIN__.unshift(cb);\r\n}\r\n\r\nfunction addOnExit(cb) {\r\n}\r\n\r\nfunction addOnPostRun(cb) {\r\n  __ATPOSTRUN__.unshift(cb);\r\n}\r\n\r\nfunction unSign(value, bits, ignore) {\r\n  if (value >= 0) {\r\n    return value;\r\n  }\r\n  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts\r\n                    : Math.pow(2, bits)         + value;\r\n}\r\nfunction reSign(value, bits, ignore) {\r\n  if (value <= 0) {\r\n    return value;\r\n  }\r\n  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32\r\n                        : Math.pow(2, bits-1);\r\n  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that\r\n                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors\r\n                                                       // TODO: In i64 mode 1, resign the two parts separately and safely\r\n    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts\r\n  }\r\n  return value;\r\n}\r\n\r\n\r\n\r\nvar Math_abs = Math.abs;\r\nvar Math_cos = Math.cos;\r\nvar Math_sin = Math.sin;\r\nvar Math_tan = Math.tan;\r\nvar Math_acos = Math.acos;\r\nvar Math_asin = Math.asin;\r\nvar Math_atan = Math.atan;\r\nvar Math_atan2 = Math.atan2;\r\nvar Math_exp = Math.exp;\r\nvar Math_log = Math.log;\r\nvar Math_sqrt = Math.sqrt;\r\nvar Math_ceil = Math.ceil;\r\nvar Math_floor = Math.floor;\r\nvar Math_pow = Math.pow;\r\nvar Math_imul = Math.imul;\r\nvar Math_fround = Math.fround;\r\nvar Math_round = Math.round;\r\nvar Math_min = Math.min;\r\nvar Math_max = Math.max;\r\nvar Math_clz32 = Math.clz32;\r\nvar Math_trunc = Math.trunc;\r\n\r\n\r\n\r\n// A counter of dependencies for calling run(). If we need to\r\n// do asynchronous work before running, increment this and\r\n// decrement it. Incrementing must happen in a place like\r\n// Module.preRun (used by emcc to add file preloading).\r\n// Note that you can add dependencies in preRun, even though\r\n// it happens right before run - run will be postponed until\r\n// the dependencies are met.\r\nvar runDependencies = 0;\r\nvar runDependencyWatcher = null;\r\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\r\n\r\nfunction getUniqueRunDependency(id) {\r\n  return id;\r\n}\r\n\r\nfunction addRunDependency(id) {\r\n  runDependencies++;\r\n  if (Module['monitorRunDependencies']) {\r\n    Module['monitorRunDependencies'](runDependencies);\r\n  }\r\n}\r\n\r\nfunction removeRunDependency(id) {\r\n  runDependencies--;\r\n  if (Module['monitorRunDependencies']) {\r\n    Module['monitorRunDependencies'](runDependencies);\r\n  }\r\n  if (runDependencies == 0) {\r\n    if (runDependencyWatcher !== null) {\r\n      clearInterval(runDependencyWatcher);\r\n      runDependencyWatcher = null;\r\n    }\r\n    if (dependenciesFulfilled) {\r\n      var callback = dependenciesFulfilled;\r\n      dependenciesFulfilled = null;\r\n      callback(); // can add another dependenciesFulfilled\r\n    }\r\n  }\r\n}\r\n\r\nModule[\"preloadedImages\"] = {}; // maps url to image data\r\nModule[\"preloadedAudios\"] = {}; // maps url to audio data\r\n\r\n\r\nvar memoryInitializer = null;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\r\n// Emscripten is available under two separate licenses, the MIT license and the\r\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\r\n// found in the LICENSE file.\r\n\r\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\r\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\r\n\r\n// Indicates whether filename is a base64 data URI.\r\nfunction isDataURI(filename) {\r\n  return String.prototype.startsWith ?\r\n      filename.startsWith(dataURIPrefix) :\r\n      filename.indexOf(dataURIPrefix) === 0;\r\n}\r\n\r\n\r\n\r\n\r\nvar wasmBinaryFile = 'Diablo.wasm';\r\nif (!isDataURI(wasmBinaryFile)) {\r\n  wasmBinaryFile = locateFile(wasmBinaryFile);\r\n}\r\n\r\nfunction getBinary() {\r\n  try {\r\n    if (Module['wasmBinary']) {\r\n      return new Uint8Array(Module['wasmBinary']);\r\n    }\r\n    if (readBinary) {\r\n      return readBinary(wasmBinaryFile);\r\n    } else {\r\n      throw \"both async and sync fetching of the wasm failed\";\r\n    }\r\n  }\r\n  catch (err) {\r\n    abort(err);\r\n  }\r\n}\r\n\r\nfunction getBinaryPromise() {\r\n  // if we don't have the binary yet, and have the Fetch api, use that\r\n  // in some environments, like Electron's render process, Fetch api may be present, but have a different context than expected, let's only use it on the Web\r\n  if (!Module['wasmBinary'] && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === 'function') {\r\n    return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {\r\n      if (!response['ok']) {\r\n        throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\r\n      }\r\n      return response['arrayBuffer']();\r\n    }).catch(function () {\r\n      return getBinary();\r\n    });\r\n  }\r\n  // Otherwise, getBinary should be able to get it synchronously\r\n  return new Promise(function(resolve, reject) {\r\n    resolve(getBinary());\r\n  });\r\n}\r\n\r\n\r\n\r\n// Create the wasm instance.\r\n// Receives the wasm imports, returns the exports.\r\nfunction createWasm(env) {\r\n\r\n  // prepare imports\r\n  var info = {\r\n    'env': env\r\n    ,\r\n    'global': {\r\n      'NaN': NaN,\r\n      'Infinity': Infinity\r\n    },\r\n    'global.Math': Math,\r\n    'asm2wasm': asm2wasmImports\r\n  };\r\n  // Load the wasm module and create an instance of using native support in the JS engine.\r\n  // handle a generated wasm instance, receiving its exports and\r\n  // performing other necessary setup\r\n  function receiveInstance(instance, module) {\r\n    var exports = instance.exports;\r\n    Module['asm'] = exports;\r\n    removeRunDependency('wasm-instantiate');\r\n  }\r\n  addRunDependency('wasm-instantiate');\r\n\r\n\r\n  function receiveInstantiatedSource(output) {\r\n    // 'output' is a WebAssemblyInstantiatedSource object which has both the module and instance.\r\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\r\n      // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\r\n      // When the regression is fixed, can restore the above USE_PTHREADS-enabled path.\r\n    receiveInstance(output['instance']);\r\n  }\r\n\r\n\r\n  function instantiateArrayBuffer(receiver) {\r\n    return getBinaryPromise().then(function(binary) {\r\n      return WebAssembly.instantiate(binary, info);\r\n    }).then(receiver, function(reason) {\r\n      err('failed to asynchronously prepare wasm: ' + reason);\r\n      abort(reason);\r\n    });\r\n  }\r\n\r\n  // Prefer streaming instantiation if available.\r\n  function instantiateAsync() {\r\n    if (!Module['wasmBinary'] &&\r\n        typeof WebAssembly.instantiateStreaming === 'function' &&\r\n        !isDataURI(wasmBinaryFile) &&\r\n        typeof fetch === 'function') {\r\n      fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function (response) {\r\n        return WebAssembly.instantiateStreaming(response, info)\r\n          .then(receiveInstantiatedSource, function(reason) {\r\n            // We expect the most common failure cause to be a bad MIME type for the binary,\r\n            // in which case falling back to ArrayBuffer instantiation should work.\r\n            err('wasm streaming compile failed: ' + reason);\r\n            err('falling back to ArrayBuffer instantiation');\r\n            instantiateArrayBuffer(receiveInstantiatedSource);\r\n          });\r\n      });\r\n    } else {\r\n      return instantiateArrayBuffer(receiveInstantiatedSource);\r\n    }\r\n  }\r\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\r\n  // to manually instantiate the Wasm module themselves. This allows pages to run the instantiation parallel\r\n  // to any other async startup actions they are performing.\r\n  if (Module['instantiateWasm']) {\r\n    try {\r\n      var exports = Module['instantiateWasm'](info, receiveInstance);\r\n      return exports;\r\n    } catch(e) {\r\n      err('Module.instantiateWasm callback failed with error: ' + e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  instantiateAsync();\r\n  return {}; // no exports yet; we'll fill them in later\r\n}\r\n\r\n// Provide an \"asm.js function\" for the application, called to \"link\" the asm.js module. We instantiate\r\n// the wasm module at that time, and it receives imports and provides exports and so forth, the app\r\n// doesn't need to care that it is wasm or asm.js.\r\n\r\nModule['asm'] = function(global, env, providedBuffer) {\r\n  // memory was already allocated (so js could use the buffer)\r\n  env['memory'] = wasmMemory\r\n  ;\r\n  // import table\r\n  env['table'] = wasmTable = new WebAssembly.Table({\r\n    'initial': 1116,\r\n    'maximum': 1116,\r\n    'element': 'anyfunc'\r\n  });\r\n  // With the wasm backend __memory_base and __table_base and only needed for\r\n  // relocatable output.\r\n  env['__memory_base'] = 1024; // tell the memory segments where to place themselves\r\n  // table starts at 0 by default (even in dynamic linking, for the main module)\r\n  env['__table_base'] = 0;\r\n\r\n  var exports = createWasm(env);\r\n  return exports;\r\n};\r\n\r\n// Globals used by JS i64 conversions\r\nvar tempDouble;\r\nvar tempI64;\r\n\r\n// === Body ===\r\n\r\nvar ASM_CONSTS = [function($0) { self.DApi.current_save_id($0); }];\r\n\r\nfunction _emscripten_asm_const_ii(code, a0) {\r\n  return ASM_CONSTS[code](a0);\r\n}\r\nfunction __api_close_keyboard(){ self.DApi.close_keyboard(); }\r\nfunction __api_open_keyboard(x0,y0,x1,y1,len){ self.DApi.open_keyboard(x0, y0, x1, y1, len); }\r\nfunction _api_create_sound(id,ptr,size){ self.DApi.create_sound(id, HEAPU8.slice(ptr, ptr + size)); }\r\nfunction _api_create_sound_float(id,ptr,samples,channels,rate){ self.DApi.create_sound_raw(id, HEAPF32.slice(ptr / 4, ptr / 4 + samples * channels), samples, channels, rate); }\r\nfunction _api_delete_sound(id){ self.DApi.delete_sound(id); }\r\nfunction _api_draw_begin(){ self.DApi.draw_begin(); }\r\nfunction _api_draw_belt(items){ self.DApi.draw_belt(HEAP32.subarray(items / 4, items / 4 + 8)); }\r\nfunction _api_draw_blit(x,y,w,h,ptr){ self.DApi.draw_blit(x, y, w, h, HEAPU8.subarray(ptr, ptr + w * h * 4)); }\r\nfunction _api_draw_clip_text(x0,y0,x1,y1){ self.DApi.draw_clip_text(x0, y0, x1, y1); }\r\nfunction _api_draw_end(){ self.DApi.draw_end(); }\r\nfunction _api_draw_text(x,y,ptr,color){ var end = HEAPU8.indexOf(0, ptr); var text = String.fromCharCode.apply(null, HEAPU8.subarray(ptr, end)); self.DApi.draw_text(x, y, text, color); }\r\nfunction _api_duplicate_sound(id,srcId){ self.DApi.duplicate_sound(id, srcId); }\r\nfunction _api_exit_game(){ self.DApi.exit_game(); }\r\nfunction _api_play_sound(id,volume,pan,loop){ self.DApi.play_sound(id, volume, pan, loop); }\r\nfunction _api_set_cursor(x,y){ self.DApi.set_cursor(x, y); }\r\nfunction _api_set_volume(id,volume){ self.DApi.set_volume(id, volume); }\r\nfunction _api_stop_sound(id){ self.DApi.stop_sound(id); }\r\nfunction _api_use_websocket(use){ self.DApi.use_websocket(use); }\r\nfunction _api_websocket_closed(){ return self.DApi.websocket_closed(); }\r\nfunction _api_websocket_send(ptr,size){ self.DApi.websocket_send(HEAPU8.subarray(ptr, ptr + size)); }\r\nfunction _exit_error(err){ var end = HEAPU8.indexOf( 0, err ); var text = String.fromCharCode.apply(null, HEAPU8.subarray( err, end )); self.DApi.exit_error( text ); }\r\nfunction _get_file_contents(path,ptr,offset,size){ var end = HEAPU8.indexOf( 0, path); var text = String.fromCharCode.apply(null, HEAPU8.subarray(path, end )); self.DApi.get_file_contents(text, HEAPU8.subarray(ptr, ptr + size), offset); }\r\nfunction _get_file_size(path){ var end = HEAPU8.indexOf( 0, path); var text = String.fromCharCode.apply(null, HEAPU8.subarray(path, end )); return self.DApi.get_file_size(text); }\r\nfunction _put_file_contents(path,ptr,size){ var end = HEAPU8.indexOf( 0, path); var text = String.fromCharCode.apply(null, HEAPU8.subarray(path, end)); self.DApi.put_file_contents(text, HEAPU8.slice(ptr, ptr + size)); }\r\nfunction _remove_file(path){ var end = HEAPU8.indexOf( 0, path); var text = String.fromCharCode.apply(null, HEAPU8.subarray(path, end )); self.DApi.remove_file( text ); }\r\nfunction _show_alert(err){ var end = HEAPU8.indexOf( 0, err ); var text = String.fromCharCode.apply( null, HEAPU8.subarray( err, end ) ); self.alert( text ); }\r\nfunction _trace_pop(){ if (self.WASM_TRACE) { self.WASM_TRACE.pop(); } }\r\nfunction _trace_push(ptr){ var end = HEAPU8.indexOf(0, ptr); var text = String.fromCharCode.apply(null, HEAPU8.subarray(ptr, end)); console.log(text); self.WASM_TRACE = self.WASM_TRACE || []; self.WASM_TRACE.push(text); }\r\n\r\n\r\n\r\n// STATICTOP = STATIC_BASE + 1874720;\r\n/* global initializers */  __ATINIT__.push({ func: function() { globalCtors() } });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* no memory initializer */\r\nvar tempDoublePtr = 1875728\r\n\r\nfunction copyTempFloat(ptr) { // functions, because inlining this code increases code size too much\r\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\r\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\r\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\r\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\r\n}\r\n\r\nfunction copyTempDouble(ptr) {\r\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\r\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\r\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\r\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\r\n  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];\r\n  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];\r\n  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];\r\n  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];\r\n}\r\n\r\n// {{PRE_LIBRARY}}\r\n\r\n\r\n  function ___assert_fail(condition, filename, line, func) {\r\n      abort('Assertion failed: ' + UTF8ToString(condition) + ', at: ' + [filename ? UTF8ToString(filename) : 'unknown filename', line, func ? UTF8ToString(func) : 'unknown function']);\r\n    }\r\n\r\n  function ___cxa_allocate_exception(size) {\r\n      return _malloc(size);\r\n    }\r\n\r\n  \r\n  var ___exception_infos={};\r\n  \r\n  var ___exception_caught= [];\r\n  \r\n  function ___exception_addRef(ptr) {\r\n      if (!ptr) return;\r\n      var info = ___exception_infos[ptr];\r\n      info.refcount++;\r\n    }\r\n  \r\n  function ___exception_deAdjust(adjusted) {\r\n      if (!adjusted || ___exception_infos[adjusted]) return adjusted;\r\n      for (var key in ___exception_infos) {\r\n        var ptr = +key; // the iteration key is a string, and if we throw this, it must be an integer as that is what we look for\r\n        var adj = ___exception_infos[ptr].adjusted;\r\n        var len = adj.length;\r\n        for (var i = 0; i < len; i++) {\r\n          if (adj[i] === adjusted) {\r\n            return ptr;\r\n          }\r\n        }\r\n      }\r\n      return adjusted;\r\n    }function ___cxa_begin_catch(ptr) {\r\n      var info = ___exception_infos[ptr];\r\n      if (info && !info.caught) {\r\n        info.caught = true;\r\n        __ZSt18uncaught_exceptionv.uncaught_exceptions--;\r\n      }\r\n      if (info) info.rethrown = false;\r\n      ___exception_caught.push(ptr);\r\n      ___exception_addRef(___exception_deAdjust(ptr));\r\n      return ptr;\r\n    }\r\n\r\n  \r\n  var ___exception_last=0;\r\n  \r\n  \r\n  function ___cxa_free_exception(ptr) {\r\n      try {\r\n        return _free(ptr);\r\n      } catch(e) {\r\n      }\r\n    }function ___exception_decRef(ptr) {\r\n      if (!ptr) return;\r\n      var info = ___exception_infos[ptr];\r\n      info.refcount--;\r\n      // A rethrown exception can reach refcount 0; it must not be discarded\r\n      // Its next handler will clear the rethrown flag and addRef it, prior to\r\n      // final decRef and destruction here\r\n      if (info.refcount === 0 && !info.rethrown) {\r\n        if (info.destructor) {\r\n          Module['dynCall_vi'](info.destructor, ptr);\r\n        }\r\n        delete ___exception_infos[ptr];\r\n        ___cxa_free_exception(ptr);\r\n      }\r\n    }\r\n  \r\n   function ___cxa_end_catch() {\r\n      // Clear state flag.\r\n      _setThrew(0);\r\n      // Call destructor if one is registered then clear it.\r\n      var ptr = ___exception_caught.pop();\r\n      if (ptr) {\r\n        ___exception_decRef(___exception_deAdjust(ptr));\r\n        ___exception_last = 0; // XXX in decRef?\r\n      }\r\n    }\r\n\r\n  \r\n  \r\n  function ___resumeException(ptr) {\r\n      if (!___exception_last) { ___exception_last = ptr; }\r\n      throw ptr;\r\n    }function ___cxa_find_matching_catch() {\r\n      var thrown = ___exception_last;\r\n      if (!thrown) {\r\n        // just pass through the null ptr\r\n        return ((setTempRet0(0),0)|0);\r\n      }\r\n      var info = ___exception_infos[thrown];\r\n      var throwntype = info.type;\r\n      if (!throwntype) {\r\n        // just pass through the thrown ptr\r\n        return ((setTempRet0(0),thrown)|0);\r\n      }\r\n      var typeArray = Array.prototype.slice.call(arguments);\r\n  \r\n      var pointer = ___cxa_is_pointer_type(throwntype);\r\n      // can_catch receives a **, add indirection\r\n      var buffer = 1875696;\r\n      HEAP32[((buffer)>>2)]=thrown;\r\n      thrown = buffer;\r\n      // The different catch blocks are denoted by different types.\r\n      // Due to inheritance, those types may not precisely match the\r\n      // type of the thrown object. Find one which matches, and\r\n      // return the type of the catch block which should be called.\r\n      for (var i = 0; i < typeArray.length; i++) {\r\n        if (typeArray[i] && ___cxa_can_catch(typeArray[i], throwntype, thrown)) {\r\n          thrown = HEAP32[((thrown)>>2)]; // undo indirection\r\n          info.adjusted.push(thrown);\r\n          return ((setTempRet0(typeArray[i]),thrown)|0);\r\n        }\r\n      }\r\n      // Shouldn't happen unless we have bogus data in typeArray\r\n      // or encounter a type for which emscripten doesn't have suitable\r\n      // typeinfo defined. Best-efforts match just in case.\r\n      thrown = HEAP32[((thrown)>>2)]; // undo indirection\r\n      return ((setTempRet0(throwntype),thrown)|0);\r\n    }\r\n  Module[\"___cxa_find_matching_catch\"] = ___cxa_find_matching_catch;function ___cxa_find_matching_catch_2(a0,a1\r\n  /*``*/) {\r\n  return ___cxa_find_matching_catch(a0,a1);\r\n  }\r\n\r\n  function ___cxa_find_matching_catch_3(a0,a1,a2\r\n  /*``*/) {\r\n  return ___cxa_find_matching_catch(a0,a1,a2);\r\n  }\r\n\r\n\r\n  function ___cxa_get_exception_ptr(ptr) {\r\n      // TODO: use info.adjusted?\r\n      return ptr;\r\n    }\r\n\r\n  function ___cxa_pure_virtual() {\r\n      ABORT = true;\r\n      throw 'Pure virtual function called!';\r\n    }\r\n\r\n  function ___cxa_throw(ptr, type, destructor) {\r\n      ___exception_infos[ptr] = {\r\n        ptr: ptr,\r\n        adjusted: [ptr],\r\n        type: type,\r\n        destructor: destructor,\r\n        refcount: 0,\r\n        caught: false,\r\n        rethrown: false\r\n      };\r\n      ___exception_last = ptr;\r\n      if (!(\"uncaught_exception\" in __ZSt18uncaught_exceptionv)) {\r\n        __ZSt18uncaught_exceptionv.uncaught_exceptions = 1;\r\n      } else {\r\n        __ZSt18uncaught_exceptionv.uncaught_exceptions++;\r\n      }\r\n      throw ptr;\r\n    }\r\n\r\n  function ___cxa_uncaught_exceptions() {\r\n      return __ZSt18uncaught_exceptionv.uncaught_exceptions;\r\n    }\r\n\r\n  function ___gxx_personality_v0() {\r\n    }\r\n\r\n  function ___lock() {}\r\n\r\n\r\n  \r\n  \r\n  var PATH={splitPath:function (filename) {\r\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n        return splitPathRe.exec(filename).slice(1);\r\n      },normalizeArray:function (parts, allowAboveRoot) {\r\n        // if the path tries to go above the root, `up` ends up > 0\r\n        var up = 0;\r\n        for (var i = parts.length - 1; i >= 0; i--) {\r\n          var last = parts[i];\r\n          if (last === '.') {\r\n            parts.splice(i, 1);\r\n          } else if (last === '..') {\r\n            parts.splice(i, 1);\r\n            up++;\r\n          } else if (up) {\r\n            parts.splice(i, 1);\r\n            up--;\r\n          }\r\n        }\r\n        // if the path is allowed to go above the root, restore leading ..s\r\n        if (allowAboveRoot) {\r\n          for (; up; up--) {\r\n            parts.unshift('..');\r\n          }\r\n        }\r\n        return parts;\r\n      },normalize:function (path) {\r\n        var isAbsolute = path.charAt(0) === '/',\r\n            trailingSlash = path.substr(-1) === '/';\r\n        // Normalize the path\r\n        path = PATH.normalizeArray(path.split('/').filter(function(p) {\r\n          return !!p;\r\n        }), !isAbsolute).join('/');\r\n        if (!path && !isAbsolute) {\r\n          path = '.';\r\n        }\r\n        if (path && trailingSlash) {\r\n          path += '/';\r\n        }\r\n        return (isAbsolute ? '/' : '') + path;\r\n      },dirname:function (path) {\r\n        var result = PATH.splitPath(path),\r\n            root = result[0],\r\n            dir = result[1];\r\n        if (!root && !dir) {\r\n          // No dirname whatsoever\r\n          return '.';\r\n        }\r\n        if (dir) {\r\n          // It has a dirname, strip trailing slash\r\n          dir = dir.substr(0, dir.length - 1);\r\n        }\r\n        return root + dir;\r\n      },basename:function (path) {\r\n        // EMSCRIPTEN return '/'' for '/', not an empty string\r\n        if (path === '/') return '/';\r\n        var lastSlash = path.lastIndexOf('/');\r\n        if (lastSlash === -1) return path;\r\n        return path.substr(lastSlash+1);\r\n      },extname:function (path) {\r\n        return PATH.splitPath(path)[3];\r\n      },join:function () {\r\n        var paths = Array.prototype.slice.call(arguments, 0);\r\n        return PATH.normalize(paths.join('/'));\r\n      },join2:function (l, r) {\r\n        return PATH.normalize(l + '/' + r);\r\n      }};var SYSCALLS={buffers:[null,[],[]],printChar:function (stream, curr) {\r\n        var buffer = SYSCALLS.buffers[stream];\r\n        if (curr === 0 || curr === 10) {\r\n          (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\r\n          buffer.length = 0;\r\n        } else {\r\n          buffer.push(curr);\r\n        }\r\n      },varargs:0,get:function (varargs) {\r\n        SYSCALLS.varargs += 4;\r\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\r\n        return ret;\r\n      },getStr:function () {\r\n        var ret = UTF8ToString(SYSCALLS.get());\r\n        return ret;\r\n      },get64:function () {\r\n        var low = SYSCALLS.get(), high = SYSCALLS.get();\r\n        return low;\r\n      },getZero:function () {\r\n        SYSCALLS.get();\r\n      }};function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;\r\n  try {\r\n   // llseek\r\n      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  function flush_NO_FILESYSTEM() {\r\n      // flush anything remaining in the buffers during shutdown\r\n      var fflush = Module[\"_fflush\"];\r\n      if (fflush) fflush(0);\r\n      var buffers = SYSCALLS.buffers;\r\n      if (buffers[1].length) SYSCALLS.printChar(1, 10);\r\n      if (buffers[2].length) SYSCALLS.printChar(2, 10);\r\n    }function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;\r\n  try {\r\n   // writev\r\n      // hack to support printf in SYSCALLS_REQUIRE_FILESYSTEM=0\r\n      var stream = SYSCALLS.get(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();\r\n      var ret = 0;\r\n      for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAP32[(((iov)+(i*8))>>2)];\r\n        var len = HEAP32[(((iov)+(i*8 + 4))>>2)];\r\n        for (var j = 0; j < len; j++) {\r\n          SYSCALLS.printChar(stream, HEAPU8[ptr+j]);\r\n        }\r\n        ret += len;\r\n      }\r\n      return ret;\r\n    } catch (e) {\r\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;\r\n  try {\r\n   // ioctl\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;\r\n  try {\r\n   // close\r\n      var stream = SYSCALLS.getStreamFromFD();\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___unlock() {}\r\n\r\n  function _abort() {\r\n      Module['abort']();\r\n    }\r\n\r\n  var _emscripten_asm_const_int=true;\r\n\r\n  function _emscripten_get_heap_size() {\r\n      return HEAP8.length;\r\n    }\r\n\r\n  function _exit(status) {\r\n      // void _exit(int status);\r\n      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html\r\n      exit(status);\r\n    }\r\n\r\n   \r\n\r\n  function _llvm_eh_typeid_for(type) {\r\n      return type;\r\n    }\r\n\r\n  function _llvm_trap() {\r\n      abort('trap!');\r\n    }\r\n\r\n  \r\n  function _emscripten_memcpy_big(dest, src, num) {\r\n      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);\r\n    }\r\n  \r\n   \r\n\r\n   \r\n\r\n   \r\n\r\n  \r\n  function ___setErrNo(value) {\r\n      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;\r\n      return value;\r\n    }\r\n  \r\n  \r\n  function abortOnCannotGrowMemory(requestedSize) {\r\n      abort('OOM');\r\n    }\r\n  \r\n  function emscripten_realloc_buffer(size) {\r\n      var PAGE_MULTIPLE = 65536;\r\n      size = alignUp(size, PAGE_MULTIPLE); // round up to wasm page size\r\n      var oldSize = buffer.byteLength;\r\n      // native wasm support\r\n      // note that this is *not* threadsafe. multiple threads can call .grow(), and each\r\n      // presents a delta, so in theory we may over-allocate here (e.g. if two threads\r\n      // ask to grow from 256MB to 512MB, we get 2 requests to add +256MB, and may end\r\n      // up growing to 768MB (even though we may have been able to make do with 512MB).\r\n      // TODO: consider decreasing the step sizes in emscripten_resize_heap\r\n      try {\r\n        var result = wasmMemory.grow((size - oldSize) / 65536); // .grow() takes a delta compared to the previous size\r\n        if (result !== (-1 | 0)) {\r\n          // success in native wasm memory growth, get the buffer from the memory\r\n          buffer = wasmMemory.buffer;\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } catch(e) {\r\n        return false;\r\n      }\r\n    }function _emscripten_resize_heap(requestedSize) {\r\n      var oldSize = _emscripten_get_heap_size();\r\n      // With pthreads, races can happen (another thread might increase the size in between), so return a failure, and let the caller retry.\r\n  \r\n  \r\n      var PAGE_MULTIPLE = 65536;\r\n      var LIMIT = 2147483648 - PAGE_MULTIPLE; // We can do one page short of 2GB as theoretical maximum.\r\n  \r\n      if (requestedSize > LIMIT) {\r\n        return false;\r\n      }\r\n  \r\n      var MIN_TOTAL_MEMORY = 16777216;\r\n      var newSize = Math.max(oldSize, MIN_TOTAL_MEMORY); // So the loop below will not be infinite, and minimum asm.js memory size is 16MB.\r\n  \r\n      // TODO: see realloc_buffer - for PTHREADS we may want to decrease these jumps\r\n      while (newSize < requestedSize) { // Keep incrementing the heap size as long as it's less than what is requested.\r\n        if (newSize <= 536870912) {\r\n          newSize = alignUp(2 * newSize, PAGE_MULTIPLE); // Simple heuristic: double until 1GB...\r\n        } else {\r\n          // ..., but after that, add smaller increments towards 2GB, which we cannot reach\r\n          newSize = Math.min(alignUp((3 * newSize + 2147483648) / 4, PAGE_MULTIPLE), LIMIT);\r\n        }\r\n  \r\n      }\r\n  \r\n  \r\n  \r\n  \r\n      if (!emscripten_realloc_buffer(newSize)) {\r\n        return false;\r\n      }\r\n  \r\n      updateGlobalBufferViews();\r\n  \r\n  \r\n  \r\n      return true;\r\n    } \r\n\r\n  function _time(ptr) {\r\n      var ret = (Date.now()/1000)|0;\r\n      if (ptr) {\r\n        HEAP32[((ptr)>>2)]=ret;\r\n      }\r\n      return ret;\r\n    }\r\nvar ASSERTIONS = false;\r\n\r\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\r\n// Emscripten is available under two separate licenses, the MIT license and the\r\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\r\n// found in the LICENSE file.\r\n\r\n/** @type {function(string, boolean=, number=)} */\r\nfunction intArrayFromString(stringy, dontAddNull, length) {\r\n  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\r\n  var u8array = new Array(len);\r\n  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\r\n  if (dontAddNull) u8array.length = numBytesWritten;\r\n  return u8array;\r\n}\r\n\r\nfunction intArrayToString(array) {\r\n  var ret = [];\r\n  for (var i = 0; i < array.length; i++) {\r\n    var chr = array[i];\r\n    if (chr > 0xFF) {\r\n      if (ASSERTIONS) {\r\n        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');\r\n      }\r\n      chr &= 0xFF;\r\n    }\r\n    ret.push(String.fromCharCode(chr));\r\n  }\r\n  return ret.join('');\r\n}\r\n\r\n\r\n// ASM_LIBRARY EXTERN PRIMITIVES: Int8Array,Int32Array\r\n\r\n\r\nfunction invoke_i(index) {\r\n  var sp = stackSave();\r\n  try {\r\n    return dynCall_i(index);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_ii(index,a1) {\r\n  var sp = stackSave();\r\n  try {\r\n    return dynCall_ii(index,a1);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iii(index,a1,a2) {\r\n  var sp = stackSave();\r\n  try {\r\n    return dynCall_iii(index,a1,a2);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiii(index,a1,a2,a3) {\r\n  var sp = stackSave();\r\n  try {\r\n    return dynCall_iiii(index,a1,a2,a3);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiiii(index,a1,a2,a3,a4) {\r\n  var sp = stackSave();\r\n  try {\r\n    return dynCall_iiiii(index,a1,a2,a3,a4);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiiiii(index,a1,a2,a3,a4,a5) {\r\n  var sp = stackSave();\r\n  try {\r\n    return dynCall_iiiiii(index,a1,a2,a3,a4,a5);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_ji(index,a1) {\r\n  var sp = stackSave();\r\n  try {\r\n    return dynCall_ji(index,a1);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_v(index) {\r\n  var sp = stackSave();\r\n  try {\r\n    dynCall_v(index);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_vi(index,a1) {\r\n  var sp = stackSave();\r\n  try {\r\n    dynCall_vi(index,a1);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_vii(index,a1,a2) {\r\n  var sp = stackSave();\r\n  try {\r\n    dynCall_vii(index,a1,a2);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viii(index,a1,a2,a3) {\r\n  var sp = stackSave();\r\n  try {\r\n    dynCall_viii(index,a1,a2,a3);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viiii(index,a1,a2,a3,a4) {\r\n  var sp = stackSave();\r\n  try {\r\n    dynCall_viiii(index,a1,a2,a3,a4);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viiiii(index,a1,a2,a3,a4,a5) {\r\n  var sp = stackSave();\r\n  try {\r\n    dynCall_viiiii(index,a1,a2,a3,a4,a5);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {\r\n  var sp = stackSave();\r\n  try {\r\n    dynCall_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viij(index,a1,a2,a3,a4) {\r\n  var sp = stackSave();\r\n  try {\r\n    dynCall_viij(index,a1,a2,a3,a4);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viji(index,a1,a2,a3,a4) {\r\n  var sp = stackSave();\r\n  try {\r\n    dynCall_viji(index,a1,a2,a3,a4);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nvar asmGlobalArg = {};\r\n\r\nvar asmLibraryArg = {\r\n  \"abort\": abort,\r\n  \"setTempRet0\": setTempRet0,\r\n  \"getTempRet0\": getTempRet0,\r\n  \"invoke_i\": invoke_i,\r\n  \"invoke_ii\": invoke_ii,\r\n  \"invoke_iii\": invoke_iii,\r\n  \"invoke_iiii\": invoke_iiii,\r\n  \"invoke_iiiii\": invoke_iiiii,\r\n  \"invoke_iiiiii\": invoke_iiiiii,\r\n  \"invoke_ji\": invoke_ji,\r\n  \"invoke_v\": invoke_v,\r\n  \"invoke_vi\": invoke_vi,\r\n  \"invoke_vii\": invoke_vii,\r\n  \"invoke_viii\": invoke_viii,\r\n  \"invoke_viiii\": invoke_viiii,\r\n  \"invoke_viiiii\": invoke_viiiii,\r\n  \"invoke_viiiiiii\": invoke_viiiiiii,\r\n  \"invoke_viij\": invoke_viij,\r\n  \"invoke_viji\": invoke_viji,\r\n  \"___assert_fail\": ___assert_fail,\r\n  \"___cxa_allocate_exception\": ___cxa_allocate_exception,\r\n  \"___cxa_begin_catch\": ___cxa_begin_catch,\r\n  \"___cxa_end_catch\": ___cxa_end_catch,\r\n  \"___cxa_find_matching_catch\": ___cxa_find_matching_catch,\r\n  \"___cxa_find_matching_catch_2\": ___cxa_find_matching_catch_2,\r\n  \"___cxa_find_matching_catch_3\": ___cxa_find_matching_catch_3,\r\n  \"___cxa_free_exception\": ___cxa_free_exception,\r\n  \"___cxa_get_exception_ptr\": ___cxa_get_exception_ptr,\r\n  \"___cxa_pure_virtual\": ___cxa_pure_virtual,\r\n  \"___cxa_throw\": ___cxa_throw,\r\n  \"___cxa_uncaught_exceptions\": ___cxa_uncaught_exceptions,\r\n  \"___exception_addRef\": ___exception_addRef,\r\n  \"___exception_deAdjust\": ___exception_deAdjust,\r\n  \"___exception_decRef\": ___exception_decRef,\r\n  \"___gxx_personality_v0\": ___gxx_personality_v0,\r\n  \"___lock\": ___lock,\r\n  \"___resumeException\": ___resumeException,\r\n  \"___setErrNo\": ___setErrNo,\r\n  \"___syscall140\": ___syscall140,\r\n  \"___syscall146\": ___syscall146,\r\n  \"___syscall54\": ___syscall54,\r\n  \"___syscall6\": ___syscall6,\r\n  \"___unlock\": ___unlock,\r\n  \"__api_close_keyboard\": __api_close_keyboard,\r\n  \"__api_open_keyboard\": __api_open_keyboard,\r\n  \"_abort\": _abort,\r\n  \"_api_create_sound\": _api_create_sound,\r\n  \"_api_create_sound_float\": _api_create_sound_float,\r\n  \"_api_delete_sound\": _api_delete_sound,\r\n  \"_api_draw_begin\": _api_draw_begin,\r\n  \"_api_draw_belt\": _api_draw_belt,\r\n  \"_api_draw_blit\": _api_draw_blit,\r\n  \"_api_draw_clip_text\": _api_draw_clip_text,\r\n  \"_api_draw_end\": _api_draw_end,\r\n  \"_api_draw_text\": _api_draw_text,\r\n  \"_api_duplicate_sound\": _api_duplicate_sound,\r\n  \"_api_exit_game\": _api_exit_game,\r\n  \"_api_play_sound\": _api_play_sound,\r\n  \"_api_set_cursor\": _api_set_cursor,\r\n  \"_api_set_volume\": _api_set_volume,\r\n  \"_api_stop_sound\": _api_stop_sound,\r\n  \"_api_use_websocket\": _api_use_websocket,\r\n  \"_api_websocket_closed\": _api_websocket_closed,\r\n  \"_api_websocket_send\": _api_websocket_send,\r\n  \"_emscripten_asm_const_ii\": _emscripten_asm_const_ii,\r\n  \"_emscripten_get_heap_size\": _emscripten_get_heap_size,\r\n  \"_emscripten_memcpy_big\": _emscripten_memcpy_big,\r\n  \"_emscripten_resize_heap\": _emscripten_resize_heap,\r\n  \"_exit\": _exit,\r\n  \"_exit_error\": _exit_error,\r\n  \"_get_file_contents\": _get_file_contents,\r\n  \"_get_file_size\": _get_file_size,\r\n  \"_llvm_eh_typeid_for\": _llvm_eh_typeid_for,\r\n  \"_llvm_trap\": _llvm_trap,\r\n  \"_put_file_contents\": _put_file_contents,\r\n  \"_remove_file\": _remove_file,\r\n  \"_show_alert\": _show_alert,\r\n  \"_time\": _time,\r\n  \"_trace_pop\": _trace_pop,\r\n  \"_trace_push\": _trace_push,\r\n  \"abortOnCannotGrowMemory\": abortOnCannotGrowMemory,\r\n  \"emscripten_realloc_buffer\": emscripten_realloc_buffer,\r\n  \"flush_NO_FILESYSTEM\": flush_NO_FILESYSTEM,\r\n  \"tempDoublePtr\": tempDoublePtr,\r\n  \"DYNAMICTOP_PTR\": DYNAMICTOP_PTR\r\n};\r\n// EMSCRIPTEN_START_ASM\r\nvar asm =Module[\"asm\"]// EMSCRIPTEN_END_ASM\r\n(asmGlobalArg, asmLibraryArg, buffer);\r\n\r\nModule[\"asm\"] = asm;\r\nvar _DApi_AllocPacket = Module[\"_DApi_AllocPacket\"] = function() {\r\n  return Module[\"asm\"][\"_DApi_AllocPacket\"].apply(null, arguments)\r\n};\r\n\r\nvar _DApi_Char = Module[\"_DApi_Char\"] = function() {\r\n  return Module[\"asm\"][\"_DApi_Char\"].apply(null, arguments)\r\n};\r\n\r\nvar _DApi_Init = Module[\"_DApi_Init\"] = function() {\r\n  return Module[\"asm\"][\"_DApi_Init\"].apply(null, arguments)\r\n};\r\n\r\nvar _DApi_Key = Module[\"_DApi_Key\"] = function() {\r\n  return Module[\"asm\"][\"_DApi_Key\"].apply(null, arguments)\r\n};\r\n\r\nvar _DApi_Mouse = Module[\"_DApi_Mouse\"] = function() {\r\n  return Module[\"asm\"][\"_DApi_Mouse\"].apply(null, arguments)\r\n};\r\n\r\nvar _DApi_Render = Module[\"_DApi_Render\"] = function() {\r\n  return Module[\"asm\"][\"_DApi_Render\"].apply(null, arguments)\r\n};\r\n\r\nvar _DApi_SyncText = Module[\"_DApi_SyncText\"] = function() {\r\n  return Module[\"asm\"][\"_DApi_SyncText\"].apply(null, arguments)\r\n};\r\n\r\nvar _DApi_SyncTextPtr = Module[\"_DApi_SyncTextPtr\"] = function() {\r\n  return Module[\"asm\"][\"_DApi_SyncTextPtr\"].apply(null, arguments)\r\n};\r\n\r\nvar _SNet_InitWebsocket = Module[\"_SNet_InitWebsocket\"] = function() {\r\n  return Module[\"asm\"][\"_SNet_InitWebsocket\"].apply(null, arguments)\r\n};\r\n\r\nvar _SNet_WebsocketStatus = Module[\"_SNet_WebsocketStatus\"] = function() {\r\n  return Module[\"asm\"][\"_SNet_WebsocketStatus\"].apply(null, arguments)\r\n};\r\n\r\nvar __ZSt18uncaught_exceptionv = Module[\"__ZSt18uncaught_exceptionv\"] = function() {\r\n  return Module[\"asm\"][\"__ZSt18uncaught_exceptionv\"].apply(null, arguments)\r\n};\r\n\r\nvar ___cxa_can_catch = Module[\"___cxa_can_catch\"] = function() {\r\n  return Module[\"asm\"][\"___cxa_can_catch\"].apply(null, arguments)\r\n};\r\n\r\nvar ___cxa_is_pointer_type = Module[\"___cxa_is_pointer_type\"] = function() {\r\n  return Module[\"asm\"][\"___cxa_is_pointer_type\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js___api_close_keyboard = Module[\"___em_js___api_close_keyboard\"] = function() {\r\n  return Module[\"asm\"][\"___em_js___api_close_keyboard\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js___api_open_keyboard = Module[\"___em_js___api_open_keyboard\"] = function() {\r\n  return Module[\"asm\"][\"___em_js___api_open_keyboard\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_create_sound = Module[\"___em_js__api_create_sound\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_create_sound\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_create_sound_float = Module[\"___em_js__api_create_sound_float\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_create_sound_float\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_delete_sound = Module[\"___em_js__api_delete_sound\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_delete_sound\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_draw_begin = Module[\"___em_js__api_draw_begin\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_draw_begin\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_draw_belt = Module[\"___em_js__api_draw_belt\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_draw_belt\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_draw_blit = Module[\"___em_js__api_draw_blit\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_draw_blit\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_draw_clip_text = Module[\"___em_js__api_draw_clip_text\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_draw_clip_text\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_draw_end = Module[\"___em_js__api_draw_end\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_draw_end\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_draw_text = Module[\"___em_js__api_draw_text\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_draw_text\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_duplicate_sound = Module[\"___em_js__api_duplicate_sound\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_duplicate_sound\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_exit_game = Module[\"___em_js__api_exit_game\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_exit_game\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_play_sound = Module[\"___em_js__api_play_sound\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_play_sound\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_set_cursor = Module[\"___em_js__api_set_cursor\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_set_cursor\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_set_volume = Module[\"___em_js__api_set_volume\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_set_volume\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_stop_sound = Module[\"___em_js__api_stop_sound\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_stop_sound\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_use_websocket = Module[\"___em_js__api_use_websocket\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_use_websocket\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_websocket_closed = Module[\"___em_js__api_websocket_closed\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_websocket_closed\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_websocket_send = Module[\"___em_js__api_websocket_send\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_websocket_send\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__exit_error = Module[\"___em_js__exit_error\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__exit_error\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__get_file_contents = Module[\"___em_js__get_file_contents\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__get_file_contents\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__get_file_size = Module[\"___em_js__get_file_size\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__get_file_size\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__put_file_contents = Module[\"___em_js__put_file_contents\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__put_file_contents\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__remove_file = Module[\"___em_js__remove_file\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__remove_file\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__show_alert = Module[\"___em_js__show_alert\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__show_alert\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__trace_pop = Module[\"___em_js__trace_pop\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__trace_pop\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__trace_push = Module[\"___em_js__trace_push\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__trace_push\"].apply(null, arguments)\r\n};\r\n\r\nvar _emscripten_replace_memory = Module[\"_emscripten_replace_memory\"] = function() {\r\n  return Module[\"asm\"][\"_emscripten_replace_memory\"].apply(null, arguments)\r\n};\r\n\r\nvar _free = Module[\"_free\"] = function() {\r\n  return Module[\"asm\"][\"_free\"].apply(null, arguments)\r\n};\r\n\r\nvar _llvm_bswap_i32 = Module[\"_llvm_bswap_i32\"] = function() {\r\n  return Module[\"asm\"][\"_llvm_bswap_i32\"].apply(null, arguments)\r\n};\r\n\r\nvar _malloc = Module[\"_malloc\"] = function() {\r\n  return Module[\"asm\"][\"_malloc\"].apply(null, arguments)\r\n};\r\n\r\nvar _memcpy = Module[\"_memcpy\"] = function() {\r\n  return Module[\"asm\"][\"_memcpy\"].apply(null, arguments)\r\n};\r\n\r\nvar _memmove = Module[\"_memmove\"] = function() {\r\n  return Module[\"asm\"][\"_memmove\"].apply(null, arguments)\r\n};\r\n\r\nvar _memset = Module[\"_memset\"] = function() {\r\n  return Module[\"asm\"][\"_memset\"].apply(null, arguments)\r\n};\r\n\r\nvar _sbrk = Module[\"_sbrk\"] = function() {\r\n  return Module[\"asm\"][\"_sbrk\"].apply(null, arguments)\r\n};\r\n\r\nvar _setThrew = Module[\"_setThrew\"] = function() {\r\n  return Module[\"asm\"][\"_setThrew\"].apply(null, arguments)\r\n};\r\n\r\nvar establishStackSpace = Module[\"establishStackSpace\"] = function() {\r\n  return Module[\"asm\"][\"establishStackSpace\"].apply(null, arguments)\r\n};\r\n\r\nvar globalCtors = Module[\"globalCtors\"] = function() {\r\n  return Module[\"asm\"][\"globalCtors\"].apply(null, arguments)\r\n};\r\n\r\nvar stackAlloc = Module[\"stackAlloc\"] = function() {\r\n  return Module[\"asm\"][\"stackAlloc\"].apply(null, arguments)\r\n};\r\n\r\nvar stackRestore = Module[\"stackRestore\"] = function() {\r\n  return Module[\"asm\"][\"stackRestore\"].apply(null, arguments)\r\n};\r\n\r\nvar stackSave = Module[\"stackSave\"] = function() {\r\n  return Module[\"asm\"][\"stackSave\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_i = Module[\"dynCall_i\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_i\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_ii = Module[\"dynCall_ii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_ii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_iidiiii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_iii = Module[\"dynCall_iii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_iii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_iiii = Module[\"dynCall_iiii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_iiii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_iiiii = Module[\"dynCall_iiiii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_iiiii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_iiiiii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_ji = Module[\"dynCall_ji\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_ji\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_jiji\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_v = Module[\"dynCall_v\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_v\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_vi = Module[\"dynCall_vi\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_vi\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_vii = Module[\"dynCall_vii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_vii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_viii = Module[\"dynCall_viii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_viii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_viiii = Module[\"dynCall_viiii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_viiii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_viiiii = Module[\"dynCall_viiiii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_viiiii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_viiiiii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_viiiiiii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_viiiiiiiii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_viiiiiiiiii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_viij = Module[\"dynCall_viij\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_viij\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_viji = Module[\"dynCall_viji\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_viji\"].apply(null, arguments)\r\n};\r\n;\r\n\r\n\r\n\r\n// === Auto-generated postamble setup entry stuff ===\r\n\r\nModule['asm'] = asm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Modularize mode returns a function, which can be called to\r\n// create instances. The instances provide a then() method,\r\n// must like a Promise, that receives a callback. The callback\r\n// is called when the module is ready to run, with the module\r\n// as a parameter. (Like a Promise, it also returns the module\r\n// so you can use the output of .then(..)).\r\nModule['then'] = function(func) {\r\n  // We may already be ready to run code at this time. if\r\n  // so, just queue a call to the callback.\r\n  if (Module['calledRun']) {\r\n    func(Module);\r\n  } else {\r\n    // we are not ready to call then() yet. we must call it\r\n    // at the same time we would call onRuntimeInitialized.\r\n    var old = Module['onRuntimeInitialized'];\r\n    Module['onRuntimeInitialized'] = function() {\r\n      if (old) old();\r\n      func(Module);\r\n    };\r\n  }\r\n  return Module;\r\n};\r\n\r\n/**\r\n * @constructor\r\n * @extends {Error}\r\n * @this {ExitStatus}\r\n */\r\nfunction ExitStatus(status) {\r\n  this.name = \"ExitStatus\";\r\n  this.message = \"Program terminated with exit(\" + status + \")\";\r\n  this.status = status;\r\n}\r\nExitStatus.prototype = new Error();\r\nExitStatus.prototype.constructor = ExitStatus;\r\n\r\nvar calledMain = false;\r\n\r\ndependenciesFulfilled = function runCaller() {\r\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\r\n  if (!Module['calledRun']) run();\r\n  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/** @type {function(Array=)} */\r\nfunction run(args) {\r\n  args = args || Module['arguments'];\r\n\r\n  if (runDependencies > 0) {\r\n    return;\r\n  }\r\n\r\n\r\n  preRun();\r\n\r\n  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later\r\n  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame\r\n\r\n  function doRun() {\r\n    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening\r\n    Module['calledRun'] = true;\r\n\r\n    if (ABORT) return;\r\n\r\n    initRuntime();\r\n\r\n    preMain();\r\n\r\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\r\n\r\n\r\n    postRun();\r\n  }\r\n\r\n  if (Module['setStatus']) {\r\n    Module['setStatus']('Running...');\r\n    setTimeout(function() {\r\n      setTimeout(function() {\r\n        Module['setStatus']('');\r\n      }, 1);\r\n      doRun();\r\n    }, 1);\r\n  } else {\r\n    doRun();\r\n  }\r\n}\r\nModule['run'] = run;\r\n\r\n\r\nfunction exit(status, implicit) {\r\n\r\n  // if this is just main exit-ing implicitly, and the status is 0, then we\r\n  // don't need to do anything here and can just leave. if the status is\r\n  // non-zero, though, then we need to report it.\r\n  // (we may have warned about this earlier, if a situation justifies doing so)\r\n  if (implicit && Module['noExitRuntime'] && status === 0) {\r\n    return;\r\n  }\r\n\r\n  if (Module['noExitRuntime']) {\r\n  } else {\r\n\r\n    ABORT = true;\r\n    EXITSTATUS = status;\r\n\r\n    exitRuntime();\r\n\r\n    if (Module['onExit']) Module['onExit'](status);\r\n  }\r\n\r\n  Module['quit'](status, new ExitStatus(status));\r\n}\r\n\r\nvar abortDecorators = [];\r\n\r\nfunction abort(what) {\r\n  if (Module['onAbort']) {\r\n    Module['onAbort'](what);\r\n  }\r\n\r\n  what += '';\r\n  out(what);\r\n  err(what);\r\n\r\n  ABORT = true;\r\n  EXITSTATUS = 1;\r\n\r\n  throw 'abort(' + what + '). Build with -s ASSERTIONS=1 for more info.';\r\n}\r\nModule['abort'] = abort;\r\n\r\nif (Module['preInit']) {\r\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\r\n  while (Module['preInit'].length > 0) {\r\n    Module['preInit'].pop()();\r\n  }\r\n}\r\n\r\n\r\n  Module[\"noExitRuntime\"] = true;\r\n\r\nrun();\r\n\r\n\r\n\r\n\r\n\r\n// {{MODULE_ADDITIONS}}\r\n\r\n\r\n\r\nModule['ready'] = new Promise(function (resolve, reject) {\r\n  delete Module['then']\r\n  Module['onAbort'] = function (what) {\r\n    reject(what)\r\n  }\r\n  addOnPostRun(function () {\r\n    resolve(Module)\r\n  })\r\n});\r\n\r\n\r\n\r\n  return Diablo\r\n}\r\n);\r\n})();\r\nif (typeof exports === 'object' && typeof module === 'object')\r\n      module.exports = Diablo;\r\n    else if (typeof define === 'function' && define['amd'])\r\n      define([], function() { return Diablo; });\r\n    else if (typeof exports === 'object')\r\n      exports[\"Diablo\"] = Diablo;\r\n    \n\n/*** EXPORTS FROM exports-loader ***/\n","module.exports = __webpack_public_path__ + \"static/media/DiabloSpawn.9c2373b2.wasm\";","\r\nvar DiabloSpawn = (function() {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  return (\r\nfunction(DiabloSpawn) {\r\n  DiabloSpawn = DiabloSpawn || {};\r\n\r\n// Copyright 2010 The Emscripten Authors.  All rights reserved.\r\n// Emscripten is available under two separate licenses, the MIT license and the\r\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\r\n// found in the LICENSE file.\r\n\r\n// The Module object: Our interface to the outside world. We import\r\n// and export values on it. There are various ways Module can be used:\r\n// 1. Not defined. We create it here\r\n// 2. A function parameter, function(Module) { ..generated code.. }\r\n// 3. pre-run appended it, var Module = {}; ..generated code..\r\n// 4. External script tag defines var Module.\r\n// We need to check if Module already exists (e.g. case 3 above).\r\n// Substitution will be replaced with actual code on later stage of the build,\r\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\r\n// Note that if you want to run closure, and also to use Module\r\n// after the generated code, you will need to define   var Module = {};\r\n// before the code. Then that object will be used in the code, and you\r\n// can continue to use Module afterwards as well.\r\nvar Module = typeof DiabloSpawn !== 'undefined' ? DiabloSpawn : {};\r\n\r\n// --pre-jses are emitted after the Module integration code, so that they can\r\n// refer to Module (if they choose; they can also define Module)\r\n\r\n\r\n// Sometimes an existing Module object exists with properties\r\n// meant to overwrite the default module functionality. Here\r\n// we collect those properties and reapply _after_ we configure\r\n// the current environment's defaults to avoid having to be so\r\n// defensive during initialization.\r\nvar moduleOverrides = {};\r\nvar key;\r\nfor (key in Module) {\r\n  if (Module.hasOwnProperty(key)) {\r\n    moduleOverrides[key] = Module[key];\r\n  }\r\n}\r\n\r\nModule['arguments'] = [];\r\nModule['thisProgram'] = './this.program';\r\nModule['quit'] = function(status, toThrow) {\r\n  throw toThrow;\r\n};\r\nModule['preRun'] = [];\r\nModule['postRun'] = [];\r\n\r\n// Determine the runtime environment we are in. You can customize this by\r\n// setting the ENVIRONMENT setting at compile time (see settings.js).\r\n\r\nvar ENVIRONMENT_IS_WEB = false;\r\nvar ENVIRONMENT_IS_WORKER = false;\r\nvar ENVIRONMENT_IS_NODE = false;\r\nvar ENVIRONMENT_HAS_NODE = false;\r\nvar ENVIRONMENT_IS_SHELL = false;\r\nENVIRONMENT_IS_WEB = typeof window === 'object';\r\nENVIRONMENT_IS_WORKER = typeof importScripts === 'function';\r\n// A web environment like Electron.js can have Node enabled, so we must\r\n// distinguish between Node-enabled environments and Node environments per se.\r\n// This will allow the former to do things like mount NODEFS.\r\n// Extended check using process.versions fixes issue #8816.\r\n// (Also makes redundant the original check that 'require' is a function.)\r\nENVIRONMENT_HAS_NODE = typeof process === 'object' && typeof process.versions === 'object' && typeof process.versions.node === 'string';\r\nENVIRONMENT_IS_NODE = ENVIRONMENT_HAS_NODE && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;\r\nENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\r\n\r\n\r\n\r\n// Three configurations we can be running in:\r\n// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)\r\n// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)\r\n// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)\r\n\r\n\r\n\r\n\r\n// `/` should be present at the end if `scriptDirectory` is not empty\r\nvar scriptDirectory = '';\r\nfunction locateFile(path) {\r\n  if (Module['locateFile']) {\r\n    return Module['locateFile'](path, scriptDirectory);\r\n  } else {\r\n    return scriptDirectory + path;\r\n  }\r\n}\r\n\r\n// Hooks that are implemented differently in different runtime environments.\r\nvar read_,\r\n    readAsync,\r\n    readBinary,\r\n    setWindowTitle;\r\n\r\nif (ENVIRONMENT_IS_NODE) {\r\n  scriptDirectory = __dirname + '/';\r\n\r\n  // Expose functionality in the same simple way that the shells work\r\n  // Note that we pollute the global namespace here, otherwise we break in node\r\n  var nodeFS;\r\n  var nodePath;\r\n\r\n  read_ = function shell_read(filename, binary) {\r\n    var ret;\r\n      if (!nodeFS) nodeFS = require('fs');\r\n      if (!nodePath) nodePath = require('path');\r\n      filename = nodePath['normalize'](filename);\r\n      ret = nodeFS['readFileSync'](filename);\r\n    return binary ? ret : ret.toString();\r\n  };\r\n\r\n  readBinary = function readBinary(filename) {\r\n    var ret = read_(filename, true);\r\n    if (!ret.buffer) {\r\n      ret = new Uint8Array(ret);\r\n    }\r\n    assert(ret.buffer);\r\n    return ret;\r\n  };\r\n\r\n  if (process['argv'].length > 1) {\r\n    Module['thisProgram'] = process['argv'][1].replace(/\\\\/g, '/');\r\n  }\r\n\r\n  Module['arguments'] = process['argv'].slice(2);\r\n\r\n  // MODULARIZE will export the module in the proper place outside, we don't need to export here\r\n\r\n  process['on']('uncaughtException', function(ex) {\r\n    // suppress ExitStatus exceptions from showing an error\r\n    if (!(ex instanceof ExitStatus)) {\r\n      throw ex;\r\n    }\r\n  });\r\n  // Currently node will swallow unhandled rejections, but this behavior is\r\n  // deprecated, and in the future it will exit with error status.\r\n  process['on']('unhandledRejection', abort);\r\n\r\n  Module['quit'] = function(status) {\r\n    process['exit'](status);\r\n  };\r\n\r\n  Module['inspect'] = function () { return '[Emscripten Module object]'; };\r\n} else\r\nif (ENVIRONMENT_IS_SHELL) {\r\n\r\n\r\n  if (typeof read != 'undefined') {\r\n    read_ = function shell_read(f) {\r\n      return read(f);\r\n    };\r\n  }\r\n\r\n  readBinary = function readBinary(f) {\r\n    var data;\r\n    if (typeof readbuffer === 'function') {\r\n      return new Uint8Array(readbuffer(f));\r\n    }\r\n    data = read(f, 'binary');\r\n    assert(typeof data === 'object');\r\n    return data;\r\n  };\r\n\r\n  if (typeof scriptArgs != 'undefined') {\r\n    Module['arguments'] = scriptArgs;\r\n  } else if (typeof arguments != 'undefined') {\r\n    Module['arguments'] = arguments;\r\n  }\r\n\r\n  if (typeof quit === 'function') {\r\n    Module['quit'] = function(status) {\r\n      quit(status);\r\n    }\r\n  }\r\n} else\r\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\r\n    scriptDirectory = self.location.href;\r\n  } else if (document.currentScript) { // web\r\n    scriptDirectory = document.currentScript.src;\r\n  }\r\n  // When MODULARIZE (and not _INSTANCE), this JS may be executed later, after document.currentScript\r\n  // is gone, so we saved it, and we use it here instead of any other info.\r\n  if (_scriptDir) {\r\n    scriptDirectory = _scriptDir;\r\n  }\r\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\r\n  // otherwise, slice off the final part of the url to find the script directory.\r\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\r\n  // and scriptDirectory will correctly be replaced with an empty string.\r\n  if (scriptDirectory.indexOf('blob:') !== 0) {\r\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf('/')+1);\r\n  } else {\r\n    scriptDirectory = '';\r\n  }\r\n\r\n\r\n  read_ = function shell_read(url) {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url, false);\r\n      xhr.send(null);\r\n      return xhr.responseText;\r\n  };\r\n\r\n  if (ENVIRONMENT_IS_WORKER) {\r\n    readBinary = function readBinary(url) {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url, false);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.send(null);\r\n        return new Uint8Array(xhr.response);\r\n    };\r\n  }\r\n\r\n  readAsync = function readAsync(url, onload, onerror) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open('GET', url, true);\r\n    xhr.responseType = 'arraybuffer';\r\n    xhr.onload = function xhr_onload() {\r\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\r\n        onload(xhr.response);\r\n        return;\r\n      }\r\n      onerror();\r\n    };\r\n    xhr.onerror = onerror;\r\n    xhr.send(null);\r\n  };\r\n\r\n  setWindowTitle = function(title) { document.title = title };\r\n} else\r\n{\r\n}\r\n\r\n// Set up the out() and err() hooks, which are how we can print to stdout or\r\n// stderr, respectively.\r\n// If the user provided Module.print or printErr, use that. Otherwise,\r\n// console.log is checked first, as 'print' on the web will open a print dialogue\r\n// printErr is preferable to console.warn (works better in shells)\r\n// bind(console) is necessary to fix IE/Edge closed dev tools panel behavior.\r\nvar out = Module['print'] || (typeof console !== 'undefined' ? console.log.bind(console) : (typeof print !== 'undefined' ? print : null));\r\nvar err = Module['printErr'] || (typeof printErr !== 'undefined' ? printErr : ((typeof console !== 'undefined' && console.warn.bind(console)) || out));\r\n\r\n// Merge back in the overrides\r\nfor (key in moduleOverrides) {\r\n  if (moduleOverrides.hasOwnProperty(key)) {\r\n    Module[key] = moduleOverrides[key];\r\n  }\r\n}\r\n// Free the object hierarchy contained in the overrides, this lets the GC\r\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\r\nmoduleOverrides = undefined;\r\n\r\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\r\n\r\n// TODO remove when SDL2 is fixed; also add the above assertion\r\n\r\n\r\n\r\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\r\n// Emscripten is available under two separate licenses, the MIT license and the\r\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\r\n// found in the LICENSE file.\r\n\r\n// {{PREAMBLE_ADDITIONS}}\r\n\r\nvar STACK_ALIGN = 16;\r\n\r\n\r\nfunction dynamicAlloc(size) {\r\n  var ret = HEAP32[DYNAMICTOP_PTR>>2];\r\n  var end = (ret + size + 15) & -16;\r\n  if (end > _emscripten_get_heap_size()) {\r\n    abort();\r\n  }\r\n  HEAP32[DYNAMICTOP_PTR>>2] = end;\r\n  return ret;\r\n}\r\n\r\nfunction alignMemory(size, factor) {\r\n  if (!factor) factor = STACK_ALIGN; // stack alignment (16-byte) by default\r\n  return Math.ceil(size / factor) * factor;\r\n}\r\n\r\nfunction getNativeTypeSize(type) {\r\n  switch (type) {\r\n    case 'i1': case 'i8': return 1;\r\n    case 'i16': return 2;\r\n    case 'i32': return 4;\r\n    case 'i64': return 8;\r\n    case 'float': return 4;\r\n    case 'double': return 8;\r\n    default: {\r\n      if (type[type.length-1] === '*') {\r\n        return 4; // A pointer\r\n      } else if (type[0] === 'i') {\r\n        var bits = parseInt(type.substr(1));\r\n        assert(bits % 8 === 0, 'getNativeTypeSize invalid bits ' + bits + ', type ' + type);\r\n        return bits / 8;\r\n      } else {\r\n        return 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction warnOnce(text) {\r\n  if (!warnOnce.shown) warnOnce.shown = {};\r\n  if (!warnOnce.shown[text]) {\r\n    warnOnce.shown[text] = 1;\r\n    err(text);\r\n  }\r\n}\r\n\r\nvar asm2wasmImports = { // special asm2wasm imports\r\n    \"f64-rem\": function(x, y) {\r\n        return x % y;\r\n    },\r\n    \"debugger\": function() {\r\n        debugger;\r\n    }\r\n};\r\n\r\n\r\n\r\nvar jsCallStartIndex = 1;\r\nvar functionPointers = new Array(0);\r\n\r\n// Wraps a JS function as a wasm function with a given signature.\r\n// In the future, we may get a WebAssembly.Function constructor. Until then,\r\n// we create a wasm module that takes the JS function as an import with a given\r\n// signature, and re-exports that as a wasm function.\r\nfunction convertJsFunctionToWasm(func, sig) {\r\n\r\n  // The module is static, with the exception of the type section, which is\r\n  // generated based on the signature passed in.\r\n  var typeSection = [\r\n    0x01, // id: section,\r\n    0x00, // length: 0 (placeholder)\r\n    0x01, // count: 1\r\n    0x60, // form: func\r\n  ];\r\n  var sigRet = sig.slice(0, 1);\r\n  var sigParam = sig.slice(1);\r\n  var typeCodes = {\r\n    'i': 0x7f, // i32\r\n    'j': 0x7e, // i64\r\n    'f': 0x7d, // f32\r\n    'd': 0x7c, // f64\r\n  };\r\n\r\n  // Parameters, length + signatures\r\n  typeSection.push(sigParam.length);\r\n  for (var i = 0; i < sigParam.length; ++i) {\r\n    typeSection.push(typeCodes[sigParam[i]]);\r\n  }\r\n\r\n  // Return values, length + signatures\r\n  // With no multi-return in MVP, either 0 (void) or 1 (anything else)\r\n  if (sigRet == 'v') {\r\n    typeSection.push(0x00);\r\n  } else {\r\n    typeSection = typeSection.concat([0x01, typeCodes[sigRet]]);\r\n  }\r\n\r\n  // Write the overall length of the type section back into the section header\r\n  // (excepting the 2 bytes for the section id and length)\r\n  typeSection[1] = typeSection.length - 2;\r\n\r\n  // Rest of the module is static\r\n  var bytes = new Uint8Array([\r\n    0x00, 0x61, 0x73, 0x6d, // magic (\"\\0asm\")\r\n    0x01, 0x00, 0x00, 0x00, // version: 1\r\n  ].concat(typeSection, [\r\n    0x02, 0x07, // import section\r\n      // (import \"e\" \"f\" (func 0 (type 0)))\r\n      0x01, 0x01, 0x65, 0x01, 0x66, 0x00, 0x00,\r\n    0x07, 0x05, // export section\r\n      // (export \"f\" (func 0 (type 0)))\r\n      0x01, 0x01, 0x66, 0x00, 0x00,\r\n  ]));\r\n\r\n   // We can compile this wasm module synchronously because it is very small.\r\n  // This accepts an import (at \"e.f\"), that it reroutes to an export (at \"f\")\r\n  var module = new WebAssembly.Module(bytes);\r\n  var instance = new WebAssembly.Instance(module, {\r\n    e: {\r\n      f: func\r\n    }\r\n  });\r\n  var wrappedFunc = instance.exports.f;\r\n  return wrappedFunc;\r\n}\r\n\r\n// Add a wasm function to the table.\r\nfunction addFunctionWasm(func, sig) {\r\n  var table = wasmTable;\r\n  var ret = table.length;\r\n\r\n  // Grow the table\r\n  try {\r\n    table.grow(1);\r\n  } catch (err) {\r\n    if (!err instanceof RangeError) {\r\n      throw err;\r\n    }\r\n    throw 'Unable to grow wasm table. Use a higher value for RESERVED_FUNCTION_POINTERS or set ALLOW_TABLE_GROWTH.';\r\n  }\r\n\r\n  // Insert new element\r\n  try {\r\n    // Attempting to call this with JS function will cause of table.set() to fail\r\n    table.set(ret, func);\r\n  } catch (err) {\r\n    if (!err instanceof TypeError) {\r\n      throw err;\r\n    }\r\n    assert(typeof sig !== 'undefined', 'Missing signature argument to addFunction');\r\n    var wrapped = convertJsFunctionToWasm(func, sig);\r\n    table.set(ret, wrapped);\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nfunction removeFunctionWasm(index) {\r\n  // TODO(sbc): Look into implementing this to allow re-using of table slots\r\n}\r\n\r\n// 'sig' parameter is required for the llvm backend but only when func is not\r\n// already a WebAssembly function.\r\nfunction addFunction(func, sig) {\r\n\r\n\r\n  var base = 0;\r\n  for (var i = base; i < base + 0; i++) {\r\n    if (!functionPointers[i]) {\r\n      functionPointers[i] = func;\r\n      return jsCallStartIndex + i;\r\n    }\r\n  }\r\n  throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';\r\n\r\n}\r\n\r\nfunction removeFunction(index) {\r\n\r\n  functionPointers[index-jsCallStartIndex] = null;\r\n}\r\n\r\nvar funcWrappers = {};\r\n\r\nfunction getFuncWrapper(func, sig) {\r\n  if (!func) return; // on null pointer, return undefined\r\n  assert(sig);\r\n  if (!funcWrappers[sig]) {\r\n    funcWrappers[sig] = {};\r\n  }\r\n  var sigCache = funcWrappers[sig];\r\n  if (!sigCache[func]) {\r\n    // optimize away arguments usage in common cases\r\n    if (sig.length === 1) {\r\n      sigCache[func] = function dynCall_wrapper() {\r\n        return dynCall(sig, func);\r\n      };\r\n    } else if (sig.length === 2) {\r\n      sigCache[func] = function dynCall_wrapper(arg) {\r\n        return dynCall(sig, func, [arg]);\r\n      };\r\n    } else {\r\n      // general case\r\n      sigCache[func] = function dynCall_wrapper() {\r\n        return dynCall(sig, func, Array.prototype.slice.call(arguments));\r\n      };\r\n    }\r\n  }\r\n  return sigCache[func];\r\n}\r\n\r\n\r\nfunction makeBigInt(low, high, unsigned) {\r\n  return unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0));\r\n}\r\n\r\nfunction dynCall(sig, ptr, args) {\r\n  if (args && args.length) {\r\n    return Module['dynCall_' + sig].apply(null, [ptr].concat(args));\r\n  } else {\r\n    return Module['dynCall_' + sig].call(null, ptr);\r\n  }\r\n}\r\n\r\nvar tempRet0 = 0;\r\n\r\nvar setTempRet0 = function(value) {\r\n  tempRet0 = value;\r\n};\r\n\r\nvar getTempRet0 = function() {\r\n  return tempRet0;\r\n};\r\n\r\n\r\nvar Runtime = {\r\n};\r\n\r\n// The address globals begin at. Very low in memory, for code size and optimization opportunities.\r\n// Above 0 is static memory, starting with globals.\r\n// Then the stack.\r\n// Then 'dynamic' memory for sbrk.\r\nvar GLOBAL_BASE = 1024;\r\n\r\n\r\n\r\n\r\n// === Preamble library stuff ===\r\n\r\n// Documentation for the public APIs defined in this file must be updated in:\r\n//    site/source/docs/api_reference/preamble.js.rst\r\n// A prebuilt local version of the documentation is available at:\r\n//    site/build/text/docs/api_reference/preamble.js.txt\r\n// You can also build docs locally as HTML or other formats in site/\r\n// An online HTML version (which may be of a different version of Emscripten)\r\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\r\n\r\n\r\n\r\nif (typeof WebAssembly !== 'object') {\r\n  err('no native wasm support detected');\r\n}\r\n\r\n\r\n// In MINIMAL_RUNTIME, setValue() and getValue() are only available when building with safe heap enabled, for heap safety checking.\r\n// In traditional runtime, setValue() and getValue() are always available (although their use is highly discouraged due to perf penalties)\r\n\r\n/** @type {function(number, number, string, boolean=)} */\r\nfunction setValue(ptr, value, type, noSafe) {\r\n  type = type || 'i8';\r\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\r\n    switch(type) {\r\n      case 'i1': HEAP8[((ptr)>>0)]=value; break;\r\n      case 'i8': HEAP8[((ptr)>>0)]=value; break;\r\n      case 'i16': HEAP16[((ptr)>>1)]=value; break;\r\n      case 'i32': HEAP32[((ptr)>>2)]=value; break;\r\n      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;\r\n      case 'float': HEAPF32[((ptr)>>2)]=value; break;\r\n      case 'double': HEAPF64[((ptr)>>3)]=value; break;\r\n      default: abort('invalid type for setValue: ' + type);\r\n    }\r\n}\r\n\r\n/** @type {function(number, string, boolean=)} */\r\nfunction getValue(ptr, type, noSafe) {\r\n  type = type || 'i8';\r\n  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit\r\n    switch(type) {\r\n      case 'i1': return HEAP8[((ptr)>>0)];\r\n      case 'i8': return HEAP8[((ptr)>>0)];\r\n      case 'i16': return HEAP16[((ptr)>>1)];\r\n      case 'i32': return HEAP32[((ptr)>>2)];\r\n      case 'i64': return HEAP32[((ptr)>>2)];\r\n      case 'float': return HEAPF32[((ptr)>>2)];\r\n      case 'double': return HEAPF64[((ptr)>>3)];\r\n      default: abort('invalid type for getValue: ' + type);\r\n    }\r\n  return null;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Wasm globals\r\n\r\nvar wasmMemory;\r\n\r\n// Potentially used for direct table calls.\r\nvar wasmTable;\r\n\r\n\r\n//========================================\r\n// Runtime essentials\r\n//========================================\r\n\r\n// whether we are quitting the application. no code should run after this.\r\n// set in exit() and abort()\r\nvar ABORT = false;\r\n\r\n// set by exit() and abort().  Passed to 'onExit' handler.\r\n// NOTE: This is also used as the process return code code in shell environments\r\n// but only when noExitRuntime is false.\r\nvar EXITSTATUS = 0;\r\n\r\n/** @type {function(*, string=)} */\r\nfunction assert(condition, text) {\r\n  if (!condition) {\r\n    abort('Assertion failed: ' + text);\r\n  }\r\n}\r\n\r\n// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)\r\nfunction getCFunc(ident) {\r\n  var func = Module['_' + ident]; // closure exported function\r\n  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');\r\n  return func;\r\n}\r\n\r\n// C calling interface.\r\nfunction ccall(ident, returnType, argTypes, args, opts) {\r\n  // For fast lookup of conversion functions\r\n  var toC = {\r\n    'string': function(str) {\r\n      var ret = 0;\r\n      if (str !== null && str !== undefined && str !== 0) { // null string\r\n        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\r\n        var len = (str.length << 2) + 1;\r\n        ret = stackAlloc(len);\r\n        stringToUTF8(str, ret, len);\r\n      }\r\n      return ret;\r\n    },\r\n    'array': function(arr) {\r\n      var ret = stackAlloc(arr.length);\r\n      writeArrayToMemory(arr, ret);\r\n      return ret;\r\n    }\r\n  };\r\n\r\n  function convertReturnValue(ret) {\r\n    if (returnType === 'string') return UTF8ToString(ret);\r\n    if (returnType === 'boolean') return Boolean(ret);\r\n    return ret;\r\n  }\r\n\r\n  var func = getCFunc(ident);\r\n  var cArgs = [];\r\n  var stack = 0;\r\n  if (args) {\r\n    for (var i = 0; i < args.length; i++) {\r\n      var converter = toC[argTypes[i]];\r\n      if (converter) {\r\n        if (stack === 0) stack = stackSave();\r\n        cArgs[i] = converter(args[i]);\r\n      } else {\r\n        cArgs[i] = args[i];\r\n      }\r\n    }\r\n  }\r\n  var ret = func.apply(null, cArgs);\r\n  ret = convertReturnValue(ret);\r\n  if (stack !== 0) stackRestore(stack);\r\n  return ret;\r\n}\r\n\r\nfunction cwrap(ident, returnType, argTypes, opts) {\r\n  argTypes = argTypes || [];\r\n  // When the function takes numbers and returns a number, we can just return\r\n  // the original function\r\n  var numericArgs = argTypes.every(function(type){ return type === 'number'});\r\n  var numericRet = returnType !== 'string';\r\n  if (numericRet && numericArgs && !opts) {\r\n    return getCFunc(ident);\r\n  }\r\n  return function() {\r\n    return ccall(ident, returnType, argTypes, arguments, opts);\r\n  }\r\n}\r\n\r\nvar ALLOC_NORMAL = 0; // Tries to use _malloc()\r\nvar ALLOC_STACK = 1; // Lives for the duration of the current function call\r\nvar ALLOC_DYNAMIC = 2; // Cannot be freed except through sbrk\r\nvar ALLOC_NONE = 3; // Do not allocate\r\n\r\n// allocate(): This is for internal use. You can use it yourself as well, but the interface\r\n//             is a little tricky (see docs right below). The reason is that it is optimized\r\n//             for multiple syntaxes to save space in generated code. So you should\r\n//             normally not use allocate(), and instead allocate memory using _malloc(),\r\n//             initialize it with setValue(), and so forth.\r\n// @slab: An array of data, or a number. If a number, then the size of the block to allocate,\r\n//        in *bytes* (note that this is sometimes confusing: the next parameter does not\r\n//        affect this!)\r\n// @types: Either an array of types, one for each byte (or 0 if no type at that position),\r\n//         or a single type which is used for the entire block. This only matters if there\r\n//         is initial data - if @slab is a number, then this does not matter at all and is\r\n//         ignored.\r\n// @allocator: How to allocate memory, see ALLOC_*\r\n/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */\r\nfunction allocate(slab, types, allocator, ptr) {\r\n  var zeroinit, size;\r\n  if (typeof slab === 'number') {\r\n    zeroinit = true;\r\n    size = slab;\r\n  } else {\r\n    zeroinit = false;\r\n    size = slab.length;\r\n  }\r\n\r\n  var singleType = typeof types === 'string' ? types : null;\r\n\r\n  var ret;\r\n  if (allocator == ALLOC_NONE) {\r\n    ret = ptr;\r\n  } else {\r\n    ret = [_malloc,\r\n    stackAlloc,\r\n    dynamicAlloc][allocator](Math.max(size, singleType ? 1 : types.length));\r\n  }\r\n\r\n  if (zeroinit) {\r\n    var stop;\r\n    ptr = ret;\r\n    assert((ret & 3) == 0);\r\n    stop = ret + (size & ~3);\r\n    for (; ptr < stop; ptr += 4) {\r\n      HEAP32[((ptr)>>2)]=0;\r\n    }\r\n    stop = ret + size;\r\n    while (ptr < stop) {\r\n      HEAP8[((ptr++)>>0)]=0;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  if (singleType === 'i8') {\r\n    if (slab.subarray || slab.slice) {\r\n      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);\r\n    } else {\r\n      HEAPU8.set(new Uint8Array(slab), ret);\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  var i = 0, type, typeSize, previousType;\r\n  while (i < size) {\r\n    var curr = slab[i];\r\n\r\n    type = singleType || types[i];\r\n    if (type === 0) {\r\n      i++;\r\n      continue;\r\n    }\r\n\r\n    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later\r\n\r\n    setValue(ret+i, curr, type);\r\n\r\n    // no need to look up size unless type changes, so cache it\r\n    if (previousType !== type) {\r\n      typeSize = getNativeTypeSize(type);\r\n      previousType = type;\r\n    }\r\n    i += typeSize;\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready\r\nfunction getMemory(size) {\r\n  if (!runtimeInitialized) return dynamicAlloc(size);\r\n  return _malloc(size);\r\n}\r\n\r\n\r\n\r\n\r\n/** @type {function(number, number=)} */\r\nfunction Pointer_stringify(ptr, length) {\r\n  abort(\"this function has been removed - you should use UTF8ToString(ptr, maxBytesToRead) instead!\");\r\n}\r\n\r\n// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns\r\n// a copy of that string as a Javascript String object.\r\n\r\nfunction AsciiToString(ptr) {\r\n  var str = '';\r\n  while (1) {\r\n    var ch = HEAPU8[((ptr++)>>0)];\r\n    if (!ch) return str;\r\n    str += String.fromCharCode(ch);\r\n  }\r\n}\r\n\r\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\r\n// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.\r\n\r\nfunction stringToAscii(str, outPtr) {\r\n  return writeAsciiToMemory(str, outPtr, false);\r\n}\r\n\r\n\r\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns\r\n// a copy of that string as a Javascript String object.\r\n\r\nvar UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;\r\n\r\n/**\r\n * @param {number} idx\r\n * @param {number=} maxBytesToRead\r\n * @return {string}\r\n */\r\nfunction UTF8ArrayToString(u8Array, idx, maxBytesToRead) {\r\n  var endIdx = idx + maxBytesToRead;\r\n  var endPtr = idx;\r\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\r\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\r\n  // (As a tiny code save trick, compare endPtr against endIdx using a negation, so that undefined means Infinity)\r\n  while (u8Array[endPtr] && !(endPtr >= endIdx)) ++endPtr;\r\n\r\n  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {\r\n    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));\r\n  } else {\r\n    var str = '';\r\n    // If building with TextDecoder, we have already computed the string length above, so test loop end condition against that\r\n    while (idx < endPtr) {\r\n      // For UTF8 byte structure, see:\r\n      // http://en.wikipedia.org/wiki/UTF-8#Description\r\n      // https://www.ietf.org/rfc/rfc2279.txt\r\n      // https://tools.ietf.org/html/rfc3629\r\n      var u0 = u8Array[idx++];\r\n      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\r\n      var u1 = u8Array[idx++] & 63;\r\n      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\r\n      var u2 = u8Array[idx++] & 63;\r\n      if ((u0 & 0xF0) == 0xE0) {\r\n        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\r\n      } else {\r\n        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (u8Array[idx++] & 63);\r\n      }\r\n\r\n      if (u0 < 0x10000) {\r\n        str += String.fromCharCode(u0);\r\n      } else {\r\n        var ch = u0 - 0x10000;\r\n        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\r\n      }\r\n    }\r\n  }\r\n  return str;\r\n}\r\n\r\n// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns a\r\n// copy of that string as a Javascript String object.\r\n// maxBytesToRead: an optional length that specifies the maximum number of bytes to read. You can omit\r\n//                 this parameter to scan the string until the first \\0 byte. If maxBytesToRead is\r\n//                 passed, and the string at [ptr, ptr+maxBytesToReadr[ contains a null byte in the\r\n//                 middle, then the string will cut short at that byte index (i.e. maxBytesToRead will\r\n//                 not produce a string of exact length [ptr, ptr+maxBytesToRead[)\r\n//                 N.B. mixing frequent uses of UTF8ToString() with and without maxBytesToRead may\r\n//                 throw JS JIT optimizations off, so it is worth to consider consistently using one\r\n//                 style or the other.\r\n/**\r\n * @param {number} ptr\r\n * @param {number=} maxBytesToRead\r\n * @return {string}\r\n */\r\nfunction UTF8ToString(ptr, maxBytesToRead) {\r\n  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\r\n}\r\n\r\n// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',\r\n// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.\r\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\r\n// Parameters:\r\n//   str: the Javascript string to copy.\r\n//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.\r\n//   outIdx: The starting offset in the array to begin the copying.\r\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array.\r\n//                    This count should include the null terminator,\r\n//                    i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.\r\n//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.\r\n// Returns the number of bytes written, EXCLUDING the null terminator.\r\n\r\nfunction stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {\r\n  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.\r\n    return 0;\r\n\r\n  var startIdx = outIdx;\r\n  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629\r\n    var u = str.charCodeAt(i); // possibly a lead surrogate\r\n    if (u >= 0xD800 && u <= 0xDFFF) {\r\n      var u1 = str.charCodeAt(++i);\r\n      u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\r\n    }\r\n    if (u <= 0x7F) {\r\n      if (outIdx >= endIdx) break;\r\n      outU8Array[outIdx++] = u;\r\n    } else if (u <= 0x7FF) {\r\n      if (outIdx + 1 >= endIdx) break;\r\n      outU8Array[outIdx++] = 0xC0 | (u >> 6);\r\n      outU8Array[outIdx++] = 0x80 | (u & 63);\r\n    } else if (u <= 0xFFFF) {\r\n      if (outIdx + 2 >= endIdx) break;\r\n      outU8Array[outIdx++] = 0xE0 | (u >> 12);\r\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n      outU8Array[outIdx++] = 0x80 | (u & 63);\r\n    } else {\r\n      if (outIdx + 3 >= endIdx) break;\r\n      outU8Array[outIdx++] = 0xF0 | (u >> 18);\r\n      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);\r\n      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n      outU8Array[outIdx++] = 0x80 | (u & 63);\r\n    }\r\n  }\r\n  // Null-terminate the pointer to the buffer.\r\n  outU8Array[outIdx] = 0;\r\n  return outIdx - startIdx;\r\n}\r\n\r\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\r\n// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.\r\n// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.\r\n// Returns the number of bytes written, EXCLUDING the null terminator.\r\n\r\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\r\n  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\r\n}\r\n\r\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.\r\nfunction lengthBytesUTF8(str) {\r\n  var len = 0;\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    var u = str.charCodeAt(i); // possibly a lead surrogate\r\n    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);\r\n    if (u <= 0x7F) ++len;\r\n    else if (u <= 0x7FF) len += 2;\r\n    else if (u <= 0xFFFF) len += 3;\r\n    else len += 4;\r\n  }\r\n  return len;\r\n}\r\n\r\n\r\n// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns\r\n// a copy of that string as a Javascript String object.\r\n\r\nvar UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;\r\nfunction UTF16ToString(ptr) {\r\n  var endPtr = ptr;\r\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.\r\n  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.\r\n  var idx = endPtr >> 1;\r\n  while (HEAP16[idx]) ++idx;\r\n  endPtr = idx << 1;\r\n\r\n  if (endPtr - ptr > 32 && UTF16Decoder) {\r\n    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\r\n  } else {\r\n    var i = 0;\r\n\r\n    var str = '';\r\n    while (1) {\r\n      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];\r\n      if (codeUnit == 0) return str;\r\n      ++i;\r\n      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.\r\n      str += String.fromCharCode(codeUnit);\r\n    }\r\n  }\r\n}\r\n\r\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\r\n// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.\r\n// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.\r\n// Parameters:\r\n//   str: the Javascript string to copy.\r\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\r\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\r\n//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.\r\n//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.\r\n// Returns the number of bytes written, EXCLUDING the null terminator.\r\n\r\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\r\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\r\n  if (maxBytesToWrite === undefined) {\r\n    maxBytesToWrite = 0x7FFFFFFF;\r\n  }\r\n  if (maxBytesToWrite < 2) return 0;\r\n  maxBytesToWrite -= 2; // Null terminator.\r\n  var startPtr = outPtr;\r\n  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;\r\n  for (var i = 0; i < numCharsToWrite; ++i) {\r\n    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.\r\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\r\n    HEAP16[((outPtr)>>1)]=codeUnit;\r\n    outPtr += 2;\r\n  }\r\n  // Null-terminate the pointer to the HEAP.\r\n  HEAP16[((outPtr)>>1)]=0;\r\n  return outPtr - startPtr;\r\n}\r\n\r\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\r\n\r\nfunction lengthBytesUTF16(str) {\r\n  return str.length*2;\r\n}\r\n\r\nfunction UTF32ToString(ptr) {\r\n  var i = 0;\r\n\r\n  var str = '';\r\n  while (1) {\r\n    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];\r\n    if (utf32 == 0)\r\n      return str;\r\n    ++i;\r\n    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    if (utf32 >= 0x10000) {\r\n      var ch = utf32 - 0x10000;\r\n      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\r\n    } else {\r\n      str += String.fromCharCode(utf32);\r\n    }\r\n  }\r\n}\r\n\r\n// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',\r\n// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.\r\n// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.\r\n// Parameters:\r\n//   str: the Javascript string to copy.\r\n//   outPtr: Byte address in Emscripten HEAP where to write the string to.\r\n//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null\r\n//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.\r\n//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.\r\n// Returns the number of bytes written, EXCLUDING the null terminator.\r\n\r\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\r\n  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.\r\n  if (maxBytesToWrite === undefined) {\r\n    maxBytesToWrite = 0x7FFFFFFF;\r\n  }\r\n  if (maxBytesToWrite < 4) return 0;\r\n  var startPtr = outPtr;\r\n  var endPtr = startPtr + maxBytesToWrite - 4;\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate\r\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {\r\n      var trailSurrogate = str.charCodeAt(++i);\r\n      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);\r\n    }\r\n    HEAP32[((outPtr)>>2)]=codeUnit;\r\n    outPtr += 4;\r\n    if (outPtr + 4 > endPtr) break;\r\n  }\r\n  // Null-terminate the pointer to the HEAP.\r\n  HEAP32[((outPtr)>>2)]=0;\r\n  return outPtr - startPtr;\r\n}\r\n\r\n// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.\r\n\r\nfunction lengthBytesUTF32(str) {\r\n  var len = 0;\r\n  for (var i = 0; i < str.length; ++i) {\r\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.\r\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n    var codeUnit = str.charCodeAt(i);\r\n    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.\r\n    len += 4;\r\n  }\r\n\r\n  return len;\r\n}\r\n\r\n// Allocate heap space for a JS string, and write it there.\r\n// It is the responsibility of the caller to free() that memory.\r\nfunction allocateUTF8(str) {\r\n  var size = lengthBytesUTF8(str) + 1;\r\n  var ret = _malloc(size);\r\n  if (ret) stringToUTF8Array(str, HEAP8, ret, size);\r\n  return ret;\r\n}\r\n\r\n// Allocate stack space for a JS string, and write it there.\r\nfunction allocateUTF8OnStack(str) {\r\n  var size = lengthBytesUTF8(str) + 1;\r\n  var ret = stackAlloc(size);\r\n  stringToUTF8Array(str, HEAP8, ret, size);\r\n  return ret;\r\n}\r\n\r\n// Deprecated: This function should not be called because it is unsafe and does not provide\r\n// a maximum length limit of how many bytes it is allowed to write. Prefer calling the\r\n// function stringToUTF8Array() instead, which takes in a maximum length that can be used\r\n// to be secure from out of bounds writes.\r\n/** @deprecated */\r\nfunction writeStringToMemory(string, buffer, dontAddNull) {\r\n  warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');\r\n\r\n  var /** @type {number} */ lastChar, /** @type {number} */ end;\r\n  if (dontAddNull) {\r\n    // stringToUTF8Array always appends null. If we don't want to do that, remember the\r\n    // character that existed at the location where the null will be placed, and restore\r\n    // that after the write (below).\r\n    end = buffer + lengthBytesUTF8(string);\r\n    lastChar = HEAP8[end];\r\n  }\r\n  stringToUTF8(string, buffer, Infinity);\r\n  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.\r\n}\r\n\r\nfunction writeArrayToMemory(array, buffer) {\r\n  HEAP8.set(array, buffer);\r\n}\r\n\r\nfunction writeAsciiToMemory(str, buffer, dontAddNull) {\r\n  for (var i = 0; i < str.length; ++i) {\r\n    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);\r\n  }\r\n  // Null-terminate the pointer to the HEAP.\r\n  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction demangle(func) {\r\n  return func;\r\n}\r\n\r\nfunction demangleAll(text) {\r\n  var regex =\r\n    /__Z[\\w\\d_]+/g;\r\n  return text.replace(regex,\r\n    function(x) {\r\n      var y = demangle(x);\r\n      return x === y ? x : (y + ' [' + x + ']');\r\n    });\r\n}\r\n\r\nfunction jsStackTrace() {\r\n  var err = new Error();\r\n  if (!err.stack) {\r\n    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,\r\n    // so try that as a special-case.\r\n    try {\r\n      throw new Error(0);\r\n    } catch(e) {\r\n      err = e;\r\n    }\r\n    if (!err.stack) {\r\n      return '(no stack trace available)';\r\n    }\r\n  }\r\n  return err.stack.toString();\r\n}\r\n\r\nfunction stackTrace() {\r\n  var js = jsStackTrace();\r\n  if (Module['extraStackTrace']) js += '\\n' + Module['extraStackTrace']();\r\n  return demangleAll(js);\r\n}\r\n\r\n\r\n\r\n// Memory management\r\n\r\nvar PAGE_SIZE = 16384;\r\nvar WASM_PAGE_SIZE = 65536;\r\nvar ASMJS_PAGE_SIZE = 16777216;\r\n\r\nfunction alignUp(x, multiple) {\r\n  if (x % multiple > 0) {\r\n    x += multiple - (x % multiple);\r\n  }\r\n  return x;\r\n}\r\n\r\nvar HEAP,\r\n/** @type {ArrayBuffer} */\r\n  buffer,\r\n/** @type {Int8Array} */\r\n  HEAP8,\r\n/** @type {Uint8Array} */\r\n  HEAPU8,\r\n/** @type {Int16Array} */\r\n  HEAP16,\r\n/** @type {Uint16Array} */\r\n  HEAPU16,\r\n/** @type {Int32Array} */\r\n  HEAP32,\r\n/** @type {Uint32Array} */\r\n  HEAPU32,\r\n/** @type {Float32Array} */\r\n  HEAPF32,\r\n/** @type {Float64Array} */\r\n  HEAPF64;\r\n\r\nfunction updateGlobalBufferViews() {\r\n  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);\r\n  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);\r\n  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);\r\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);\r\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);\r\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);\r\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);\r\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);\r\n}\r\n\r\n\r\nvar STATIC_BASE = 1024,\r\n    STACK_BASE = 1850928,\r\n    STACKTOP = STACK_BASE,\r\n    STACK_MAX = 7093808,\r\n    DYNAMIC_BASE = 7093808,\r\n    DYNAMICTOP_PTR = 1850896;\r\n\r\n\r\n\r\n\r\nvar TOTAL_STACK = 5242880;\r\n\r\nvar INITIAL_TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 134217728;\r\nif (INITIAL_TOTAL_MEMORY < TOTAL_STACK) err('TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + INITIAL_TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');\r\n\r\n// Initialize the runtime's memory\r\n\r\n\r\n\r\n\r\n\r\n\r\n  if (Module['wasmMemory']) {\r\n    wasmMemory = Module['wasmMemory'];\r\n  } else {\r\n    wasmMemory = new WebAssembly.Memory({\r\n      'initial': INITIAL_TOTAL_MEMORY / WASM_PAGE_SIZE\r\n    });\r\n  }\r\n\r\n\r\nif (wasmMemory) {\r\n  buffer = wasmMemory.buffer;\r\n}\r\n\r\n// If the user provides an incorrect length, just use that length instead rather than providing the user to\r\n// specifically provide the memory length with Module['TOTAL_MEMORY'].\r\nINITIAL_TOTAL_MEMORY = buffer.byteLength;\r\nupdateGlobalBufferViews();\r\n\r\nHEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Endianness check (note: assumes compiler arch was little-endian)\r\n\r\nfunction callRuntimeCallbacks(callbacks) {\r\n  while(callbacks.length > 0) {\r\n    var callback = callbacks.shift();\r\n    if (typeof callback == 'function') {\r\n      callback();\r\n      continue;\r\n    }\r\n    var func = callback.func;\r\n    if (typeof func === 'number') {\r\n      if (callback.arg === undefined) {\r\n        Module['dynCall_v'](func);\r\n      } else {\r\n        Module['dynCall_vi'](func, callback.arg);\r\n      }\r\n    } else {\r\n      func(callback.arg === undefined ? null : callback.arg);\r\n    }\r\n  }\r\n}\r\n\r\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\r\nvar __ATINIT__    = []; // functions called during startup\r\nvar __ATMAIN__    = []; // functions called when main() is to be run\r\nvar __ATEXIT__    = []; // functions called during shutdown\r\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\r\n\r\nvar runtimeInitialized = false;\r\nvar runtimeExited = false;\r\n\r\n\r\nfunction preRun() {\r\n  // compatibility - merge in anything from Module['preRun'] at this time\r\n  if (Module['preRun']) {\r\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\r\n    while (Module['preRun'].length) {\r\n      addOnPreRun(Module['preRun'].shift());\r\n    }\r\n  }\r\n  callRuntimeCallbacks(__ATPRERUN__);\r\n}\r\n\r\nfunction initRuntime() {\r\n  runtimeInitialized = true;\r\n  \r\n  callRuntimeCallbacks(__ATINIT__);\r\n}\r\n\r\nfunction preMain() {\r\n  \r\n  callRuntimeCallbacks(__ATMAIN__);\r\n}\r\n\r\nfunction exitRuntime() {\r\n  runtimeExited = true;\r\n}\r\n\r\nfunction postRun() {\r\n  // compatibility - merge in anything from Module['postRun'] at this time\r\n  if (Module['postRun']) {\r\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\r\n    while (Module['postRun'].length) {\r\n      addOnPostRun(Module['postRun'].shift());\r\n    }\r\n  }\r\n  callRuntimeCallbacks(__ATPOSTRUN__);\r\n}\r\n\r\nfunction addOnPreRun(cb) {\r\n  __ATPRERUN__.unshift(cb);\r\n}\r\n\r\nfunction addOnInit(cb) {\r\n  __ATINIT__.unshift(cb);\r\n}\r\n\r\nfunction addOnPreMain(cb) {\r\n  __ATMAIN__.unshift(cb);\r\n}\r\n\r\nfunction addOnExit(cb) {\r\n}\r\n\r\nfunction addOnPostRun(cb) {\r\n  __ATPOSTRUN__.unshift(cb);\r\n}\r\n\r\nfunction unSign(value, bits, ignore) {\r\n  if (value >= 0) {\r\n    return value;\r\n  }\r\n  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts\r\n                    : Math.pow(2, bits)         + value;\r\n}\r\nfunction reSign(value, bits, ignore) {\r\n  if (value <= 0) {\r\n    return value;\r\n  }\r\n  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32\r\n                        : Math.pow(2, bits-1);\r\n  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that\r\n                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors\r\n                                                       // TODO: In i64 mode 1, resign the two parts separately and safely\r\n    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts\r\n  }\r\n  return value;\r\n}\r\n\r\n\r\n\r\nvar Math_abs = Math.abs;\r\nvar Math_cos = Math.cos;\r\nvar Math_sin = Math.sin;\r\nvar Math_tan = Math.tan;\r\nvar Math_acos = Math.acos;\r\nvar Math_asin = Math.asin;\r\nvar Math_atan = Math.atan;\r\nvar Math_atan2 = Math.atan2;\r\nvar Math_exp = Math.exp;\r\nvar Math_log = Math.log;\r\nvar Math_sqrt = Math.sqrt;\r\nvar Math_ceil = Math.ceil;\r\nvar Math_floor = Math.floor;\r\nvar Math_pow = Math.pow;\r\nvar Math_imul = Math.imul;\r\nvar Math_fround = Math.fround;\r\nvar Math_round = Math.round;\r\nvar Math_min = Math.min;\r\nvar Math_max = Math.max;\r\nvar Math_clz32 = Math.clz32;\r\nvar Math_trunc = Math.trunc;\r\n\r\n\r\n\r\n// A counter of dependencies for calling run(). If we need to\r\n// do asynchronous work before running, increment this and\r\n// decrement it. Incrementing must happen in a place like\r\n// Module.preRun (used by emcc to add file preloading).\r\n// Note that you can add dependencies in preRun, even though\r\n// it happens right before run - run will be postponed until\r\n// the dependencies are met.\r\nvar runDependencies = 0;\r\nvar runDependencyWatcher = null;\r\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\r\n\r\nfunction getUniqueRunDependency(id) {\r\n  return id;\r\n}\r\n\r\nfunction addRunDependency(id) {\r\n  runDependencies++;\r\n  if (Module['monitorRunDependencies']) {\r\n    Module['monitorRunDependencies'](runDependencies);\r\n  }\r\n}\r\n\r\nfunction removeRunDependency(id) {\r\n  runDependencies--;\r\n  if (Module['monitorRunDependencies']) {\r\n    Module['monitorRunDependencies'](runDependencies);\r\n  }\r\n  if (runDependencies == 0) {\r\n    if (runDependencyWatcher !== null) {\r\n      clearInterval(runDependencyWatcher);\r\n      runDependencyWatcher = null;\r\n    }\r\n    if (dependenciesFulfilled) {\r\n      var callback = dependenciesFulfilled;\r\n      dependenciesFulfilled = null;\r\n      callback(); // can add another dependenciesFulfilled\r\n    }\r\n  }\r\n}\r\n\r\nModule[\"preloadedImages\"] = {}; // maps url to image data\r\nModule[\"preloadedAudios\"] = {}; // maps url to audio data\r\n\r\n\r\nvar memoryInitializer = null;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\r\n// Emscripten is available under two separate licenses, the MIT license and the\r\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\r\n// found in the LICENSE file.\r\n\r\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\r\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\r\n\r\n// Indicates whether filename is a base64 data URI.\r\nfunction isDataURI(filename) {\r\n  return String.prototype.startsWith ?\r\n      filename.startsWith(dataURIPrefix) :\r\n      filename.indexOf(dataURIPrefix) === 0;\r\n}\r\n\r\n\r\n\r\n\r\nvar wasmBinaryFile = 'DiabloSpawn.wasm';\r\nif (!isDataURI(wasmBinaryFile)) {\r\n  wasmBinaryFile = locateFile(wasmBinaryFile);\r\n}\r\n\r\nfunction getBinary() {\r\n  try {\r\n    if (Module['wasmBinary']) {\r\n      return new Uint8Array(Module['wasmBinary']);\r\n    }\r\n    if (readBinary) {\r\n      return readBinary(wasmBinaryFile);\r\n    } else {\r\n      throw \"both async and sync fetching of the wasm failed\";\r\n    }\r\n  }\r\n  catch (err) {\r\n    abort(err);\r\n  }\r\n}\r\n\r\nfunction getBinaryPromise() {\r\n  // if we don't have the binary yet, and have the Fetch api, use that\r\n  // in some environments, like Electron's render process, Fetch api may be present, but have a different context than expected, let's only use it on the Web\r\n  if (!Module['wasmBinary'] && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === 'function') {\r\n    return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {\r\n      if (!response['ok']) {\r\n        throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\r\n      }\r\n      return response['arrayBuffer']();\r\n    }).catch(function () {\r\n      return getBinary();\r\n    });\r\n  }\r\n  // Otherwise, getBinary should be able to get it synchronously\r\n  return new Promise(function(resolve, reject) {\r\n    resolve(getBinary());\r\n  });\r\n}\r\n\r\n\r\n\r\n// Create the wasm instance.\r\n// Receives the wasm imports, returns the exports.\r\nfunction createWasm(env) {\r\n\r\n  // prepare imports\r\n  var info = {\r\n    'env': env\r\n    ,\r\n    'global': {\r\n      'NaN': NaN,\r\n      'Infinity': Infinity\r\n    },\r\n    'global.Math': Math,\r\n    'asm2wasm': asm2wasmImports\r\n  };\r\n  // Load the wasm module and create an instance of using native support in the JS engine.\r\n  // handle a generated wasm instance, receiving its exports and\r\n  // performing other necessary setup\r\n  function receiveInstance(instance, module) {\r\n    var exports = instance.exports;\r\n    Module['asm'] = exports;\r\n    removeRunDependency('wasm-instantiate');\r\n  }\r\n  addRunDependency('wasm-instantiate');\r\n\r\n\r\n  function receiveInstantiatedSource(output) {\r\n    // 'output' is a WebAssemblyInstantiatedSource object which has both the module and instance.\r\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\r\n      // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\r\n      // When the regression is fixed, can restore the above USE_PTHREADS-enabled path.\r\n    receiveInstance(output['instance']);\r\n  }\r\n\r\n\r\n  function instantiateArrayBuffer(receiver) {\r\n    return getBinaryPromise().then(function(binary) {\r\n      return WebAssembly.instantiate(binary, info);\r\n    }).then(receiver, function(reason) {\r\n      err('failed to asynchronously prepare wasm: ' + reason);\r\n      abort(reason);\r\n    });\r\n  }\r\n\r\n  // Prefer streaming instantiation if available.\r\n  function instantiateAsync() {\r\n    if (!Module['wasmBinary'] &&\r\n        typeof WebAssembly.instantiateStreaming === 'function' &&\r\n        !isDataURI(wasmBinaryFile) &&\r\n        typeof fetch === 'function') {\r\n      fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function (response) {\r\n        return WebAssembly.instantiateStreaming(response, info)\r\n          .then(receiveInstantiatedSource, function(reason) {\r\n            // We expect the most common failure cause to be a bad MIME type for the binary,\r\n            // in which case falling back to ArrayBuffer instantiation should work.\r\n            err('wasm streaming compile failed: ' + reason);\r\n            err('falling back to ArrayBuffer instantiation');\r\n            instantiateArrayBuffer(receiveInstantiatedSource);\r\n          });\r\n      });\r\n    } else {\r\n      return instantiateArrayBuffer(receiveInstantiatedSource);\r\n    }\r\n  }\r\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\r\n  // to manually instantiate the Wasm module themselves. This allows pages to run the instantiation parallel\r\n  // to any other async startup actions they are performing.\r\n  if (Module['instantiateWasm']) {\r\n    try {\r\n      var exports = Module['instantiateWasm'](info, receiveInstance);\r\n      return exports;\r\n    } catch(e) {\r\n      err('Module.instantiateWasm callback failed with error: ' + e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  instantiateAsync();\r\n  return {}; // no exports yet; we'll fill them in later\r\n}\r\n\r\n// Provide an \"asm.js function\" for the application, called to \"link\" the asm.js module. We instantiate\r\n// the wasm module at that time, and it receives imports and provides exports and so forth, the app\r\n// doesn't need to care that it is wasm or asm.js.\r\n\r\nModule['asm'] = function(global, env, providedBuffer) {\r\n  // memory was already allocated (so js could use the buffer)\r\n  env['memory'] = wasmMemory\r\n  ;\r\n  // import table\r\n  env['table'] = wasmTable = new WebAssembly.Table({\r\n    'initial': 1116,\r\n    'maximum': 1116,\r\n    'element': 'anyfunc'\r\n  });\r\n  // With the wasm backend __memory_base and __table_base and only needed for\r\n  // relocatable output.\r\n  env['__memory_base'] = 1024; // tell the memory segments where to place themselves\r\n  // table starts at 0 by default (even in dynamic linking, for the main module)\r\n  env['__table_base'] = 0;\r\n\r\n  var exports = createWasm(env);\r\n  return exports;\r\n};\r\n\r\n// Globals used by JS i64 conversions\r\nvar tempDouble;\r\nvar tempI64;\r\n\r\n// === Body ===\r\n\r\nvar ASM_CONSTS = [function($0) { self.DApi.current_save_id($0); }];\r\n\r\nfunction _emscripten_asm_const_ii(code, a0) {\r\n  return ASM_CONSTS[code](a0);\r\n}\r\nfunction __api_close_keyboard(){ self.DApi.close_keyboard(); }\r\nfunction __api_open_keyboard(x0,y0,x1,y1,len){ self.DApi.open_keyboard(x0, y0, x1, y1, len); }\r\nfunction _api_create_sound(id,ptr,size){ self.DApi.create_sound(id, HEAPU8.slice(ptr, ptr + size)); }\r\nfunction _api_create_sound_float(id,ptr,samples,channels,rate){ self.DApi.create_sound_raw(id, HEAPF32.slice(ptr / 4, ptr / 4 + samples * channels), samples, channels, rate); }\r\nfunction _api_delete_sound(id){ self.DApi.delete_sound(id); }\r\nfunction _api_draw_begin(){ self.DApi.draw_begin(); }\r\nfunction _api_draw_belt(items){ self.DApi.draw_belt(HEAP32.subarray(items / 4, items / 4 + 8)); }\r\nfunction _api_draw_blit(x,y,w,h,ptr){ self.DApi.draw_blit(x, y, w, h, HEAPU8.subarray(ptr, ptr + w * h * 4)); }\r\nfunction _api_draw_clip_text(x0,y0,x1,y1){ self.DApi.draw_clip_text(x0, y0, x1, y1); }\r\nfunction _api_draw_end(){ self.DApi.draw_end(); }\r\nfunction _api_draw_text(x,y,ptr,color){ var end = HEAPU8.indexOf(0, ptr); var text = String.fromCharCode.apply(null, HEAPU8.subarray(ptr, end)); self.DApi.draw_text(x, y, text, color); }\r\nfunction _api_duplicate_sound(id,srcId){ self.DApi.duplicate_sound(id, srcId); }\r\nfunction _api_exit_game(){ self.DApi.exit_game(); }\r\nfunction _api_play_sound(id,volume,pan,loop){ self.DApi.play_sound(id, volume, pan, loop); }\r\nfunction _api_set_cursor(x,y){ self.DApi.set_cursor(x, y); }\r\nfunction _api_set_volume(id,volume){ self.DApi.set_volume(id, volume); }\r\nfunction _api_stop_sound(id){ self.DApi.stop_sound(id); }\r\nfunction _api_use_websocket(use){ self.DApi.use_websocket(use); }\r\nfunction _api_websocket_closed(){ return self.DApi.websocket_closed(); }\r\nfunction _api_websocket_send(ptr,size){ self.DApi.websocket_send(HEAPU8.subarray(ptr, ptr + size)); }\r\nfunction _exit_error(err){ var end = HEAPU8.indexOf( 0, err ); var text = String.fromCharCode.apply(null, HEAPU8.subarray( err, end )); self.DApi.exit_error( text ); }\r\nfunction _get_file_contents(path,ptr,offset,size){ var end = HEAPU8.indexOf( 0, path); var text = String.fromCharCode.apply(null, HEAPU8.subarray(path, end )); self.DApi.get_file_contents(text, HEAPU8.subarray(ptr, ptr + size), offset); }\r\nfunction _get_file_size(path){ var end = HEAPU8.indexOf( 0, path); var text = String.fromCharCode.apply(null, HEAPU8.subarray(path, end )); return self.DApi.get_file_size(text); }\r\nfunction _put_file_contents(path,ptr,size){ var end = HEAPU8.indexOf( 0, path); var text = String.fromCharCode.apply(null, HEAPU8.subarray(path, end)); self.DApi.put_file_contents(text, HEAPU8.slice(ptr, ptr + size)); }\r\nfunction _remove_file(path){ var end = HEAPU8.indexOf( 0, path); var text = String.fromCharCode.apply(null, HEAPU8.subarray(path, end )); self.DApi.remove_file( text ); }\r\nfunction _show_alert(err){ var end = HEAPU8.indexOf( 0, err ); var text = String.fromCharCode.apply( null, HEAPU8.subarray( err, end ) ); self.alert( text ); }\r\nfunction _trace_pop(){ if (self.WASM_TRACE) { self.WASM_TRACE.pop(); } }\r\nfunction _trace_push(ptr){ var end = HEAPU8.indexOf(0, ptr); var text = String.fromCharCode.apply(null, HEAPU8.subarray(ptr, end)); console.log(text); self.WASM_TRACE = self.WASM_TRACE || []; self.WASM_TRACE.push(text); }\r\n\r\n\r\n\r\n// STATICTOP = STATIC_BASE + 1849904;\r\n/* global initializers */  __ATINIT__.push({ func: function() { globalCtors() } });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* no memory initializer */\r\nvar tempDoublePtr = 1850912\r\n\r\nfunction copyTempFloat(ptr) { // functions, because inlining this code increases code size too much\r\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\r\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\r\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\r\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\r\n}\r\n\r\nfunction copyTempDouble(ptr) {\r\n  HEAP8[tempDoublePtr] = HEAP8[ptr];\r\n  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];\r\n  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];\r\n  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];\r\n  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];\r\n  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];\r\n  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];\r\n  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];\r\n}\r\n\r\n// {{PRE_LIBRARY}}\r\n\r\n\r\n  function ___assert_fail(condition, filename, line, func) {\r\n      abort('Assertion failed: ' + UTF8ToString(condition) + ', at: ' + [filename ? UTF8ToString(filename) : 'unknown filename', line, func ? UTF8ToString(func) : 'unknown function']);\r\n    }\r\n\r\n  function ___cxa_allocate_exception(size) {\r\n      return _malloc(size);\r\n    }\r\n\r\n  \r\n  var ___exception_infos={};\r\n  \r\n  var ___exception_caught= [];\r\n  \r\n  function ___exception_addRef(ptr) {\r\n      if (!ptr) return;\r\n      var info = ___exception_infos[ptr];\r\n      info.refcount++;\r\n    }\r\n  \r\n  function ___exception_deAdjust(adjusted) {\r\n      if (!adjusted || ___exception_infos[adjusted]) return adjusted;\r\n      for (var key in ___exception_infos) {\r\n        var ptr = +key; // the iteration key is a string, and if we throw this, it must be an integer as that is what we look for\r\n        var adj = ___exception_infos[ptr].adjusted;\r\n        var len = adj.length;\r\n        for (var i = 0; i < len; i++) {\r\n          if (adj[i] === adjusted) {\r\n            return ptr;\r\n          }\r\n        }\r\n      }\r\n      return adjusted;\r\n    }function ___cxa_begin_catch(ptr) {\r\n      var info = ___exception_infos[ptr];\r\n      if (info && !info.caught) {\r\n        info.caught = true;\r\n        __ZSt18uncaught_exceptionv.uncaught_exceptions--;\r\n      }\r\n      if (info) info.rethrown = false;\r\n      ___exception_caught.push(ptr);\r\n      ___exception_addRef(___exception_deAdjust(ptr));\r\n      return ptr;\r\n    }\r\n\r\n  \r\n  var ___exception_last=0;\r\n  \r\n  \r\n  function ___cxa_free_exception(ptr) {\r\n      try {\r\n        return _free(ptr);\r\n      } catch(e) {\r\n      }\r\n    }function ___exception_decRef(ptr) {\r\n      if (!ptr) return;\r\n      var info = ___exception_infos[ptr];\r\n      info.refcount--;\r\n      // A rethrown exception can reach refcount 0; it must not be discarded\r\n      // Its next handler will clear the rethrown flag and addRef it, prior to\r\n      // final decRef and destruction here\r\n      if (info.refcount === 0 && !info.rethrown) {\r\n        if (info.destructor) {\r\n          Module['dynCall_vi'](info.destructor, ptr);\r\n        }\r\n        delete ___exception_infos[ptr];\r\n        ___cxa_free_exception(ptr);\r\n      }\r\n    }\r\n  \r\n   function ___cxa_end_catch() {\r\n      // Clear state flag.\r\n      _setThrew(0);\r\n      // Call destructor if one is registered then clear it.\r\n      var ptr = ___exception_caught.pop();\r\n      if (ptr) {\r\n        ___exception_decRef(___exception_deAdjust(ptr));\r\n        ___exception_last = 0; // XXX in decRef?\r\n      }\r\n    }\r\n\r\n  \r\n  \r\n  function ___resumeException(ptr) {\r\n      if (!___exception_last) { ___exception_last = ptr; }\r\n      throw ptr;\r\n    }function ___cxa_find_matching_catch() {\r\n      var thrown = ___exception_last;\r\n      if (!thrown) {\r\n        // just pass through the null ptr\r\n        return ((setTempRet0(0),0)|0);\r\n      }\r\n      var info = ___exception_infos[thrown];\r\n      var throwntype = info.type;\r\n      if (!throwntype) {\r\n        // just pass through the thrown ptr\r\n        return ((setTempRet0(0),thrown)|0);\r\n      }\r\n      var typeArray = Array.prototype.slice.call(arguments);\r\n  \r\n      var pointer = ___cxa_is_pointer_type(throwntype);\r\n      // can_catch receives a **, add indirection\r\n      var buffer = 1850880;\r\n      HEAP32[((buffer)>>2)]=thrown;\r\n      thrown = buffer;\r\n      // The different catch blocks are denoted by different types.\r\n      // Due to inheritance, those types may not precisely match the\r\n      // type of the thrown object. Find one which matches, and\r\n      // return the type of the catch block which should be called.\r\n      for (var i = 0; i < typeArray.length; i++) {\r\n        if (typeArray[i] && ___cxa_can_catch(typeArray[i], throwntype, thrown)) {\r\n          thrown = HEAP32[((thrown)>>2)]; // undo indirection\r\n          info.adjusted.push(thrown);\r\n          return ((setTempRet0(typeArray[i]),thrown)|0);\r\n        }\r\n      }\r\n      // Shouldn't happen unless we have bogus data in typeArray\r\n      // or encounter a type for which emscripten doesn't have suitable\r\n      // typeinfo defined. Best-efforts match just in case.\r\n      thrown = HEAP32[((thrown)>>2)]; // undo indirection\r\n      return ((setTempRet0(throwntype),thrown)|0);\r\n    }\r\n  Module[\"___cxa_find_matching_catch\"] = ___cxa_find_matching_catch;function ___cxa_find_matching_catch_2(a0,a1\r\n  /*``*/) {\r\n  return ___cxa_find_matching_catch(a0,a1);\r\n  }\r\n\r\n  function ___cxa_find_matching_catch_3(a0,a1,a2\r\n  /*``*/) {\r\n  return ___cxa_find_matching_catch(a0,a1,a2);\r\n  }\r\n\r\n\r\n  function ___cxa_get_exception_ptr(ptr) {\r\n      // TODO: use info.adjusted?\r\n      return ptr;\r\n    }\r\n\r\n  function ___cxa_pure_virtual() {\r\n      ABORT = true;\r\n      throw 'Pure virtual function called!';\r\n    }\r\n\r\n  function ___cxa_throw(ptr, type, destructor) {\r\n      ___exception_infos[ptr] = {\r\n        ptr: ptr,\r\n        adjusted: [ptr],\r\n        type: type,\r\n        destructor: destructor,\r\n        refcount: 0,\r\n        caught: false,\r\n        rethrown: false\r\n      };\r\n      ___exception_last = ptr;\r\n      if (!(\"uncaught_exception\" in __ZSt18uncaught_exceptionv)) {\r\n        __ZSt18uncaught_exceptionv.uncaught_exceptions = 1;\r\n      } else {\r\n        __ZSt18uncaught_exceptionv.uncaught_exceptions++;\r\n      }\r\n      throw ptr;\r\n    }\r\n\r\n  function ___cxa_uncaught_exceptions() {\r\n      return __ZSt18uncaught_exceptionv.uncaught_exceptions;\r\n    }\r\n\r\n  function ___gxx_personality_v0() {\r\n    }\r\n\r\n  function ___lock() {}\r\n\r\n\r\n  \r\n  \r\n  var PATH={splitPath:function (filename) {\r\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n        return splitPathRe.exec(filename).slice(1);\r\n      },normalizeArray:function (parts, allowAboveRoot) {\r\n        // if the path tries to go above the root, `up` ends up > 0\r\n        var up = 0;\r\n        for (var i = parts.length - 1; i >= 0; i--) {\r\n          var last = parts[i];\r\n          if (last === '.') {\r\n            parts.splice(i, 1);\r\n          } else if (last === '..') {\r\n            parts.splice(i, 1);\r\n            up++;\r\n          } else if (up) {\r\n            parts.splice(i, 1);\r\n            up--;\r\n          }\r\n        }\r\n        // if the path is allowed to go above the root, restore leading ..s\r\n        if (allowAboveRoot) {\r\n          for (; up; up--) {\r\n            parts.unshift('..');\r\n          }\r\n        }\r\n        return parts;\r\n      },normalize:function (path) {\r\n        var isAbsolute = path.charAt(0) === '/',\r\n            trailingSlash = path.substr(-1) === '/';\r\n        // Normalize the path\r\n        path = PATH.normalizeArray(path.split('/').filter(function(p) {\r\n          return !!p;\r\n        }), !isAbsolute).join('/');\r\n        if (!path && !isAbsolute) {\r\n          path = '.';\r\n        }\r\n        if (path && trailingSlash) {\r\n          path += '/';\r\n        }\r\n        return (isAbsolute ? '/' : '') + path;\r\n      },dirname:function (path) {\r\n        var result = PATH.splitPath(path),\r\n            root = result[0],\r\n            dir = result[1];\r\n        if (!root && !dir) {\r\n          // No dirname whatsoever\r\n          return '.';\r\n        }\r\n        if (dir) {\r\n          // It has a dirname, strip trailing slash\r\n          dir = dir.substr(0, dir.length - 1);\r\n        }\r\n        return root + dir;\r\n      },basename:function (path) {\r\n        // EMSCRIPTEN return '/'' for '/', not an empty string\r\n        if (path === '/') return '/';\r\n        var lastSlash = path.lastIndexOf('/');\r\n        if (lastSlash === -1) return path;\r\n        return path.substr(lastSlash+1);\r\n      },extname:function (path) {\r\n        return PATH.splitPath(path)[3];\r\n      },join:function () {\r\n        var paths = Array.prototype.slice.call(arguments, 0);\r\n        return PATH.normalize(paths.join('/'));\r\n      },join2:function (l, r) {\r\n        return PATH.normalize(l + '/' + r);\r\n      }};var SYSCALLS={buffers:[null,[],[]],printChar:function (stream, curr) {\r\n        var buffer = SYSCALLS.buffers[stream];\r\n        if (curr === 0 || curr === 10) {\r\n          (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\r\n          buffer.length = 0;\r\n        } else {\r\n          buffer.push(curr);\r\n        }\r\n      },varargs:0,get:function (varargs) {\r\n        SYSCALLS.varargs += 4;\r\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\r\n        return ret;\r\n      },getStr:function () {\r\n        var ret = UTF8ToString(SYSCALLS.get());\r\n        return ret;\r\n      },get64:function () {\r\n        var low = SYSCALLS.get(), high = SYSCALLS.get();\r\n        return low;\r\n      },getZero:function () {\r\n        SYSCALLS.get();\r\n      }};function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;\r\n  try {\r\n   // llseek\r\n      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  function flush_NO_FILESYSTEM() {\r\n      // flush anything remaining in the buffers during shutdown\r\n      var fflush = Module[\"_fflush\"];\r\n      if (fflush) fflush(0);\r\n      var buffers = SYSCALLS.buffers;\r\n      if (buffers[1].length) SYSCALLS.printChar(1, 10);\r\n      if (buffers[2].length) SYSCALLS.printChar(2, 10);\r\n    }function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;\r\n  try {\r\n   // writev\r\n      // hack to support printf in SYSCALLS_REQUIRE_FILESYSTEM=0\r\n      var stream = SYSCALLS.get(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();\r\n      var ret = 0;\r\n      for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAP32[(((iov)+(i*8))>>2)];\r\n        var len = HEAP32[(((iov)+(i*8 + 4))>>2)];\r\n        for (var j = 0; j < len; j++) {\r\n          SYSCALLS.printChar(stream, HEAPU8[ptr+j]);\r\n        }\r\n        ret += len;\r\n      }\r\n      return ret;\r\n    } catch (e) {\r\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;\r\n  try {\r\n   // ioctl\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;\r\n  try {\r\n   // close\r\n      var stream = SYSCALLS.getStreamFromFD();\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);\r\n    return -e.errno;\r\n  }\r\n  }\r\n\r\n  function ___unlock() {}\r\n\r\n  function _abort() {\r\n      Module['abort']();\r\n    }\r\n\r\n  var _emscripten_asm_const_int=true;\r\n\r\n  function _emscripten_get_heap_size() {\r\n      return HEAP8.length;\r\n    }\r\n\r\n  function _exit(status) {\r\n      // void _exit(int status);\r\n      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html\r\n      exit(status);\r\n    }\r\n\r\n   \r\n\r\n  function _llvm_eh_typeid_for(type) {\r\n      return type;\r\n    }\r\n\r\n  function _llvm_trap() {\r\n      abort('trap!');\r\n    }\r\n\r\n  \r\n  function _emscripten_memcpy_big(dest, src, num) {\r\n      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);\r\n    }\r\n  \r\n   \r\n\r\n   \r\n\r\n   \r\n\r\n  \r\n  function ___setErrNo(value) {\r\n      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;\r\n      return value;\r\n    }\r\n  \r\n  \r\n  function abortOnCannotGrowMemory(requestedSize) {\r\n      abort('OOM');\r\n    }\r\n  \r\n  function emscripten_realloc_buffer(size) {\r\n      var PAGE_MULTIPLE = 65536;\r\n      size = alignUp(size, PAGE_MULTIPLE); // round up to wasm page size\r\n      var oldSize = buffer.byteLength;\r\n      // native wasm support\r\n      // note that this is *not* threadsafe. multiple threads can call .grow(), and each\r\n      // presents a delta, so in theory we may over-allocate here (e.g. if two threads\r\n      // ask to grow from 256MB to 512MB, we get 2 requests to add +256MB, and may end\r\n      // up growing to 768MB (even though we may have been able to make do with 512MB).\r\n      // TODO: consider decreasing the step sizes in emscripten_resize_heap\r\n      try {\r\n        var result = wasmMemory.grow((size - oldSize) / 65536); // .grow() takes a delta compared to the previous size\r\n        if (result !== (-1 | 0)) {\r\n          // success in native wasm memory growth, get the buffer from the memory\r\n          buffer = wasmMemory.buffer;\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } catch(e) {\r\n        return false;\r\n      }\r\n    }function _emscripten_resize_heap(requestedSize) {\r\n      var oldSize = _emscripten_get_heap_size();\r\n      // With pthreads, races can happen (another thread might increase the size in between), so return a failure, and let the caller retry.\r\n  \r\n  \r\n      var PAGE_MULTIPLE = 65536;\r\n      var LIMIT = 2147483648 - PAGE_MULTIPLE; // We can do one page short of 2GB as theoretical maximum.\r\n  \r\n      if (requestedSize > LIMIT) {\r\n        return false;\r\n      }\r\n  \r\n      var MIN_TOTAL_MEMORY = 16777216;\r\n      var newSize = Math.max(oldSize, MIN_TOTAL_MEMORY); // So the loop below will not be infinite, and minimum asm.js memory size is 16MB.\r\n  \r\n      // TODO: see realloc_buffer - for PTHREADS we may want to decrease these jumps\r\n      while (newSize < requestedSize) { // Keep incrementing the heap size as long as it's less than what is requested.\r\n        if (newSize <= 536870912) {\r\n          newSize = alignUp(2 * newSize, PAGE_MULTIPLE); // Simple heuristic: double until 1GB...\r\n        } else {\r\n          // ..., but after that, add smaller increments towards 2GB, which we cannot reach\r\n          newSize = Math.min(alignUp((3 * newSize + 2147483648) / 4, PAGE_MULTIPLE), LIMIT);\r\n        }\r\n  \r\n      }\r\n  \r\n  \r\n  \r\n  \r\n      if (!emscripten_realloc_buffer(newSize)) {\r\n        return false;\r\n      }\r\n  \r\n      updateGlobalBufferViews();\r\n  \r\n  \r\n  \r\n      return true;\r\n    } \r\n\r\n  function _time(ptr) {\r\n      var ret = (Date.now()/1000)|0;\r\n      if (ptr) {\r\n        HEAP32[((ptr)>>2)]=ret;\r\n      }\r\n      return ret;\r\n    }\r\nvar ASSERTIONS = false;\r\n\r\n// Copyright 2017 The Emscripten Authors.  All rights reserved.\r\n// Emscripten is available under two separate licenses, the MIT license and the\r\n// University of Illinois/NCSA Open Source License.  Both these licenses can be\r\n// found in the LICENSE file.\r\n\r\n/** @type {function(string, boolean=, number=)} */\r\nfunction intArrayFromString(stringy, dontAddNull, length) {\r\n  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\r\n  var u8array = new Array(len);\r\n  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\r\n  if (dontAddNull) u8array.length = numBytesWritten;\r\n  return u8array;\r\n}\r\n\r\nfunction intArrayToString(array) {\r\n  var ret = [];\r\n  for (var i = 0; i < array.length; i++) {\r\n    var chr = array[i];\r\n    if (chr > 0xFF) {\r\n      if (ASSERTIONS) {\r\n        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');\r\n      }\r\n      chr &= 0xFF;\r\n    }\r\n    ret.push(String.fromCharCode(chr));\r\n  }\r\n  return ret.join('');\r\n}\r\n\r\n\r\n// ASM_LIBRARY EXTERN PRIMITIVES: Int8Array,Int32Array\r\n\r\n\r\nfunction invoke_i(index) {\r\n  var sp = stackSave();\r\n  try {\r\n    return dynCall_i(index);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_ii(index,a1) {\r\n  var sp = stackSave();\r\n  try {\r\n    return dynCall_ii(index,a1);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iii(index,a1,a2) {\r\n  var sp = stackSave();\r\n  try {\r\n    return dynCall_iii(index,a1,a2);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiii(index,a1,a2,a3) {\r\n  var sp = stackSave();\r\n  try {\r\n    return dynCall_iiii(index,a1,a2,a3);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiiii(index,a1,a2,a3,a4) {\r\n  var sp = stackSave();\r\n  try {\r\n    return dynCall_iiiii(index,a1,a2,a3,a4);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_iiiiii(index,a1,a2,a3,a4,a5) {\r\n  var sp = stackSave();\r\n  try {\r\n    return dynCall_iiiiii(index,a1,a2,a3,a4,a5);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_ji(index,a1) {\r\n  var sp = stackSave();\r\n  try {\r\n    return dynCall_ji(index,a1);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_v(index) {\r\n  var sp = stackSave();\r\n  try {\r\n    dynCall_v(index);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_vi(index,a1) {\r\n  var sp = stackSave();\r\n  try {\r\n    dynCall_vi(index,a1);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_vii(index,a1,a2) {\r\n  var sp = stackSave();\r\n  try {\r\n    dynCall_vii(index,a1,a2);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viii(index,a1,a2,a3) {\r\n  var sp = stackSave();\r\n  try {\r\n    dynCall_viii(index,a1,a2,a3);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viiii(index,a1,a2,a3,a4) {\r\n  var sp = stackSave();\r\n  try {\r\n    dynCall_viiii(index,a1,a2,a3,a4);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viiiii(index,a1,a2,a3,a4,a5) {\r\n  var sp = stackSave();\r\n  try {\r\n    dynCall_viiiii(index,a1,a2,a3,a4,a5);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {\r\n  var sp = stackSave();\r\n  try {\r\n    dynCall_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viij(index,a1,a2,a3,a4) {\r\n  var sp = stackSave();\r\n  try {\r\n    dynCall_viij(index,a1,a2,a3,a4);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nfunction invoke_viji(index,a1,a2,a3,a4) {\r\n  var sp = stackSave();\r\n  try {\r\n    dynCall_viji(index,a1,a2,a3,a4);\r\n  } catch(e) {\r\n    stackRestore(sp);\r\n    if (e !== e+0 && e !== 'longjmp') throw e;\r\n    _setThrew(1, 0);\r\n  }\r\n}\r\n\r\nvar asmGlobalArg = {};\r\n\r\nvar asmLibraryArg = {\r\n  \"abort\": abort,\r\n  \"setTempRet0\": setTempRet0,\r\n  \"getTempRet0\": getTempRet0,\r\n  \"invoke_i\": invoke_i,\r\n  \"invoke_ii\": invoke_ii,\r\n  \"invoke_iii\": invoke_iii,\r\n  \"invoke_iiii\": invoke_iiii,\r\n  \"invoke_iiiii\": invoke_iiiii,\r\n  \"invoke_iiiiii\": invoke_iiiiii,\r\n  \"invoke_ji\": invoke_ji,\r\n  \"invoke_v\": invoke_v,\r\n  \"invoke_vi\": invoke_vi,\r\n  \"invoke_vii\": invoke_vii,\r\n  \"invoke_viii\": invoke_viii,\r\n  \"invoke_viiii\": invoke_viiii,\r\n  \"invoke_viiiii\": invoke_viiiii,\r\n  \"invoke_viiiiiii\": invoke_viiiiiii,\r\n  \"invoke_viij\": invoke_viij,\r\n  \"invoke_viji\": invoke_viji,\r\n  \"___assert_fail\": ___assert_fail,\r\n  \"___cxa_allocate_exception\": ___cxa_allocate_exception,\r\n  \"___cxa_begin_catch\": ___cxa_begin_catch,\r\n  \"___cxa_end_catch\": ___cxa_end_catch,\r\n  \"___cxa_find_matching_catch\": ___cxa_find_matching_catch,\r\n  \"___cxa_find_matching_catch_2\": ___cxa_find_matching_catch_2,\r\n  \"___cxa_find_matching_catch_3\": ___cxa_find_matching_catch_3,\r\n  \"___cxa_free_exception\": ___cxa_free_exception,\r\n  \"___cxa_get_exception_ptr\": ___cxa_get_exception_ptr,\r\n  \"___cxa_pure_virtual\": ___cxa_pure_virtual,\r\n  \"___cxa_throw\": ___cxa_throw,\r\n  \"___cxa_uncaught_exceptions\": ___cxa_uncaught_exceptions,\r\n  \"___exception_addRef\": ___exception_addRef,\r\n  \"___exception_deAdjust\": ___exception_deAdjust,\r\n  \"___exception_decRef\": ___exception_decRef,\r\n  \"___gxx_personality_v0\": ___gxx_personality_v0,\r\n  \"___lock\": ___lock,\r\n  \"___resumeException\": ___resumeException,\r\n  \"___setErrNo\": ___setErrNo,\r\n  \"___syscall140\": ___syscall140,\r\n  \"___syscall146\": ___syscall146,\r\n  \"___syscall54\": ___syscall54,\r\n  \"___syscall6\": ___syscall6,\r\n  \"___unlock\": ___unlock,\r\n  \"__api_close_keyboard\": __api_close_keyboard,\r\n  \"__api_open_keyboard\": __api_open_keyboard,\r\n  \"_abort\": _abort,\r\n  \"_api_create_sound\": _api_create_sound,\r\n  \"_api_create_sound_float\": _api_create_sound_float,\r\n  \"_api_delete_sound\": _api_delete_sound,\r\n  \"_api_draw_begin\": _api_draw_begin,\r\n  \"_api_draw_belt\": _api_draw_belt,\r\n  \"_api_draw_blit\": _api_draw_blit,\r\n  \"_api_draw_clip_text\": _api_draw_clip_text,\r\n  \"_api_draw_end\": _api_draw_end,\r\n  \"_api_draw_text\": _api_draw_text,\r\n  \"_api_duplicate_sound\": _api_duplicate_sound,\r\n  \"_api_exit_game\": _api_exit_game,\r\n  \"_api_play_sound\": _api_play_sound,\r\n  \"_api_set_cursor\": _api_set_cursor,\r\n  \"_api_set_volume\": _api_set_volume,\r\n  \"_api_stop_sound\": _api_stop_sound,\r\n  \"_api_use_websocket\": _api_use_websocket,\r\n  \"_api_websocket_closed\": _api_websocket_closed,\r\n  \"_api_websocket_send\": _api_websocket_send,\r\n  \"_emscripten_asm_const_ii\": _emscripten_asm_const_ii,\r\n  \"_emscripten_get_heap_size\": _emscripten_get_heap_size,\r\n  \"_emscripten_memcpy_big\": _emscripten_memcpy_big,\r\n  \"_emscripten_resize_heap\": _emscripten_resize_heap,\r\n  \"_exit\": _exit,\r\n  \"_exit_error\": _exit_error,\r\n  \"_get_file_contents\": _get_file_contents,\r\n  \"_get_file_size\": _get_file_size,\r\n  \"_llvm_eh_typeid_for\": _llvm_eh_typeid_for,\r\n  \"_llvm_trap\": _llvm_trap,\r\n  \"_put_file_contents\": _put_file_contents,\r\n  \"_remove_file\": _remove_file,\r\n  \"_show_alert\": _show_alert,\r\n  \"_time\": _time,\r\n  \"_trace_pop\": _trace_pop,\r\n  \"_trace_push\": _trace_push,\r\n  \"abortOnCannotGrowMemory\": abortOnCannotGrowMemory,\r\n  \"emscripten_realloc_buffer\": emscripten_realloc_buffer,\r\n  \"flush_NO_FILESYSTEM\": flush_NO_FILESYSTEM,\r\n  \"tempDoublePtr\": tempDoublePtr,\r\n  \"DYNAMICTOP_PTR\": DYNAMICTOP_PTR\r\n};\r\n// EMSCRIPTEN_START_ASM\r\nvar asm =Module[\"asm\"]// EMSCRIPTEN_END_ASM\r\n(asmGlobalArg, asmLibraryArg, buffer);\r\n\r\nModule[\"asm\"] = asm;\r\nvar _DApi_AllocPacket = Module[\"_DApi_AllocPacket\"] = function() {\r\n  return Module[\"asm\"][\"_DApi_AllocPacket\"].apply(null, arguments)\r\n};\r\n\r\nvar _DApi_Char = Module[\"_DApi_Char\"] = function() {\r\n  return Module[\"asm\"][\"_DApi_Char\"].apply(null, arguments)\r\n};\r\n\r\nvar _DApi_Init = Module[\"_DApi_Init\"] = function() {\r\n  return Module[\"asm\"][\"_DApi_Init\"].apply(null, arguments)\r\n};\r\n\r\nvar _DApi_Key = Module[\"_DApi_Key\"] = function() {\r\n  return Module[\"asm\"][\"_DApi_Key\"].apply(null, arguments)\r\n};\r\n\r\nvar _DApi_Mouse = Module[\"_DApi_Mouse\"] = function() {\r\n  return Module[\"asm\"][\"_DApi_Mouse\"].apply(null, arguments)\r\n};\r\n\r\nvar _DApi_Render = Module[\"_DApi_Render\"] = function() {\r\n  return Module[\"asm\"][\"_DApi_Render\"].apply(null, arguments)\r\n};\r\n\r\nvar _DApi_SyncText = Module[\"_DApi_SyncText\"] = function() {\r\n  return Module[\"asm\"][\"_DApi_SyncText\"].apply(null, arguments)\r\n};\r\n\r\nvar _DApi_SyncTextPtr = Module[\"_DApi_SyncTextPtr\"] = function() {\r\n  return Module[\"asm\"][\"_DApi_SyncTextPtr\"].apply(null, arguments)\r\n};\r\n\r\nvar _SNet_InitWebsocket = Module[\"_SNet_InitWebsocket\"] = function() {\r\n  return Module[\"asm\"][\"_SNet_InitWebsocket\"].apply(null, arguments)\r\n};\r\n\r\nvar _SNet_WebsocketStatus = Module[\"_SNet_WebsocketStatus\"] = function() {\r\n  return Module[\"asm\"][\"_SNet_WebsocketStatus\"].apply(null, arguments)\r\n};\r\n\r\nvar __ZSt18uncaught_exceptionv = Module[\"__ZSt18uncaught_exceptionv\"] = function() {\r\n  return Module[\"asm\"][\"__ZSt18uncaught_exceptionv\"].apply(null, arguments)\r\n};\r\n\r\nvar ___cxa_can_catch = Module[\"___cxa_can_catch\"] = function() {\r\n  return Module[\"asm\"][\"___cxa_can_catch\"].apply(null, arguments)\r\n};\r\n\r\nvar ___cxa_is_pointer_type = Module[\"___cxa_is_pointer_type\"] = function() {\r\n  return Module[\"asm\"][\"___cxa_is_pointer_type\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js___api_close_keyboard = Module[\"___em_js___api_close_keyboard\"] = function() {\r\n  return Module[\"asm\"][\"___em_js___api_close_keyboard\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js___api_open_keyboard = Module[\"___em_js___api_open_keyboard\"] = function() {\r\n  return Module[\"asm\"][\"___em_js___api_open_keyboard\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_create_sound = Module[\"___em_js__api_create_sound\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_create_sound\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_create_sound_float = Module[\"___em_js__api_create_sound_float\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_create_sound_float\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_delete_sound = Module[\"___em_js__api_delete_sound\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_delete_sound\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_draw_begin = Module[\"___em_js__api_draw_begin\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_draw_begin\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_draw_belt = Module[\"___em_js__api_draw_belt\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_draw_belt\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_draw_blit = Module[\"___em_js__api_draw_blit\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_draw_blit\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_draw_clip_text = Module[\"___em_js__api_draw_clip_text\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_draw_clip_text\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_draw_end = Module[\"___em_js__api_draw_end\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_draw_end\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_draw_text = Module[\"___em_js__api_draw_text\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_draw_text\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_duplicate_sound = Module[\"___em_js__api_duplicate_sound\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_duplicate_sound\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_exit_game = Module[\"___em_js__api_exit_game\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_exit_game\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_play_sound = Module[\"___em_js__api_play_sound\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_play_sound\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_set_cursor = Module[\"___em_js__api_set_cursor\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_set_cursor\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_set_volume = Module[\"___em_js__api_set_volume\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_set_volume\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_stop_sound = Module[\"___em_js__api_stop_sound\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_stop_sound\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_use_websocket = Module[\"___em_js__api_use_websocket\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_use_websocket\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_websocket_closed = Module[\"___em_js__api_websocket_closed\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_websocket_closed\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__api_websocket_send = Module[\"___em_js__api_websocket_send\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__api_websocket_send\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__exit_error = Module[\"___em_js__exit_error\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__exit_error\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__get_file_contents = Module[\"___em_js__get_file_contents\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__get_file_contents\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__get_file_size = Module[\"___em_js__get_file_size\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__get_file_size\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__put_file_contents = Module[\"___em_js__put_file_contents\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__put_file_contents\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__remove_file = Module[\"___em_js__remove_file\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__remove_file\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__show_alert = Module[\"___em_js__show_alert\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__show_alert\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__trace_pop = Module[\"___em_js__trace_pop\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__trace_pop\"].apply(null, arguments)\r\n};\r\n\r\nvar ___em_js__trace_push = Module[\"___em_js__trace_push\"] = function() {\r\n  return Module[\"asm\"][\"___em_js__trace_push\"].apply(null, arguments)\r\n};\r\n\r\nvar _emscripten_replace_memory = Module[\"_emscripten_replace_memory\"] = function() {\r\n  return Module[\"asm\"][\"_emscripten_replace_memory\"].apply(null, arguments)\r\n};\r\n\r\nvar _free = Module[\"_free\"] = function() {\r\n  return Module[\"asm\"][\"_free\"].apply(null, arguments)\r\n};\r\n\r\nvar _llvm_bswap_i32 = Module[\"_llvm_bswap_i32\"] = function() {\r\n  return Module[\"asm\"][\"_llvm_bswap_i32\"].apply(null, arguments)\r\n};\r\n\r\nvar _malloc = Module[\"_malloc\"] = function() {\r\n  return Module[\"asm\"][\"_malloc\"].apply(null, arguments)\r\n};\r\n\r\nvar _memcpy = Module[\"_memcpy\"] = function() {\r\n  return Module[\"asm\"][\"_memcpy\"].apply(null, arguments)\r\n};\r\n\r\nvar _memmove = Module[\"_memmove\"] = function() {\r\n  return Module[\"asm\"][\"_memmove\"].apply(null, arguments)\r\n};\r\n\r\nvar _memset = Module[\"_memset\"] = function() {\r\n  return Module[\"asm\"][\"_memset\"].apply(null, arguments)\r\n};\r\n\r\nvar _sbrk = Module[\"_sbrk\"] = function() {\r\n  return Module[\"asm\"][\"_sbrk\"].apply(null, arguments)\r\n};\r\n\r\nvar _setThrew = Module[\"_setThrew\"] = function() {\r\n  return Module[\"asm\"][\"_setThrew\"].apply(null, arguments)\r\n};\r\n\r\nvar establishStackSpace = Module[\"establishStackSpace\"] = function() {\r\n  return Module[\"asm\"][\"establishStackSpace\"].apply(null, arguments)\r\n};\r\n\r\nvar globalCtors = Module[\"globalCtors\"] = function() {\r\n  return Module[\"asm\"][\"globalCtors\"].apply(null, arguments)\r\n};\r\n\r\nvar stackAlloc = Module[\"stackAlloc\"] = function() {\r\n  return Module[\"asm\"][\"stackAlloc\"].apply(null, arguments)\r\n};\r\n\r\nvar stackRestore = Module[\"stackRestore\"] = function() {\r\n  return Module[\"asm\"][\"stackRestore\"].apply(null, arguments)\r\n};\r\n\r\nvar stackSave = Module[\"stackSave\"] = function() {\r\n  return Module[\"asm\"][\"stackSave\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_i = Module[\"dynCall_i\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_i\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_ii = Module[\"dynCall_ii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_ii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_iidiiii = Module[\"dynCall_iidiiii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_iidiiii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_iii = Module[\"dynCall_iii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_iii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_iiii = Module[\"dynCall_iiii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_iiii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_iiiii = Module[\"dynCall_iiiii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_iiiii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_iiiiii = Module[\"dynCall_iiiiii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_iiiiii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_ji = Module[\"dynCall_ji\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_ji\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_jiji\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_v = Module[\"dynCall_v\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_v\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_vi = Module[\"dynCall_vi\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_vi\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_vii = Module[\"dynCall_vii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_vii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_viii = Module[\"dynCall_viii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_viii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_viiii = Module[\"dynCall_viiii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_viiii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_viiiii = Module[\"dynCall_viiiii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_viiiii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_viiiiii = Module[\"dynCall_viiiiii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_viiiiii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_viiiiiii = Module[\"dynCall_viiiiiii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_viiiiiii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_viiiiiiiii = Module[\"dynCall_viiiiiiiii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_viiiiiiiii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_viiiiiiiiii = Module[\"dynCall_viiiiiiiiii\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_viiiiiiiiii\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_viij = Module[\"dynCall_viij\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_viij\"].apply(null, arguments)\r\n};\r\n\r\nvar dynCall_viji = Module[\"dynCall_viji\"] = function() {\r\n  return Module[\"asm\"][\"dynCall_viji\"].apply(null, arguments)\r\n};\r\n;\r\n\r\n\r\n\r\n// === Auto-generated postamble setup entry stuff ===\r\n\r\nModule['asm'] = asm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Modularize mode returns a function, which can be called to\r\n// create instances. The instances provide a then() method,\r\n// must like a Promise, that receives a callback. The callback\r\n// is called when the module is ready to run, with the module\r\n// as a parameter. (Like a Promise, it also returns the module\r\n// so you can use the output of .then(..)).\r\nModule['then'] = function(func) {\r\n  // We may already be ready to run code at this time. if\r\n  // so, just queue a call to the callback.\r\n  if (Module['calledRun']) {\r\n    func(Module);\r\n  } else {\r\n    // we are not ready to call then() yet. we must call it\r\n    // at the same time we would call onRuntimeInitialized.\r\n    var old = Module['onRuntimeInitialized'];\r\n    Module['onRuntimeInitialized'] = function() {\r\n      if (old) old();\r\n      func(Module);\r\n    };\r\n  }\r\n  return Module;\r\n};\r\n\r\n/**\r\n * @constructor\r\n * @extends {Error}\r\n * @this {ExitStatus}\r\n */\r\nfunction ExitStatus(status) {\r\n  this.name = \"ExitStatus\";\r\n  this.message = \"Program terminated with exit(\" + status + \")\";\r\n  this.status = status;\r\n}\r\nExitStatus.prototype = new Error();\r\nExitStatus.prototype.constructor = ExitStatus;\r\n\r\nvar calledMain = false;\r\n\r\ndependenciesFulfilled = function runCaller() {\r\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\r\n  if (!Module['calledRun']) run();\r\n  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/** @type {function(Array=)} */\r\nfunction run(args) {\r\n  args = args || Module['arguments'];\r\n\r\n  if (runDependencies > 0) {\r\n    return;\r\n  }\r\n\r\n\r\n  preRun();\r\n\r\n  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later\r\n  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame\r\n\r\n  function doRun() {\r\n    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening\r\n    Module['calledRun'] = true;\r\n\r\n    if (ABORT) return;\r\n\r\n    initRuntime();\r\n\r\n    preMain();\r\n\r\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\r\n\r\n\r\n    postRun();\r\n  }\r\n\r\n  if (Module['setStatus']) {\r\n    Module['setStatus']('Running...');\r\n    setTimeout(function() {\r\n      setTimeout(function() {\r\n        Module['setStatus']('');\r\n      }, 1);\r\n      doRun();\r\n    }, 1);\r\n  } else {\r\n    doRun();\r\n  }\r\n}\r\nModule['run'] = run;\r\n\r\n\r\nfunction exit(status, implicit) {\r\n\r\n  // if this is just main exit-ing implicitly, and the status is 0, then we\r\n  // don't need to do anything here and can just leave. if the status is\r\n  // non-zero, though, then we need to report it.\r\n  // (we may have warned about this earlier, if a situation justifies doing so)\r\n  if (implicit && Module['noExitRuntime'] && status === 0) {\r\n    return;\r\n  }\r\n\r\n  if (Module['noExitRuntime']) {\r\n  } else {\r\n\r\n    ABORT = true;\r\n    EXITSTATUS = status;\r\n\r\n    exitRuntime();\r\n\r\n    if (Module['onExit']) Module['onExit'](status);\r\n  }\r\n\r\n  Module['quit'](status, new ExitStatus(status));\r\n}\r\n\r\nvar abortDecorators = [];\r\n\r\nfunction abort(what) {\r\n  if (Module['onAbort']) {\r\n    Module['onAbort'](what);\r\n  }\r\n\r\n  what += '';\r\n  out(what);\r\n  err(what);\r\n\r\n  ABORT = true;\r\n  EXITSTATUS = 1;\r\n\r\n  throw 'abort(' + what + '). Build with -s ASSERTIONS=1 for more info.';\r\n}\r\nModule['abort'] = abort;\r\n\r\nif (Module['preInit']) {\r\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\r\n  while (Module['preInit'].length > 0) {\r\n    Module['preInit'].pop()();\r\n  }\r\n}\r\n\r\n\r\n  Module[\"noExitRuntime\"] = true;\r\n\r\nrun();\r\n\r\n\r\n\r\n\r\n\r\n// {{MODULE_ADDITIONS}}\r\n\r\n\r\n\r\nModule['ready'] = new Promise(function (resolve, reject) {\r\n  delete Module['then']\r\n  Module['onAbort'] = function (what) {\r\n    reject(what)\r\n  }\r\n  addOnPostRun(function () {\r\n    resolve(Module)\r\n  })\r\n});\r\n\r\n\r\n\r\n  return DiabloSpawn\r\n}\r\n);\r\n})();\r\nif (typeof exports === 'object' && typeof module === 'object')\r\n      module.exports = DiabloSpawn;\r\n    else if (typeof define === 'function' && define['amd'])\r\n      define([], function() { return DiabloSpawn; });\r\n    else if (typeof exports === 'object')\r\n      exports[\"DiabloSpawn\"] = DiabloSpawn;\r\n    \n\n/*** EXPORTS FROM exports-loader ***/\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n  var transitional = config.transitional;\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\n      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),\n      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n  var promise;\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n    return promise;\n  }\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n  return promise;\n};\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function (url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function (url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\nmodule.exports = Axios;","'use strict';\n\nvar utils = require('./../utils');\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\nmodule.exports = InterceptorManager;","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(config, config.data, config.headers, config.transformRequest);\n\n  // Flatten headers\n  config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers);\n  utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function cleanHeaderConfig(method) {\n    delete config.headers[method];\n  });\n  var adapter = config.adapter || defaults.adapter;\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(config, response.data, response.headers, config.transformResponse);\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(config, reason.response.data, reason.response.headers, config.transformResponse);\n      }\n    }\n    return Promise.reject(reason);\n  });\n};","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('./../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n  return data;\n};","'use strict';\n\nvar utils = require('../utils');\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError('Request failed with status code ' + response.status, response.config, null, response.request, response));\n  }\n};","'use strict';\n\nvar utils = require('./../utils');\nmodule.exports = utils.isStandardBrowserEnv() ?\n// Standard browser envs support document.cookie\nfunction standardBrowserEnv() {\n  return {\n    write: function write(name, value, expires, path, domain, secure) {\n      var cookie = [];\n      cookie.push(name + '=' + encodeURIComponent(value));\n      if (utils.isNumber(expires)) {\n        cookie.push('expires=' + new Date(expires).toGMTString());\n      }\n      if (utils.isString(path)) {\n        cookie.push('path=' + path);\n      }\n      if (utils.isString(domain)) {\n        cookie.push('domain=' + domain);\n      }\n      if (secure === true) {\n        cookie.push('secure');\n      }\n      document.cookie = cookie.join('; ');\n    },\n    read: function read(name) {\n      var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return match ? decodeURIComponent(match[3]) : null;\n    },\n    remove: function remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  };\n}() :\n// Non standard browser env (web workers, react-native) lack needed support.\nfunction nonStandardBrowserEnv() {\n  return {\n    write: function write() {},\n    read: function read() {\n      return null;\n    },\n    remove: function remove() {}\n  };\n}();","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '') : baseURL;\n};","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = ['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent'];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n  if (!headers) {\n    return parsed;\n  }\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n  return parsed;\n};","'use strict';\n\nvar utils = require('./../utils');\nmodule.exports = utils.isStandardBrowserEnv() ?\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\nfunction standardBrowserEnv() {\n  var msie = /(msie|trident)/i.test(navigator.userAgent);\n  var urlParsingNode = document.createElement('a');\n  var originURL;\n\n  /**\n  * Parse a URL to discover it's components\n  *\n  * @param {String} url The URL to be parsed\n  * @returns {Object}\n  */\n  function resolveURL(url) {\n    var href = url;\n    if (msie) {\n      // IE needs attribute set twice to normalize properties\n      urlParsingNode.setAttribute('href', href);\n      href = urlParsingNode.href;\n    }\n    urlParsingNode.setAttribute('href', href);\n\n    // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n    return {\n      href: urlParsingNode.href,\n      protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n      host: urlParsingNode.host,\n      search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n      hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n      hostname: urlParsingNode.hostname,\n      port: urlParsingNode.port,\n      pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname\n    };\n  }\n  originURL = resolveURL(window.location.href);\n\n  /**\n  * Determine if a URL shares the same origin as the current location\n  *\n  * @param {String} requestURL The URL to test\n  * @returns {boolean} True if URL shares the same origin, otherwise false\n  */\n  return function isURLSameOrigin(requestURL) {\n    var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;\n    return parsed.protocol === originURL.protocol && parsed.host === originURL.host;\n  };\n}() :\n// Non standard browser envs (web workers, react-native) lack needed support.\nfunction nonStandardBrowserEnv() {\n  return function isURLSameOrigin() {\n    return true;\n  };\n}();","'use strict';\n\nvar pkg = require('./../../package.json');\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function (type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\nvar deprecatedWarnings = {};\nvar currentVerArr = pkg.version.split('.');\n\n/**\n * Compare package versions\n * @param {string} version\n * @param {string?} thanVersion\n * @returns {boolean}\n */\nfunction isOlderVersion(version, thanVersion) {\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\n  var destVer = version.split('.');\n  for (var i = 0; i < 3; i++) {\n    if (pkgVersionArr[i] > destVer[i]) {\n      return true;\n    } else if (pkgVersionArr[i] < destVer[i]) {\n      return false;\n    }\n  }\n  return false;\n}\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator\n * @param {string?} version\n * @param {string} message\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  var isDeprecated = version && isOlderVersion(version);\n  function formatMessage(opt, desc) {\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function (value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\n    }\n    if (isDeprecated && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(formatMessage(opt, ' has been deprecated since v' + version + ' and will be removed in the near future'));\n    }\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\nmodule.exports = {\n  isOlderVersion: isOlderVersion,\n  assertOptions: assertOptions,\n  validators: validators\n};","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\nmodule.exports = CancelToken;","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return typeof payload === 'object' && payload.isAxiosError === true;\n};","async function do_websocket_open(url, handler) {\r\n  const socket = new WebSocket(url);\r\n  socket.binaryType = \"arraybuffer\";\r\n  let versionCbk = null;\r\n  socket.addEventListener(\"message\", ({data}) => {\r\n    if (versionCbk) {\r\n      versionCbk(data);\r\n    }\r\n    handler(data);\r\n  });\r\n  await new Promise((resolve, reject) => {\r\n    const onError = err => reject(1);\r\n    socket.addEventListener(\"error\", onError);\r\n    socket.addEventListener(\"open\", () => {\r\n      socket.removeEventListener(\"error\", onError);\r\n      resolve();\r\n    });\r\n  });\r\n  await new Promise((resolve, reject) => {\r\n    const to = setTimeout(() => {\r\n      versionCbk = null;\r\n      reject(1);\r\n    }, 5000);\r\n    versionCbk = data => {\r\n      clearTimeout(to);\r\n      const u8 = new Uint8Array(data);\r\n      if (u8[0] === 0x32) {\r\n        versionCbk = null;\r\n        const version = u8[1] | (u8[2] << 8) | (u8[3] << 16) | (u8[4] << 24);\r\n        if (version === 1) {\r\n          resolve();\r\n        } else {\r\n          reject(2);\r\n        }\r\n      }\r\n    };\r\n  });\r\n\r\n  const vers = process.env.VERSION.match(/(\\d+)\\.(\\d+)\\.(\\d+)/);\r\n  const clientInfo = new Uint8Array(5);\r\n  clientInfo[0] = 0x31;\r\n  clientInfo[1] = parseInt(vers[3]);\r\n  clientInfo[2] = parseInt(vers[2]);\r\n  clientInfo[3] = parseInt(vers[1]);\r\n  clientInfo[4] = 0;\r\n  socket.send(clientInfo);\r\n  return socket;\r\n}\r\n\r\nexport default function websocket_open(url, handler, finisher) {\r\n  let ws = null, batch = [], intr = null;\r\n  const proxy = {\r\n    get readyState() {\r\n      return ws ? ws.readyState : 0;\r\n    },\r\n    send(msg) {\r\n      batch.push(msg.slice());\r\n    },\r\n    close() {\r\n      if (intr) {\r\n        clearInterval(intr);\r\n        intr = null;\r\n      }\r\n      if (ws) {\r\n        ws.close();\r\n      } else {\r\n        batch = null;\r\n      }\r\n    },\r\n  };\r\n  do_websocket_open(url, handler).then(sock => {\r\n    ws = sock;\r\n    if (batch) {\r\n      intr = setInterval(() => {\r\n        if (!batch.length) {\r\n          return;\r\n        }\r\n        const size = batch.reduce((sum, msg) => sum + msg.byteLength, 3);\r\n        const buffer = new Uint8Array(size);\r\n        buffer[0] = 0;\r\n        buffer[1] = (batch.length & 0xFF);\r\n        buffer[2] = batch.length >> 8;\r\n        let pos = 3;\r\n        for (let msg of batch) {\r\n          buffer.set(msg, pos);\r\n          pos += msg.byteLength;\r\n        }\r\n        ws.send(buffer);\r\n        batch.length = 0;\r\n      }, 100);\r\n    } else {\r\n      ws.close();\r\n    }\r\n    finisher(0);\r\n  }, err => {\r\n    finisher(err);\r\n  });\r\n  return proxy;\r\n}\r\n","import DiabloBinary from './Diablo.wasm';\r\nimport DiabloModule from './Diablo.jscc';\r\nimport SpawnBinary from './DiabloSpawn.wasm';\r\nimport SpawnModule from './DiabloSpawn.jscc';\r\nimport axios from 'axios';\r\n\r\nimport websocket_open from './websocket';\r\n\r\nconst DiabloSize = 1466809;\r\nconst SpawnSize = 1337416;\r\n\r\n/* eslint-disable-next-line no-restricted-globals */\r\nconst worker = self;\r\n\r\nlet canvas = null, context = null;\r\nlet imageData = null;\r\nlet files = null;\r\nlet renderBatch = null;\r\nlet drawBelt = null;\r\nlet is_spawn = false;\r\nlet websocket = null;\r\n\r\nfunction onError(err, action=\"error\") {\r\n  if (err instanceof Error) {\r\n    worker.postMessage({action, error: err.toString(), stack: err.stack});\r\n  } else {\r\n    worker.postMessage({action, error: err.toString()});\r\n  }\r\n}\r\n\r\nconst ChunkSize = 1 << 20;\r\nclass RemoteFile {\r\n  constructor(url) {\r\n    const request = new XMLHttpRequest();\r\n    request.open('HEAD', url, false);\r\n    request.send();\r\n    if (request.status < 200 || request.status >= 300) {\r\n      throw Error('Failed to load remote file');\r\n    }\r\n    this.byteLength = parseInt(request.getResponseHeader('Content-Length'));\r\n\r\n    this.url = url;\r\n\r\n    this.buffer = new Uint8Array(this.byteLength);\r\n    this.chunks = new Uint8Array(((this.byteLength + ChunkSize - 1) >> 20) | 0);\r\n  }\r\n\r\n  subarray(start, end) {\r\n    let chunk0 = (start / ChunkSize) | 0;\r\n    let chunk1 = ((end + ChunkSize - 1) / ChunkSize) | 0;\r\n    let missing0 = chunk1, missing1 = chunk0;\r\n    for (let i = chunk0; i < chunk1; ++i) {\r\n      if (!this.chunks[i]) {\r\n        missing0 = Math.min(missing0, i);\r\n        missing1 = Math.max(missing1, i);\r\n      }\r\n    }\r\n    if (missing0 <= missing1) {\r\n      const request = new XMLHttpRequest();\r\n      request.open('GET', this.url, false);\r\n      request.setRequestHeader('Range', `bytes=${missing0 * ChunkSize}-${Math.min(missing1 * ChunkSize + ChunkSize - 1, this.byteLength - 1)}`);\r\n      request.responseType = 'arraybuffer';\r\n      request.send();\r\n      if (request.status < 200 || request.status >= 300) {\r\n        throw Error('Failed to load remote file');\r\n      } else {\r\n        const header = request.getResponseHeader('Content-Range');\r\n        let m, start = 0;\r\n        if (header && (m = header.match(/bytes (\\d+)-(\\d+)\\/(\\d+)/))) {\r\n          start = parseInt(m[1]);\r\n        }\r\n        this.buffer.set(new Uint8Array(request.response), start);\r\n        chunk0 = ((start + ChunkSize - 1) / ChunkSize) | 0;\r\n        chunk1 = ((start + request.response.byteLength + ChunkSize - 1) / ChunkSize) | 0;\r\n        for (let i = chunk0; i < chunk1; ++i) {\r\n          this.chunks[i] = 1;\r\n        }\r\n      }\r\n    }\r\n    return this.buffer.subarray(start, end);\r\n  }\r\n}\r\n\r\nconst DApi = {\r\n  exit_error(error) {\r\n    throw Error(error);\r\n  },\r\n\r\n  exit_game() {\r\n    worker.postMessage({action: \"exit\"});\r\n  },\r\n  current_save_id(id) {\r\n    worker.postMessage({action: \"current_save\", name: id >= 0 ? (is_spawn ? `spawn${id}.sv` : `single_${id}.sv`) : null});\r\n  },\r\n\r\n  get_file_size(path) {\r\n    const data = files.get(path.toLowerCase());\r\n    return data ? data.byteLength : 0;\r\n  },\r\n  get_file_contents(path, array, offset) {\r\n    const data = files.get(path.toLowerCase());\r\n    if (data) {\r\n      array.set(data.subarray(offset, offset + array.byteLength));\r\n    }\r\n  },\r\n  put_file_contents(path, array) {\r\n    path = path.toLowerCase();\r\n    // if (!path.match(/^(spawn\\d+\\.sv|single_\\d+\\.sv|config\\.ini)$/i)) {\r\n    //   alert(`Bad file name: ${path}`);\r\n    // }\r\n    files.set(path, array);\r\n    worker.postMessage({action: \"fs\", func: \"update\", params: [path, array]});\r\n  },\r\n  remove_file(path) {\r\n    path = path.toLowerCase();\r\n    files.delete(path);\r\n    worker.postMessage({action: \"fs\", func: \"delete\", params: [path]});\r\n  },\r\n\r\n  set_cursor(x, y) {\r\n    worker.postMessage({action: \"cursor\", x, y});\r\n  },\r\n  open_keyboard(...args) {\r\n    worker.postMessage({action: \"keyboard\", rect: [...args]});\r\n  },\r\n  close_keyboard() {\r\n    worker.postMessage({action: \"keyboard\", rect: null});\r\n  },\r\n\r\n  use_websocket(flag) {\r\n    if (flag) {\r\n      if (!websocket || websocket.readyState !== 1) {\r\n        const sock = websocket = websocket_open('wss://diablo.rivsoft.net/websocket', data => {\r\n          if (websocket === sock) {\r\n            try_api(() => {\r\n              const ptr = wasm._DApi_AllocPacket(data.byteLength);\r\n              wasm.HEAPU8.set(new Uint8Array(data), ptr);\r\n            });\r\n          }\r\n        }, code => {\r\n          if (typeof code !== \"number\") {\r\n            throw code;\r\n          } else {\r\n            call_api(\"SNet_WebsocketStatus\", code);\r\n          }\r\n        });\r\n      } else {\r\n        call_api(\"SNet_WebsocketStatus\", 0);\r\n      }\r\n    } else {\r\n      if (websocket) {\r\n        websocket.close();\r\n      }\r\n      websocket = null;\r\n    }\r\n  },\r\n  websocket_closed() {\r\n    return websocket ? websocket.readyState !== 1 : false;\r\n  },\r\n};\r\n/*\r\nlet frameTime = 0, lastTime = 0;\r\nfunction getFPS() {\r\n  const time = performance.now();\r\n  if (!lastTime) {\r\n    lastTime = time;\r\n  }\r\n  frameTime = 0.9 * frameTime + 0.1 * (time - lastTime);\r\n  lastTime = time;\r\n  return frameTime ? 1000.0 / frameTime : 0.0;\r\n}\r\n*/\r\nconst DApi_renderLegacy = {\r\n  draw_begin() {\r\n    renderBatch = {\r\n      images: [],\r\n      text: [],\r\n      clip: null,\r\n      belt: drawBelt,\r\n    };\r\n    drawBelt = null;\r\n  },\r\n  draw_blit(x, y, w, h, data) {\r\n    renderBatch.images.push({x, y, w, h, data: data.slice()});\r\n  },\r\n  draw_clip_text(x0, y0, x1, y1) {\r\n    renderBatch.clip = {x0, y0, x1, y1};\r\n  },\r\n  draw_text(x, y, text, color) {\r\n    renderBatch.text.push({x, y, text, color});\r\n  },\r\n  draw_end() {\r\n    //DApi.draw_text(10, 10, `FPS: ${getFPS().toFixed(1)} (Transfer)`, 0xFFCC00);\r\n    const transfer = renderBatch.images.map(({data}) => data.buffer);\r\n    if (renderBatch.belt) {\r\n      transfer.push(renderBatch.belt.buffer);\r\n    }\r\n    worker.postMessage({action: \"render\", batch: renderBatch}, transfer);\r\n    renderBatch = null;\r\n  },\r\n  draw_belt(items) {\r\n    drawBelt = items.slice();\r\n  },\r\n};\r\n\r\nconst DApi_renderOffscreen = {\r\n  draw_begin() {\r\n    context.save();\r\n    context.font = 'bold 13px Times New Roman';\r\n  },\r\n  draw_blit(x, y, w, h, data) {\r\n    imageData.data.set(data);\r\n    context.putImageData(imageData, x, y);\r\n  },\r\n  draw_clip_text(x0, y0, x1, y1) {\r\n    context.beginPath();\r\n    context.rect(x0, y0, x1 - x0, y1 - y0);\r\n    context.clip();\r\n  },\r\n  draw_text(x, y, text, color) {\r\n    const r = ((color >> 16) & 0xFF);\r\n    const g = ((color >> 8) & 0xFF);\r\n    const b = (color & 0xFF);\r\n    context.fillStyle = `rgb(${r}, ${g}, ${b})`;\r\n    context.fillText(text, x, y + 22);\r\n  },\r\n  draw_end() {\r\n    //DApi.draw_text(10, 10, `FPS: ${getFPS().toFixed(1)} (Offscreen)`, 0xFFCC00);\r\n    context.restore();\r\n    const bitmap = canvas.transferToImageBitmap();\r\n    const transfer = [bitmap];\r\n    if (drawBelt) {\r\n      transfer.push(drawBelt.buffer);\r\n    }\r\n    worker.postMessage({action: \"render\", batch: {bitmap, belt: drawBelt}}, transfer);\r\n    drawBelt = null;\r\n  },\r\n  draw_belt(items) {\r\n    drawBelt = items.slice();\r\n  },\r\n};\r\n\r\nlet audioBatch = null, audioTransfer = null;\r\nlet maxSoundId = 0, maxBatchId = 0;\r\n[\"create_sound_raw\", \"create_sound\", \"duplicate_sound\"].forEach(func => {\r\n  DApi[func] = function(...params) {\r\n    if (audioBatch) {\r\n      maxBatchId = params[0] + 1;\r\n      audioBatch.push({func, params});\r\n      if (func !== \"duplicate_sound\") {\r\n        audioTransfer.push(params[1].buffer);\r\n      }\r\n    } else {\r\n      maxSoundId = params[0] + 1;\r\n      const transfer = [];\r\n      if (func !== \"duplicate_sound\") {\r\n        transfer.push(params[1].buffer);\r\n      }\r\n      worker.postMessage({action: \"audio\", func, params}, transfer);\r\n    }\r\n  };\r\n});\r\n[\"play_sound\", \"set_volume\", \"stop_sound\", \"delete_sound\"].forEach(func => {\r\n  DApi[func] = function(...params) {\r\n    if (audioBatch && params[0] >= maxSoundId) {\r\n      audioBatch.push({func, params});\r\n    } else {\r\n      worker.postMessage({action: \"audio\", func, params});\r\n    }\r\n  }\r\n});\r\n\r\nlet packetBatch = null;\r\nDApi.websocket_send = function(data) {\r\n  if (websocket) {\r\n    websocket.send(data);\r\n  } else if (packetBatch) {\r\n    packetBatch.push(data.slice().buffer);\r\n  } else {\r\n    worker.postMessage({action: \"packet\", buffer: data});\r\n  }\r\n};\r\n\r\nworker.DApi = DApi;\r\n\r\nlet wasm = null;\r\n\r\nfunction try_api(func) {\r\n  try {\r\n    func();\r\n  } catch (e) {\r\n    onError(e);\r\n  }\r\n}\r\n\r\nfunction call_api(func, ...params) {\r\n  try_api(() => {\r\n    const nested = (audioBatch != null);\r\n    if (!nested) {\r\n      audioBatch = [];\r\n      audioTransfer = [];\r\n      packetBatch = [];\r\n    }\r\n    if (func !== \"text\") {\r\n      wasm[\"_\" + func](...params);\r\n    } else {\r\n      const ptr = wasm._DApi_SyncTextPtr();\r\n      const text = params[0];\r\n      const length = Math.min(text.length, 255);\r\n      const heap = wasm.HEAPU8;\r\n      for (let i = 0; i < length; ++i) {\r\n        heap[ptr + i] = text.charCodeAt(i);\r\n      }\r\n      heap[ptr + length] = 0;\r\n      wasm._DApi_SyncText(params[1]);\r\n    }\r\n    if (!nested) {\r\n      if (audioBatch.length) {\r\n        maxSoundId = maxBatchId;\r\n        worker.postMessage({action: \"audioBatch\", batch: audioBatch}, audioTransfer);\r\n      }\r\n      if (packetBatch.length) {\r\n        worker.postMessage({action: \"packetBatch\", batch: packetBatch}, packetBatch);\r\n      }\r\n      audioBatch = null;\r\n      audioTransfer = null;\r\n      packetBatch = null;\r\n    }\r\n  });\r\n}\r\n\r\nfunction progress(text, loaded, total) {\r\n  worker.postMessage({action: \"progress\", text, loaded, total});\r\n}\r\n\r\nconst readFile = (file, progress) => new Promise((resolve, reject) => {\r\n  const reader = new FileReader();\r\n  reader.onload = () => {\r\n    if (progress) {\r\n      progress({loaded: file.size});\r\n    }\r\n    resolve(reader.result);\r\n  };\r\n  reader.onerror = () => reject(reader.error);\r\n  reader.onabort = () => reject();\r\n  if (progress) {\r\n    reader.addEventListener(\"progress\", progress);\r\n  }\r\n  reader.readAsArrayBuffer(file);\r\n});\r\n\r\nasync function initWasm(spawn, progress) {\r\n  const binary = await axios.request({\r\n    url: spawn ? SpawnBinary : DiabloBinary,\r\n    responseType: 'arraybuffer',\r\n    onDownloadProgress: progress,\r\n  });\r\n  const result = await (spawn ? SpawnModule : DiabloModule)({wasmBinary: binary.data}).ready;\r\n  progress({loaded: 2000000});\r\n  return result;\r\n}\r\n\r\nasync function init_game(mpq, spawn, offscreen, texts = {loading: 'Loading...', initializing: 'Initializing...'}) {\r\n  is_spawn = spawn;\r\n  if (offscreen) {\r\n    canvas = new OffscreenCanvas(640, 480);\r\n    context = canvas.getContext(\"2d\");\r\n    imageData = context.createImageData(640, 480);\r\n    Object.assign(DApi, DApi_renderOffscreen);\r\n  } else {\r\n    Object.assign(DApi, DApi_renderLegacy);\r\n  }\r\n\r\n  if (!mpq) {\r\n    const name = (spawn ? 'spawn.mpq' : 'diabdat.mpq');\r\n    if (!files.has(name)) {\r\n      // This should never happen, but we do support remote loading\r\n      files.set(name, new RemoteFile(`${process.env.PUBLIC_URL}/${name}`));\r\n    }\r\n  }\r\n\r\n  progress(texts.loading);\r\n  let mpqLoaded = 0, mpqTotal = (mpq ? mpq.size : 0), wasmLoaded = 0, wasmTotal = (spawn ? SpawnSize : DiabloSize);\r\n  const wasmWeight = 5;\r\n  function updateProgress() {\r\n    progress(texts.loading, mpqLoaded + wasmLoaded * wasmWeight, mpqTotal + wasmTotal * wasmWeight);\r\n  }\r\n  const loadWasm = initWasm(spawn, e => {\r\n    wasmLoaded = Math.min(e.loaded, wasmTotal);\r\n    updateProgress();\r\n  });\r\n  let loadMpq = mpq ? readFile(mpq, e => {\r\n    mpqLoaded = e.loaded;\r\n    updateProgress();\r\n  }) : Promise.resolve(null);\r\n  [wasm, mpq] = await Promise.all([loadWasm, loadMpq]);\r\n\r\n  if (mpq) {\r\n    files.set(spawn ? 'spawn.mpq' : 'diabdat.mpq', new Uint8Array(mpq));\r\n  }\r\n\r\n  progress(texts.initializing);\r\n\r\n  const vers = process.env.VERSION.match(/(\\d+)\\.(\\d+)\\.(\\d+)/);\r\n\r\n  //wasm._SNet_InitWebsocket();\r\n  wasm._DApi_Init(Math.floor(performance.now()), offscreen ? 1 : 0, parseInt(vers[1]), parseInt(vers[2]), parseInt(vers[3]));\r\n\r\n  setInterval(() => {\r\n    call_api(\"DApi_Render\", Math.floor(performance.now()));  \r\n  }, 50);\r\n}\r\n\r\nworker.addEventListener(\"message\", ({data}) => {\r\n  switch (data.action) {\r\n  case \"init\":\r\n    files = data.files;\r\n    init_game(data.mpq, data.spawn, data.offscreen, data.texts).then(\r\n      () => worker.postMessage({action: \"loaded\"}),\r\n      e => onError(e, \"failed\"));\r\n    break;\r\n  case \"event\":\r\n    call_api(data.func, ...data.params);\r\n    break;\r\n  case \"packet\":\r\n    try_api(() => {\r\n      const ptr = wasm._DApi_AllocPacket(data.buffer.byteLength);\r\n      wasm.HEAPU8.set(new Uint8Array(data.buffer), ptr);\r\n    });\r\n    break;\r\n  case \"packetBatch\":\r\n    try_api(() => {\r\n      for (let packet of data.batch) {\r\n        const ptr = wasm._DApi_AllocPacket(packet.byteLength);\r\n        wasm.HEAPU8.set(new Uint8Array(packet), ptr);\r\n      }\r\n    });\r\n    break;\r\n  default:\r\n  }\r\n});\r\n"],"sourceRoot":""}