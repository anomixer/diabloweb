{"version":3,"sources":["../node_modules/events/events.js","../node_modules/inherits/inherits_browser.js","../node_modules/promisize/index.js","../node_modules/idb-kv-store/index.js"],"names":["ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","value","EventEmitter","init","this","module","exports","once","emitter","name","Promise","resolve","reject","errorListener","err","removeListener","resolver","slice","arguments","eventTargetAgnosticAddListener","handler","flags","on","addErrorHandlerIfEventEmitter","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","warning","create","newListener","emit","unshift","push","length","warned","w","Error","String","count","console","warn","_onceWrap","state","fired","wrapFn","wrapped","bind","_listeners","unwrap","evlistener","arr","ret","Array","i","unwrapListeners","arrayClone","listenerCount","n","copy","addEventListener","wrapListener","arg","removeEventListener","defineProperty","enumerable","get","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","len","listeners","addListener","prependListener","prependOnceListener","list","position","originalListener","shift","index","pop","spliceOne","off","removeAllListeners","key","keys","rawListeners","eventNames","ctor","superCtor","super_","constructor","writable","configurable","TempCtor","cb","promise","res","rej","intercept","result","IdbKvStore","__webpack_require__","inherits","promisize","global","window","self","IDB","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","opts","_db","_closed","_channel","_waiters","disableBroadcast","Channel","channel","BroadcastChannel","onmessage","event","data","method","request","open","onDbError","handleError","_close","onclose","onerror","onsuccess","close","_init","onupgradeneeded","createObjectStore","autoIncrement","Transaction","kvStore","mode","_kvStore","_mode","_objectStore","finished","onfinish","done","preventDefault","stopPropagation","INDEXEDDB_SUPPORT","BROADCAST_SUPPORT","transaction","getMultiple","json","range","values","remove","clear","add","iterator","next","oncomplete","onabort","objectStore","_getObjectStore","put","e","postMessage","sortedKeys","sort","resultsMap","getReturnValue","map","cursorReq","openCursor","cursor","continue","delete","abort"],"mappings":"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","file":"static/js/0.c2f5b5cc.chunk.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null;\nvar ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {\n  return Function.prototype.apply.call(target, receiver, args);\n};\nvar ReflectOwnKeys;\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys;\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n};\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function () {\n    return defaultMaxListeners;\n  },\n  set: function (arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\nEventEmitter.init = function () {\n  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = type === 'error';\n  var events = this._events;\n  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0) er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n  var handler = events[type];\n  if (handler === undefined) return false;\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i) ReflectApply(listeners[i], this, args);\n  }\n  return true;\n};\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n  checkListener(listener);\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type, listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n  return target;\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\nEventEmitter.prototype.prependListener = function prependListener(type, listener) {\n  return _addListener(this, type, listener, true);\n};\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0) return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\nfunction _onceWrap(target, type, listener) {\n  var state = {\n    fired: false,\n    wrapFn: undefined,\n    target: target,\n    type: type,\n    listener: listener\n  };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\nEventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n  checkListener(listener);\n  this.prependListener(type, _onceWrap(this, type, listener));\n  return this;\n};\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener = function removeListener(type, listener) {\n  var list, events, position, i, originalListener;\n  checkListener(listener);\n  events = this._events;\n  if (events === undefined) return this;\n  list = events[type];\n  if (list === undefined) return this;\n  if (list === listener || list.listener === listener) {\n    if (--this._eventsCount === 0) this._events = Object.create(null);else {\n      delete events[type];\n      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n    }\n  } else if (typeof list !== 'function') {\n    position = -1;\n    for (i = list.length - 1; i >= 0; i--) {\n      if (list[i] === listener || list[i].listener === listener) {\n        originalListener = list[i].listener;\n        position = i;\n        break;\n      }\n    }\n    if (position < 0) return this;\n    if (position === 0) list.shift();else {\n      spliceOne(list, position);\n    }\n    if (list.length === 1) events[type] = list[0];\n    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);\n  }\n  return this;\n};\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n  var listeners, events, i;\n  events = this._events;\n  if (events === undefined) return this;\n\n  // not listening for removeListener, no need to emit\n  if (events.removeListener === undefined) {\n    if (arguments.length === 0) {\n      this._events = Object.create(null);\n      this._eventsCount = 0;\n    } else if (events[type] !== undefined) {\n      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];\n    }\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    var keys = Object.keys(events);\n    var key;\n    for (i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n    return this;\n  }\n  listeners = events[type];\n  if (typeof listeners === 'function') {\n    this.removeListener(type, listeners);\n  } else if (listeners !== undefined) {\n    // LIFO order\n    for (i = listeners.length - 1; i >= 0; i--) {\n      this.removeListener(type, listeners[i]);\n    }\n  }\n  return this;\n};\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n  if (events === undefined) return [];\n  var evlistener = events[type];\n  if (evlistener === undefined) return [];\n  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\nEventEmitter.listenerCount = function (emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n  if (events !== undefined) {\n    var evlistener = events[type];\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n  return 0;\n}\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i) copy[i] = arr[i];\n  return copy;\n}\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++) list[index] = list[index + 1];\n  list.pop();\n}\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    }\n    ;\n    eventTargetAgnosticAddListener(emitter, name, resolver, {\n      once: true\n    });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, {\n        once: true\n      });\n    }\n  });\n}\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      var TempCtor = function () {};\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    }\n  };\n}","module.exports = promisize;\nfunction promisize(cb) {\n  var promise;\n  var res;\n  var rej;\n  if (cb != null && typeof cb !== 'function') throw new Error('cb must be a function');\n  if (cb == null && typeof Promise !== 'undefined') {\n    promise = new Promise(function (resolve, reject) {\n      res = resolve;\n      rej = reject;\n    });\n  }\n  function intercept(err, result) {\n    if (promise) {\n      if (err) rej(err);else res(result);\n    } else {\n      if (cb) cb(err, result);else if (err) throw err;\n    }\n  }\n  intercept.promise = promise;\n  return intercept;\n}","/* eslint-env browser */\n\nmodule.exports = IdbKvStore;\nvar EventEmitter = require('events').EventEmitter;\nvar inherits = require('inherits');\nvar promisize = require('promisize');\nvar global = typeof window === 'undefined' ? self : window;\nvar IDB = global.indexedDB || global.mozIndexedDB || global.webkitIndexedDB || global.msIndexedDB;\nIdbKvStore.INDEXEDDB_SUPPORT = IDB != null;\nIdbKvStore.BROADCAST_SUPPORT = global.BroadcastChannel != null;\ninherits(IdbKvStore, EventEmitter);\nfunction IdbKvStore(name, opts, cb) {\n  var self = this;\n  if (typeof name !== 'string') throw new Error('A name must be supplied of type string');\n  if (!IDB) throw new Error('IndexedDB not supported');\n  if (typeof opts === 'function') return new IdbKvStore(name, null, opts);\n  if (!(self instanceof IdbKvStore)) return new IdbKvStore(name, opts, cb);\n  if (!opts) opts = {};\n  EventEmitter.call(self);\n  self._db = null;\n  self._closed = false;\n  self._channel = null;\n  self._waiters = [];\n  if (opts.disableBroadcast !== true) {\n    var Channel = opts.channel || global.BroadcastChannel;\n    if (Channel) {\n      self._channel = new Channel(name);\n      self._channel.onmessage = onChange;\n    }\n  }\n  var request = IDB.open(name);\n  request.onerror = onerror;\n  request.onsuccess = onsuccess;\n  request.onupgradeneeded = onupgradeneeded;\n  self.on('newListener', onNewListener);\n  function onerror(event) {\n    handleError(event);\n    self._close(event.target.error);\n    if (cb) cb(event.target.error);\n  }\n  function onDbError(event) {\n    handleError(event);\n    self._close(event.target.error);\n  }\n  function onsuccess(event) {\n    if (self._closed) {\n      event.target.result.close();\n    } else {\n      self._db = event.target.result;\n      self._db.onclose = onclose;\n      self._db.onerror = onDbError;\n      for (var i in self._waiters) self._waiters[i]._init(null);\n      self._waiters = null;\n      if (cb) cb(null);\n      self.emit('open');\n    }\n  }\n  function onupgradeneeded(event) {\n    var db = event.target.result;\n    db.createObjectStore('kv', {\n      autoIncrement: true\n    });\n  }\n  function onclose() {\n    self._close();\n  }\n  function onNewListener(event) {\n    if (event !== 'add' && event !== 'set' && event !== 'remove') return;\n    if (!self._channel) return self.emit('error', new Error('No BroadcastChannel support'));\n  }\n  function onChange(event) {\n    if (event.data.method === 'add') self.emit('add', event.data);else if (event.data.method === 'set') self.emit('set', event.data);else if (event.data.method === 'remove') self.emit('remove', event.data);\n  }\n}\nIdbKvStore.prototype.get = function (key, cb) {\n  return this.transaction('readonly').get(key, cb);\n};\nIdbKvStore.prototype.getMultiple = function (keys, cb) {\n  return this.transaction('readonly').getMultiple(keys, cb);\n};\nIdbKvStore.prototype.set = function (key, value, cb) {\n  cb = promisize(cb);\n  var error = null;\n  var t = this.transaction('readwrite', function (err) {\n    error = error || err;\n    cb(error);\n  });\n  t.set(key, value, function (err) {\n    error = err;\n  });\n  return cb.promise;\n};\nIdbKvStore.prototype.json = function (range, cb) {\n  return this.transaction('readonly').json(range, cb);\n};\nIdbKvStore.prototype.keys = function (range, cb) {\n  return this.transaction('readonly').keys(range, cb);\n};\nIdbKvStore.prototype.values = function (range, cb) {\n  return this.transaction('readonly').values(range, cb);\n};\nIdbKvStore.prototype.remove = function (key, cb) {\n  cb = promisize(cb);\n  var error = null;\n  var t = this.transaction('readwrite', function (err) {\n    error = error || err;\n    cb(error);\n  });\n  t.remove(key, function (err) {\n    error = err;\n  });\n  return cb.promise;\n};\nIdbKvStore.prototype.clear = function (cb) {\n  cb = promisize(cb);\n  var error = null;\n  var t = this.transaction('readwrite', function (err) {\n    error = error || err;\n    cb(error);\n  });\n  t.clear(function (err) {\n    error = err;\n  });\n  return cb.promise;\n};\nIdbKvStore.prototype.count = function (range, cb) {\n  return this.transaction('readonly').count(range, cb);\n};\nIdbKvStore.prototype.add = function (key, value, cb) {\n  cb = promisize(cb);\n  var error = null;\n  var t = this.transaction('readwrite', function (err) {\n    error = error || err;\n    cb(error);\n  });\n  t.add(key, value, function (err) {\n    error = err;\n  });\n  return cb.promise;\n};\nIdbKvStore.prototype.iterator = function (range, next) {\n  return this.transaction('readonly').iterator(range, next);\n};\nIdbKvStore.prototype.transaction = function (mode, onfinish) {\n  if (this._closed) throw new Error('Database is closed');\n  var transaction = new Transaction(this, mode, onfinish);\n  if (this._db) transaction._init(null);else this._waiters.push(transaction);\n  return transaction;\n};\nIdbKvStore.prototype.close = function () {\n  this._close();\n};\nIdbKvStore.prototype._close = function (err) {\n  if (this._closed) return;\n  this._closed = true;\n  if (this._db) this._db.close();\n  if (this._channel) this._channel.close();\n  this._db = null;\n  this._channel = null;\n  if (err) this.emit('error', err);\n  this.emit('close');\n  for (var i in this._waiters) this._waiters[i]._init(err || new Error('Database is closed'));\n  this._waiters = null;\n  this.removeAllListeners();\n};\nfunction Transaction(kvStore, mode, cb) {\n  if (typeof mode === 'function') return new Transaction(kvStore, null, mode);\n  this._kvStore = kvStore;\n  this._mode = mode || 'readwrite';\n  this._objectStore = null;\n  this._waiters = null;\n  this.finished = false;\n  this.onfinish = promisize(cb); // `onfinish` public variable for backwards compatibility with v4.3.1\n  this.done = this.onfinish.promise;\n  if (this._mode !== 'readonly' && this._mode !== 'readwrite') {\n    throw new Error('mode must be either \"readonly\" or \"readwrite\"');\n  }\n}\nTransaction.prototype._init = function (err) {\n  var self = this;\n  if (self.finished) return;\n  if (err) return self._close(err);\n  var transaction = self._kvStore._db.transaction('kv', self._mode);\n  transaction.oncomplete = oncomplete;\n  transaction.onerror = onerror;\n  transaction.onabort = onerror;\n  self._objectStore = transaction.objectStore('kv');\n  for (var i in self._waiters) self._waiters[i](null, self._objectStore);\n  self._waiters = null;\n  function oncomplete() {\n    self._close(null);\n  }\n  function onerror(event) {\n    handleError(event);\n    self._close(event.target.error);\n  }\n};\nTransaction.prototype._getObjectStore = function (cb) {\n  if (this.finished) throw new Error('Transaction is finished');\n  if (this._objectStore) return cb(null, this._objectStore);\n  this._waiters = this._waiters || [];\n  this._waiters.push(cb);\n};\nTransaction.prototype.set = function (key, value, cb) {\n  var self = this;\n  if (key == null || value == null) throw new Error('A key and value must be given');\n  cb = promisize(cb);\n  self._getObjectStore(function (err, objectStore) {\n    if (err) return cb(err);\n    try {\n      var request = objectStore.put(value, key);\n    } catch (e) {\n      return cb(e);\n    }\n    request.onerror = handleError.bind(this, cb);\n    request.onsuccess = function () {\n      if (self._kvStore._channel) {\n        self._kvStore._channel.postMessage({\n          method: 'set',\n          key: key,\n          value: value\n        });\n      }\n      cb(null);\n    };\n  });\n  return cb.promise;\n};\nTransaction.prototype.add = function (key, value, cb) {\n  var self = this;\n  if (value == null && key != null) return self.add(undefined, key, cb);\n  if (typeof value === 'function' || value == null && cb == null) return self.add(undefined, key, value);\n  if (value == null) throw new Error('A value must be provided as an argument');\n  cb = promisize(cb);\n  self._getObjectStore(function (err, objectStore) {\n    if (err) return cb(err);\n    try {\n      var request = key == null ? objectStore.add(value) : objectStore.add(value, key);\n    } catch (e) {\n      return cb(e);\n    }\n    request.onerror = handleError.bind(this, cb);\n    request.onsuccess = function () {\n      if (self._kvStore._channel) {\n        self._kvStore._channel.postMessage({\n          method: 'add',\n          key: key,\n          value: value\n        });\n      }\n      cb(null);\n    };\n  });\n  return cb.promise;\n};\nTransaction.prototype.get = function (key, cb) {\n  var self = this;\n  if (key == null) throw new Error('A key must be given as an argument');\n  cb = promisize(cb);\n  self._getObjectStore(function (err, objectStore) {\n    if (err) return cb(err);\n    try {\n      var request = objectStore.get(key);\n    } catch (e) {\n      return cb(e);\n    }\n    request.onerror = handleError.bind(this, cb);\n    request.onsuccess = function (event) {\n      cb(null, event.target.result);\n    };\n  });\n  return cb.promise;\n};\nTransaction.prototype.getMultiple = function (keys, cb) {\n  var self = this;\n  if (keys == null) throw new Error('An array of keys must be given as an argument');\n  cb = promisize(cb);\n  if (keys.length === 0) {\n    cb(null, []);\n    return cb.promise;\n  }\n  self._getObjectStore(function (err, objectStore) {\n    if (err) return cb(err);\n\n    // Implementation mostly taken from https://www.codeproject.com/Articles/744986/How-to-do-some-magic-with-indexedDB\n    var sortedKeys = keys.slice().sort();\n    var i = 0;\n    var resultsMap = {};\n    var getReturnValue = function () {\n      return keys.map(function (key) {\n        return resultsMap[key];\n      });\n    };\n    var cursorReq = objectStore.openCursor();\n    cursorReq.onerror = handleError.bind(this, cb);\n    cursorReq.onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (!cursor) {\n        cb(null, getReturnValue());\n        return;\n      }\n      var key = cursor.key;\n      while (key > sortedKeys[i]) {\n        // The cursor has passed beyond this key. Check next.\n        ++i;\n        if (i === sortedKeys.length) {\n          // There is no next. Stop searching.\n          cb(null, getReturnValue());\n          return;\n        }\n      }\n      if (key === sortedKeys[i]) {\n        resultsMap[key] = cursor.value;\n        // The current cursor value should be included and we should continue\n        // a single step in case next item has the same key or possibly our\n        // next key in sortedKeys.\n        cursor.continue();\n      } else {\n        // cursor.key not yet at sortedKeys[i]. Forward cursor to the next key to hunt for.\n        cursor.continue(sortedKeys[i]);\n      }\n    };\n  });\n  return cb.promise;\n};\nTransaction.prototype.json = function (range, cb) {\n  var self = this;\n  if (typeof range === 'function') return self.json(null, range);\n  cb = promisize(cb);\n  var json = {};\n  self.iterator(range, function (err, cursor) {\n    if (err) return cb(err);\n    if (cursor) {\n      json[cursor.key] = cursor.value;\n      cursor.continue();\n    } else {\n      cb(null, json);\n    }\n  });\n  return cb.promise;\n};\nTransaction.prototype.keys = function (range, cb) {\n  var self = this;\n  if (typeof range === 'function') return self.keys(null, range);\n  cb = promisize(cb);\n  var keys = [];\n  self.iterator(range, function (err, cursor) {\n    if (err) return cb(err);\n    if (cursor) {\n      keys.push(cursor.key);\n      cursor.continue();\n    } else {\n      cb(null, keys);\n    }\n  });\n  return cb.promise;\n};\nTransaction.prototype.values = function (range, cb) {\n  var self = this;\n  if (typeof range === 'function') return self.values(null, range);\n  cb = promisize(cb);\n  var values = [];\n  self.iterator(range, function (err, cursor) {\n    if (err) return cb(err);\n    if (cursor) {\n      values.push(cursor.value);\n      cursor.continue();\n    } else {\n      cb(null, values);\n    }\n  });\n  return cb.promise;\n};\nTransaction.prototype.remove = function (key, cb) {\n  var self = this;\n  if (key == null) throw new Error('A key must be given as an argument');\n  cb = promisize(cb);\n  self._getObjectStore(function (err, objectStore) {\n    if (err) return cb(err);\n    try {\n      var request = objectStore.delete(key);\n    } catch (e) {\n      return cb(e);\n    }\n    request.onerror = handleError.bind(this, cb);\n    request.onsuccess = function () {\n      if (self._kvStore._channel) {\n        self._kvStore._channel.postMessage({\n          method: 'remove',\n          key: key\n        });\n      }\n      cb(null);\n    };\n  });\n  return cb.promise;\n};\nTransaction.prototype.clear = function (cb) {\n  var self = this;\n  cb = promisize(cb);\n  self._getObjectStore(function (err, objectStore) {\n    if (err) return cb(err);\n    try {\n      var request = objectStore.clear();\n    } catch (e) {\n      return cb(e);\n    }\n    request.onerror = handleError.bind(this, cb);\n    request.onsuccess = function () {\n      cb(null);\n    };\n  });\n  return cb.promise;\n};\nTransaction.prototype.count = function (range, cb) {\n  var self = this;\n  if (typeof range === 'function') return self.count(null, range);\n  cb = promisize(cb);\n  self._getObjectStore(function (err, objectStore) {\n    if (err) return cb(err);\n    try {\n      var request = range == null ? objectStore.count() : objectStore.count(range);\n    } catch (e) {\n      return cb(e);\n    }\n    request.onerror = handleError.bind(this, cb);\n    request.onsuccess = function (event) {\n      cb(null, event.target.result);\n    };\n  });\n  return cb.promise;\n};\nTransaction.prototype.iterator = function (range, next) {\n  var self = this;\n  if (typeof range === 'function') return self.iterator(null, range);\n  if (typeof next !== 'function') throw new Error('A function must be given');\n  self._getObjectStore(function (err, objectStore) {\n    if (err) return next(err);\n    try {\n      var request = range == null ? objectStore.openCursor() : objectStore.openCursor(range);\n    } catch (e) {\n      return next(e);\n    }\n    request.onerror = handleError.bind(this, next);\n    request.onsuccess = function (event) {\n      var cursor = event.target.result;\n      next(null, cursor);\n    };\n  });\n};\nTransaction.prototype.abort = function () {\n  if (this.finished) throw new Error('Transaction is finished');\n  if (this._objectStore) this._objectStore.transaction.abort();\n  this._close(new Error('Transaction aborted'));\n};\nTransaction.prototype._close = function (err) {\n  if (this.finished) return;\n  this.finished = true;\n  this._kvStore = null;\n  this._objectStore = null;\n  for (var i in this._waiters) this._waiters[i](err || new Error('Transaction is finished'));\n  this._waiters = null;\n  if (this.onfinish) this.onfinish(err);\n  this.onfinish = null;\n};\nfunction handleError(cb, event) {\n  if (event == null) return handleError(null, cb);\n  event.preventDefault();\n  event.stopPropagation();\n  if (cb) cb(event.target.error);\n}"],"sourceRoot":""}