{"version":3,"sources":["fs.js","api/game.worker.js","mpqcmp/mpqcmp.worker.js","mpqcmp/MpqCmp.wasm","mpqcmp/ListFile.txt","serviceWorker.js","api/explode.js","api/codec.js","api/savefile.js","i18n/index.js","components/LanguageSelector.js","api/sound.js","api/load_spawn.js","api/packet.js","api/webrtc.js","api/loader.js","mpqcmp/compress.js","mpqcmp/index.js","App.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","create_fs","idb_kv_store__WEBPACK_IMPORTED_MODULE_0__","idb_kv_store__WEBPACK_IMPORTED_MODULE_0___default","n","async","downloadFile","store","name","file","get","toLowerCase","blob","Blob","type","url","URL","createObjectURL","lnk","document","createElement","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","console","error","concat","readFile","Promise","resolve","reject","reader","FileReader","onload","result","onerror","onabort","readAsArrayBuffer","load","IdbKvStore","files","Map","data","Object","entries","json","set","window","DownloadFile","DownloadSaves","keys","match","downloadSaves","update","delete","remove","clear","download","upload","Uint8Array","uploadFile","fileUrl","e","module","exports","Worker","p","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","CMP_BINARY","CMP_ASCII","CMP_NO_ERROR","CMP_INVALID_DICTSIZE","CMP_INVALID_MODE","CMP_BAD_DATA","CMP_ABORT","PKDCL_OK","PKDCL_STREAM_END","DistBits","DistCode","ExLenBits","LenBase","Uint16Array","LenBits","LenCode","ChBitsAsc","ChCodeAsc","GenDecodeTabs","positions","start_indexes","length_bits","elements","i","length","index","WasteBits","pWork","nBits","extra_bits","bit_buff","in_pos","in_bytes","read_buf","in_buff","DecodeLit","length_code","LengthCodes","extra_length_bits","extra_length","ctype","uncompressed_byte","value","offs2C34","offs2D34","offs2E34","offs2EB4","DecodeDist","rep_length","dist_pos_code","DistPosCodes","distance","dsize_bits","dsize_mask","explode","write_buf","buffer","ArrayBuffer","out_buff","pChCodeAsc","count","acc","bits_asc","add","GenAscTabs","next_literal","outputPos","minus_dist","target","source","subarray","copyWithin","Expand","W","Uint32Array","SHA1CircularShift","shift","SHA1","input8","u8","u32","byteOffset","this","input","A","digest","B","C","D","E","temp","constructor","_defineProperty","digest8","Random","seed","next","codec_decode","password","size","last_size","sha","rand","key","k32","pw","charCodeAt","codec_init_key","size32","data32","buf32","buf","j","pkzip_decompress","out_size","output","out_pos","dst","Math","min","src","Error","hashtable","a","b","decrypt","decrypt8","encrypt","orig","hash","seed1","seed2","ch","path_name","pos","max","lastIndexOf","substring","Flags","CompressPkWare","CompressMulti","Compressed","Encrypted","FixSeed","PatchFile","SingleUnit","DummyFile","SectorCrc","Exists","MpqReader","byteLength","readHeader","sizeId","hashOffset","blockOffset","hashCount","blockCount","hashTable","readTable","blockTable","blockSize","offset","slice","fileIndex","keyA","keyB","readRaw","block","info","filePos","cmpSize","fileSize","flags","read","raw","numBlocks","floor","tableSize","blocks","oPos","uSize","tmp","translations","en","zh-tw","zh-cn","ja","ko","de","es","fr","it","pt","nl","sv","ru","i18n","currentLanguage","loadLanguage","listeners","saved","localStorage","getItem","browserLang","language","userLanguage","startsWith","includes","setLanguage","lang","setItem","notifyListeners","getCurrentLanguage","getAvailableLanguages","code","t","params","arguments","undefined","split","k","k2","replace","paramName","addListener","callback","push","removeListener","filter","listener","forEach","LanguageSelector","setCurrentLanguage","useState","isOpen","setIsOpen","useEffect","handleLanguageChange","newLanguage","languages","currentLangInfo","find","React","className","onClick","aria-label","role","map","langCode","init_sound","AudioContext","webkitAudioContext","StereoPannerNode","create_sound","duplicate_sound","play_sound","set_volume","stop_sound","delete_sound","context","resume","sounds","create_sound_raw","id","channels","rate","createBuffer","getChannelData","gain","createGain","panner","pan","decodeAudioData","srcId","volume","loop","stop","pow","relVolume","createBufferSource","node","connect","destination","start","stop_all","sound","SpawnSizes","buffer_reader","done","read8","read16","read32","read_str","String","fromCharCode","buffer_writer","write8","write16","write32","write_str","rest","RejectionReason","JOIN_SUCCESS","JOIN_ALREADY_IN_GAME","JOIN_GAME_NOT_FOUND","JOIN_INCORRECT_PASSWORD","JOIN_VERSION_MISMATCH","JOIN_GAME_FULL","CREATE_GAME_EXISTS","read_packet","types","cls","values","packet","packet_size","write_packet","write","make_batch","packets","reduce","sum","_ref","writer","server_packet","version","_ref2","game_list","games","_ref3","_ref4","_ref5","join_accept","cookie","difficulty","_ref6","join_reject","reason","_ref7","_ref8","disconnect","_ref9","message","payload","_ref0","_ref1","turn","_ref10","batch","client_packet","_ref11","create_game","_ref12","_ref13","join_game","_ref14","_ref15","leave_game","drop_player","_ref16","_ref17","_ref18","_ref19","PeerID","Options","port","secure","MAX_PLRS","webrtc_server","onMessage","onClose","peer","Peer","on","conn","onConnect","players","myplr","random","onError","off","onOpen","setTimeout","pkt","send","handle","drop","mask","destroy","close","webrtc_client","needUnreg","unreg","clearTimeout","timeout","pending","do_load_game","api","audio","mpq","spawn","fs","texts","downloading","metadataResponse","axios","request","responseType","headers","Cache-Control","totalSize","numChunks","chunks","loadedBytes","createProgressHandler","chunkIndex","currentLoadedBytes","onProgress","downloadingText","text","loaded","total","chunkResponse","toString","padStart","onDownloadProgress","chunk","load_spawn","offscreen","canvas","getContext","alpha","worker","packetQueue","webrtc","server","client","webrtc_open","addEventListener","action","func","_len","Array","_key","postMessage","ctx","bitmap","images","clip","belt","transferFromImageBitmap","x","y","w","h","image","createImageData","putImageData","save","font","x0","y0","x1","y1","beginPath","rect","str","color","r","g","fillStyle","fillText","restore","updateBelt","onRender","setCursorPos","openKeyboard","stack","onExit","setCurrentSave","transfer","loading","initializing","setInterval","MpqSize","ListSize","progress","loadFile","runWorker","_objectSpread","compress","processing","loader","weight","mpqsize","fHeader","ready","fBinary","MpqBinary","fList","ListFile","header","header16","hashTablePos","blockTablePos","hashTableSize","blockTableSize","fHashTable","fBlockTable","list","trim","listMap","hashStr","h1","h2","tasks","cSize","task","numFiles","fLoad","all","binary","run","res","outputSize","fill","blockPos","CompressMpq","Component","super","setState","props","started","onDone","render","href","style","width","round","htmlFor","accept","display","onChange","parseFile","reportLink","retail","searchParams","process","line","join","userAgent","ReactGA","initialize","pageview","TOUCH_MOVE","TOUCH_RMB","TOUCH_SHIFT","keyboardRule","sheet","styleSheets","rule","cssRules","CSSRule","MEDIA_RULE","conditionText","sub","selectorText","findKeyboardRule","Link","children","_objectWithoutProperties","_excluded","_extends","rel","App","dropping","has_spawn","dataTransfer","items","kind","getAsFile","getDropFile","preventDefault","compressMpq","setDropping","isDropFile","save_names","updateSaves","show_saves","exitPointerLock","screen","innerHeight","height","pointerLocked","game","mousePos","eventMods","keyboard","touchControls","element","classList","requestPointerLock","mouseButton","keyCode","showKeyboard","clearKeySel","onKeyboardInner","blur","updateTouchButton","touches","touchCanvas","touchMods","prevTc","touchButton","setTouchMod","fullscreenElement","requestFullscreen","setTouch0","setTouch_","bind","setTouch1","setTouch2","setTouch3","setTouchBelt_","setTouch4","setTouch5","setTouch6","setTouch7","setTouch8","setTouch9","componentDidMount","onDrop","onDragOver","onDragEnter","onDragLeave","componentWillUnmount","inc","errorObject","saveName","mapStackTrace","left","toFixed","top","maxKeyboard","assign","focus","transform","keyboardNum","getBoundingClientRect","cursorPos","right","bottom","reload","saves","hero","getPassword","nameEnd","indexOf","level","getPlayerName","removeSave","confirm","fileName","downloadSave","drawBelt","idx","slot","touchButtons","touchBelt","touchCtx","drawImage","used","Set","has","alert","removeEventListener","event","category","onMouseMove","onMouseDown","onMouseUp","onKeyDown","onKeyUp","onMenu","onTouchStart","passive","capture","onTouchMove","onTouchEnd","onPointerLockChange","onResize","pointerLockElement","mozPointerLockElement","movementX","movementY","clientX","clientY","button","shiftKey","ctrlKey","altKey","len","setSelectionRange","valid","maxValue","parseInt","use","toggle","now","performance","beltTime","release","touchOther","btn","identifier","stick","panPos","original","dx","dy","step","offsetHeight","abs","renderUi","FontAwesomeIcon","icon","faDownload","faTimes","parseSave","ref","showSaves","classNames","touch","setElement","active","setCanvas","onKeyboard","onBlur","onKeyboardBlur","setKeyboard","spellCheck","ReactDOM","getElementById","origin","fetch","response","contentType","status","unregister","checkValidServiceWorker"],"mappings":"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M,GAAM,GAAM,GAAM,GAAM,GAAM,EAAM,EAAM,GAAM,GAAM,EAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,EAAM,GAAM,EAAM,GAAM,GAAM,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,GAAM,EAAM,EAAM,GAC1F,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,EAAM,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,EAAM,GAAM,EAAM,GAAM,EAC1F,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,EAAM,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAA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","file":"static/js/main.de01dbff.chunk.js","sourcesContent":["import IdbKvStore from  'idb-kv-store';\r\n\r\n/*const importStorage = () => new Promise((resolve, reject) => {\r\n  let done = false;\r\n  const frame = document.createElement('iframe');\r\n  window.addEventListener('message', ({data}) => {\r\n    if (data.method === 'storage' && !done) {\r\n      done = true;\r\n      resolve(data.files);\r\n      frame.contentWindow.postMessage({method: 'clear'}, '*');\r\n    }\r\n  });\r\n  frame.addEventListener('load', () => {\r\n    frame.contentWindow.postMessage({method: 'transfer'}, '*');\r\n  });\r\n  frame.addEventListener('error', () => {\r\n    if (!done) {\r\n      done = true;\r\n      resolve(null);\r\n    }\r\n  });\r\n  frame.src = \"https://diablo.rivsoft.net/storage.html\";\r\n  frame.style.display = \"none\";\r\n  document.body.appendChild(frame);\r\n  setTimeout(() => {\r\n    if (!done) {\r\n      done = true;\r\n      resolve(null);\r\n    }\r\n  }, 10000);\r\n});*/\r\n\r\nasync function downloadFile(store, name) {\r\n  const file = await store.get(name.toLowerCase());\r\n  if (file) {\r\n    const blob = new Blob([file], {type: 'binary/octet-stream'});\r\n    const url = URL.createObjectURL(blob);\r\n    const lnk = document.createElement('a');\r\n    lnk.setAttribute('href', url);\r\n    lnk.setAttribute('download', name);\r\n    document.body.appendChild(lnk);\r\n    lnk.click();\r\n    document.body.removeChild(lnk);\r\n    URL.revokeObjectURL(url);\r\n  } else {\r\n    console.error(`File ${name} does not exist`);\r\n  }\r\n}\r\n\r\nasync function downloadSaves(store) {\r\n  for (let name of await store.keys()) {\r\n    if (name.match(/\\.sv$/i)) {\r\n      downloadFile(store, name);\r\n    }\r\n  }\r\n}\r\n\r\nconst readFile = file => new Promise((resolve, reject) => {\r\n  const reader = new FileReader();\r\n  reader.onload = () => resolve(reader.result);\r\n  reader.onerror = () => reject(reader.error);\r\n  reader.onabort = () => reject();\r\n  reader.readAsArrayBuffer(file);\r\n});\r\nasync function uploadFile(store, files, file) {\r\n  const data = new Uint8Array(await readFile(file));\r\n  files.set(file.name.toLowerCase(), data);\r\n  return store.set(file.name.toLowerCase(), data);\r\n}\r\n\r\nexport default async function create_fs(load) {\r\n  try {\r\n    const store = new IdbKvStore('diablo_fs');\r\n    const files = new Map();\r\n    for (let [name, data] of Object.entries(await store.json())) {\r\n      files.set(name, data);\r\n    }\r\n    /*if (load) {\r\n      const files = await importStorage();\r\n      if (files) {\r\n        for (let [name, data] of files) {\r\n          files.set(name, data);\r\n          store.set(name, data);\r\n        }\r\n      }\r\n    }*/\r\n    window.DownloadFile = name => downloadFile(store, name);\r\n    window.DownloadSaves = () => downloadSaves(store);\r\n    return {\r\n      files,\r\n      update: (name, data) => store.set(name, data),\r\n      delete: name => store.remove(name),\r\n      clear: () => store.clear(),\r\n      download: name => downloadFile(store, name),\r\n      upload: file => uploadFile(store, files, file),\r\n      fileUrl: async name => {\r\n        const file = await store.get(name.toLowerCase());\r\n        if (file) {\r\n          const blob = new Blob([file], {type: 'binary/octet-stream'});\r\n          return URL.createObjectURL(blob);\r\n        }\r\n      },\r\n    };\r\n  } catch (e) {\r\n    window.DownloadFile = () => console.error('IndexedDB is not supported');\r\n    window.DownloadSaves = () => console.error('IndexedDB is not supported');\r\n    return {\r\n      files: new Map(),\r\n      update: () => Promise.resolve(),\r\n      delete: () => Promise.resolve(),\r\n      clear: () => Promise.resolve(),\r\n      download: () => Promise.resolve(),\r\n      upload: () => Promise.resolve(),\r\n      fileUrl: () => Promise.resolve(),\r\n    };\r\n  }  \r\n}\r\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"944f146ef3ad57d4dff1.worker.js\");\n};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"2384231be07b27379035.worker.js\");\n};","module.exports = __webpack_public_path__ + \"static/media/MpqCmp.8aa3c6dc.wasm\";","module.exports = __webpack_public_path__ + \"static/media/ListFile.b370797d.txt\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const CMP_BINARY = 0; // Binary compression\r\nexport const CMP_ASCII = 1; // Ascii compression\r\nexport const CMP_NO_ERROR = 0;\r\nexport const CMP_INVALID_DICTSIZE = 1;\r\nexport const CMP_INVALID_MODE = 2;\r\nexport const CMP_BAD_DATA = 3;\r\nexport const CMP_ABORT = 4;\r\nexport const CMP_IMPLODE_DICT_SIZE1 = 1024; // Dictionary size of 1024\r\nexport const CMP_IMPLODE_DICT_SIZE2 = 2048; // Dictionary size of 2048\r\nexport const CMP_IMPLODE_DICT_SIZE3 = 4096; // Dictionary size of 4096\r\n\r\nexport const PKDCL_OK = 0;\r\nexport const PKDCL_STREAM_END = 1; // All data from the input stream is read\r\nexport const PKDCL_NEED_DICT = 2; // Need more data (dictionary)\r\nexport const PKDCL_CONTINUE = 10; // Internal flag, not returned to user\r\nexport const PKDCL_GET_INPUT = 11; // Internal flag, not returned to user\r\n\r\nconst DistBits = new Uint8Array([\r\n  0x02, 0x04, 0x04, 0x05, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06,\r\n  0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,\r\n  0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,\r\n  0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08\r\n]);\r\n\r\nconst DistCode = new Uint8Array([\r\n  0x03, 0x0D, 0x05, 0x19, 0x09, 0x11, 0x01, 0x3E, 0x1E, 0x2E, 0x0E, 0x36, 0x16, 0x26, 0x06, 0x3A,\r\n  0x1A, 0x2A, 0x0A, 0x32, 0x12, 0x22, 0x42, 0x02, 0x7C, 0x3C, 0x5C, 0x1C, 0x6C, 0x2C, 0x4C, 0x0C,\r\n  0x74, 0x34, 0x54, 0x14, 0x64, 0x24, 0x44, 0x04, 0x78, 0x38, 0x58, 0x18, 0x68, 0x28, 0x48, 0x08,\r\n  0xF0, 0x70, 0xB0, 0x30, 0xD0, 0x50, 0x90, 0x10, 0xE0, 0x60, 0xA0, 0x20, 0xC0, 0x40, 0x80, 0x00\r\n]);\r\n\r\nconst ExLenBits = new Uint8Array([\r\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08\r\n]);\r\n\r\nconst LenBase = new Uint16Array([\r\n  0x0000, 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007,\r\n  0x0008, 0x000A, 0x000E, 0x0016, 0x0026, 0x0046, 0x0086, 0x0106\r\n]);\r\n\r\nconst LenBits = new Uint8Array([\r\n  0x03, 0x02, 0x03, 0x03, 0x04, 0x04, 0x04, 0x05, 0x05, 0x05, 0x05, 0x06, 0x06, 0x06, 0x07, 0x07\r\n]);\r\n\r\nconst LenCode = new Uint8Array([\r\n  0x05, 0x03, 0x01, 0x06, 0x0A, 0x02, 0x0C, 0x14, 0x04, 0x18, 0x08, 0x30, 0x10, 0x20, 0x40, 0x00\r\n]);\r\n\r\nconst ChBitsAsc = new Uint8Array([\r\n  0x0B, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x08, 0x07, 0x0C, 0x0C, 0x07, 0x0C, 0x0C,\r\n  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0D, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,\r\n  0x04, 0x0A, 0x08, 0x0C, 0x0A, 0x0C, 0x0A, 0x08, 0x07, 0x07, 0x08, 0x09, 0x07, 0x06, 0x07, 0x08,\r\n  0x07, 0x06, 0x07, 0x07, 0x07, 0x07, 0x08, 0x07, 0x07, 0x08, 0x08, 0x0C, 0x0B, 0x07, 0x09, 0x0B,\r\n  0x0C, 0x06, 0x07, 0x06, 0x06, 0x05, 0x07, 0x08, 0x08, 0x06, 0x0B, 0x09, 0x06, 0x07, 0x06, 0x06,\r\n  0x07, 0x0B, 0x06, 0x06, 0x06, 0x07, 0x09, 0x08, 0x09, 0x09, 0x0B, 0x08, 0x0B, 0x09, 0x0C, 0x08,\r\n  0x0C, 0x05, 0x06, 0x06, 0x06, 0x05, 0x06, 0x06, 0x06, 0x05, 0x0B, 0x07, 0x05, 0x06, 0x05, 0x05,\r\n  0x06, 0x0A, 0x05, 0x05, 0x05, 0x05, 0x08, 0x07, 0x08, 0x08, 0x0A, 0x0B, 0x0B, 0x0C, 0x0C, 0x0C,\r\n  0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D,\r\n  0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D,\r\n  0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D,\r\n  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,\r\n  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,\r\n  0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C,\r\n  0x0D, 0x0C, 0x0D, 0x0D, 0x0D, 0x0C, 0x0D, 0x0D, 0x0D, 0x0C, 0x0D, 0x0D, 0x0D, 0x0D, 0x0C, 0x0D,\r\n  0x0D, 0x0D, 0x0C, 0x0C, 0x0C, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D, 0x0D\r\n]);\r\n\r\nconst ChCodeAsc = new Uint16Array([\r\n  0x0490, 0x0FE0, 0x07E0, 0x0BE0, 0x03E0, 0x0DE0, 0x05E0, 0x09E0,\r\n  0x01E0, 0x00B8, 0x0062, 0x0EE0, 0x06E0, 0x0022, 0x0AE0, 0x02E0,\r\n  0x0CE0, 0x04E0, 0x08E0, 0x00E0, 0x0F60, 0x0760, 0x0B60, 0x0360,\r\n  0x0D60, 0x0560, 0x1240, 0x0960, 0x0160, 0x0E60, 0x0660, 0x0A60,\r\n  0x000F, 0x0250, 0x0038, 0x0260, 0x0050, 0x0C60, 0x0390, 0x00D8,\r\n  0x0042, 0x0002, 0x0058, 0x01B0, 0x007C, 0x0029, 0x003C, 0x0098,\r\n  0x005C, 0x0009, 0x001C, 0x006C, 0x002C, 0x004C, 0x0018, 0x000C,\r\n  0x0074, 0x00E8, 0x0068, 0x0460, 0x0090, 0x0034, 0x00B0, 0x0710,\r\n  0x0860, 0x0031, 0x0054, 0x0011, 0x0021, 0x0017, 0x0014, 0x00A8,\r\n  0x0028, 0x0001, 0x0310, 0x0130, 0x003E, 0x0064, 0x001E, 0x002E,\r\n  0x0024, 0x0510, 0x000E, 0x0036, 0x0016, 0x0044, 0x0030, 0x00C8,\r\n  0x01D0, 0x00D0, 0x0110, 0x0048, 0x0610, 0x0150, 0x0060, 0x0088,\r\n  0x0FA0, 0x0007, 0x0026, 0x0006, 0x003A, 0x001B, 0x001A, 0x002A,\r\n  0x000A, 0x000B, 0x0210, 0x0004, 0x0013, 0x0032, 0x0003, 0x001D,\r\n  0x0012, 0x0190, 0x000D, 0x0015, 0x0005, 0x0019, 0x0008, 0x0078,\r\n  0x00F0, 0x0070, 0x0290, 0x0410, 0x0010, 0x07A0, 0x0BA0, 0x03A0,\r\n  0x0240, 0x1C40, 0x0C40, 0x1440, 0x0440, 0x1840, 0x0840, 0x1040,\r\n  0x0040, 0x1F80, 0x0F80, 0x1780, 0x0780, 0x1B80, 0x0B80, 0x1380,\r\n  0x0380, 0x1D80, 0x0D80, 0x1580, 0x0580, 0x1980, 0x0980, 0x1180,\r\n  0x0180, 0x1E80, 0x0E80, 0x1680, 0x0680, 0x1A80, 0x0A80, 0x1280,\r\n  0x0280, 0x1C80, 0x0C80, 0x1480, 0x0480, 0x1880, 0x0880, 0x1080,\r\n  0x0080, 0x1F00, 0x0F00, 0x1700, 0x0700, 0x1B00, 0x0B00, 0x1300,\r\n  0x0DA0, 0x05A0, 0x09A0, 0x01A0, 0x0EA0, 0x06A0, 0x0AA0, 0x02A0,\r\n  0x0CA0, 0x04A0, 0x08A0, 0x00A0, 0x0F20, 0x0720, 0x0B20, 0x0320,\r\n  0x0D20, 0x0520, 0x0920, 0x0120, 0x0E20, 0x0620, 0x0A20, 0x0220,\r\n  0x0C20, 0x0420, 0x0820, 0x0020, 0x0FC0, 0x07C0, 0x0BC0, 0x03C0,\r\n  0x0DC0, 0x05C0, 0x09C0, 0x01C0, 0x0EC0, 0x06C0, 0x0AC0, 0x02C0,\r\n  0x0CC0, 0x04C0, 0x08C0, 0x00C0, 0x0F40, 0x0740, 0x0B40, 0x0340,\r\n  0x0300, 0x0D40, 0x1D00, 0x0D00, 0x1500, 0x0540, 0x0500, 0x1900,\r\n  0x0900, 0x0940, 0x1100, 0x0100, 0x1E00, 0x0E00, 0x0140, 0x1600,\r\n  0x0600, 0x1A00, 0x0E40, 0x0640, 0x0A40, 0x0A00, 0x1200, 0x0200,\r\n  0x1C00, 0x0C00, 0x1400, 0x0400, 0x1800, 0x0800, 0x1000, 0x0000  \r\n]);\r\n\r\n/**\r\n * @param {Uint8Array} positions [out] Table of positions\r\n * @param {Uint8Array} start_indexes Table of start indexes\r\n * @param {Uint8Array} length_bits Table of lengths. Each length is stored as number of bits\r\n * @param {number} elements Number of elements in start_indexes and length_bits\r\n */\r\nfunction GenDecodeTabs(positions, start_indexes, length_bits, elements) {\r\n  for (let i = 0; i < elements; i++) {\r\n    const length = 1 << length_bits[i];   // Get the length in bytes\r\n    for (let index = start_indexes[i]; index < 0x100; index += length) {\r\n      positions[index] = i;\r\n    }\r\n  }\r\n}\r\n\r\nfunction GenAscTabs(pWork) {\r\n  let pChCodeAsc = 0xFF;\r\n\r\n  for (let count = 0x00FF; pChCodeAsc >= 0; pChCodeAsc--, count--) {\r\n    let bits_asc = pWork.ChBitsAsc[count];\r\n    let acc;\r\n\r\n    if (bits_asc <= 8) {\r\n      const add = (1 << bits_asc);\r\n      acc = ChCodeAsc[pChCodeAsc];\r\n\r\n      do {\r\n        pWork.offs2C34[acc] = count;\r\n        acc += add;\r\n      } while(acc < 0x100);\r\n    } else if ((acc = (ChCodeAsc[pChCodeAsc] & 0xFF)) !== 0) {\r\n      pWork.offs2C34[acc] = 0xFF;\r\n\r\n      if (ChCodeAsc[pChCodeAsc] & 0x3F) {\r\n        bits_asc -= 4;\r\n        pWork.ChBitsAsc[count] = bits_asc;\r\n\r\n        const add = (1 << bits_asc);\r\n        acc = ChCodeAsc[pChCodeAsc] >> 4;\r\n        do {\r\n          pWork.offs2D34[acc] = count;\r\n          acc += add;\r\n        } while(acc < 0x100);\r\n      } else {\r\n        bits_asc -= 6;\r\n        pWork.ChBitsAsc[count] = bits_asc;\r\n\r\n        const add = (1 << bits_asc);\r\n        acc = ChCodeAsc[pChCodeAsc] >> 6;\r\n        do {\r\n          pWork.offs2E34[acc] = count;\r\n          acc += add;\r\n        } while(acc < 0x80);\r\n      }\r\n    } else {\r\n      bits_asc -= 8;\r\n      pWork.ChBitsAsc[count] = bits_asc;\r\n\r\n      const add = (1 << bits_asc);\r\n      acc = ChCodeAsc[pChCodeAsc] >> 8;\r\n      do {\r\n        pWork.offs2EB4[acc] = count;\r\n        acc += add;\r\n      } while(acc < 0x100);\r\n    }\r\n  }\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\n// Removes given number of bits in the bit buffer. New bits are reloaded from\r\n// the input buffer, if needed.\r\n// Returns: PKDCL_OK:         Operation was successful\r\n//          PKDCL_STREAM_END: There are no more bits in the input buffer\r\nfunction WasteBits(pWork, nBits) {\r\n  // If number of bits required is less than number of (bits in the buffer) ?\r\n  if (nBits <= pWork.extra_bits) {\r\n    pWork.extra_bits -= nBits;\r\n    pWork.bit_buff >>>= nBits;\r\n    return PKDCL_OK;\r\n  }\r\n\r\n  // Load input buffer if necessary\r\n  pWork.bit_buff >>= pWork.extra_bits;\r\n  if (pWork.in_pos === pWork.in_bytes) {\r\n    if ((pWork.in_bytes = pWork.read_buf(pWork.in_buff)) === 0) {\r\n      return PKDCL_STREAM_END;\r\n    }\r\n    pWork.in_pos = 0;\r\n  }\r\n\r\n  // Update bit buffer\r\n  pWork.bit_buff |= (pWork.in_buff[pWork.in_pos++] << 8);\r\n  pWork.bit_buff >>>= (nBits - pWork.extra_bits);\r\n  pWork.extra_bits = (pWork.extra_bits - nBits) + 8;\r\n  return PKDCL_OK;\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\n// Decodes next literal from the input (compressed) data.\r\n// Returns : 0x000: One byte 0x00\r\n//           0x001: One byte 0x01\r\n//           ...\r\n//           0x0FF: One byte 0xFF\r\n//           0x100: Repetition, length of 0x02 bytes\r\n//           0x101: Repetition, length of 0x03 bytes\r\n//           ...\r\n//           0x304: Repetition, length of 0x206 bytes\r\n//           0x305: End of stream\r\n//           0x306: Error\r\nfunction DecodeLit(pWork) {\r\n  if(pWork.bit_buff & 1) {\r\n    // Remove one bit from the input data\r\n    if(WasteBits(pWork, 1)) {\r\n      return 0x306;\r\n    }\r\n\r\n    // The next 8 bits hold the index to the length code table\r\n    let length_code = pWork.LengthCodes[pWork.bit_buff & 0xFF];\r\n\r\n    // Remove the apropriate number of bits\r\n    if(WasteBits(pWork, pWork.LenBits[length_code])) {\r\n      return 0x306;\r\n    }\r\n\r\n    // Are there some extra bits for the obtained length code ?\r\n    const extra_length_bits = pWork.ExLenBits[length_code];\r\n    if(extra_length_bits !== 0) {\r\n      const extra_length = pWork.bit_buff & ((1 << extra_length_bits) - 1);\r\n      if(WasteBits(pWork, extra_length_bits)) {\r\n        if((length_code + extra_length) !== 0x10E) {\r\n          return 0x306;\r\n        }\r\n      }\r\n      length_code = pWork.LenBase[length_code] + extra_length;\r\n    }\r\n\r\n    // In order to distinguish uncompressed byte from repetition length,\r\n    // we have to add 0x100 to the length.\r\n    return length_code + 0x100;\r\n  }\r\n\r\n  // Remove one bit from the input data\r\n  if(WasteBits(pWork, 1)) {\r\n    return 0x306;\r\n  }\r\n\r\n  // If the binary compression type, read 8 bits and return them as one byte.\r\n  if(pWork.ctype === CMP_BINARY) {\r\n    const uncompressed_byte = pWork.bit_buff & 0xFF;\r\n\r\n    if(WasteBits(pWork, 8)) {\r\n      return 0x306;\r\n    }\r\n    return uncompressed_byte;\r\n  }\r\n\r\n  // When ASCII compression ...\r\n  let value;\r\n  if (pWork.bit_buff & 0xFF) {\r\n    value = pWork.offs2C34[pWork.bit_buff & 0xFF];\r\n\r\n    if (value === 0xFF) {\r\n      if (pWork.bit_buff & 0x3F) {\r\n        if (WasteBits(pWork, 4)) {\r\n          return 0x306;\r\n        }\r\n\r\n        value = pWork.offs2D34[pWork.bit_buff & 0xFF];\r\n      } else {\r\n        if (WasteBits(pWork, 6)) {\r\n          return 0x306;\r\n        }\r\n\r\n        value = pWork.offs2E34[pWork.bit_buff & 0x7F];\r\n      }\r\n    }\r\n  } else {\r\n    if(WasteBits(pWork, 8)) {\r\n      return 0x306;\r\n    }\r\n\r\n    value = pWork.offs2EB4[pWork.bit_buff & 0xFF];\r\n  }\r\n\r\n  return WasteBits(pWork, pWork.ChBitsAsc[value]) ? 0x306 : value;\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\n// Decodes the distance of the repetition, backwards relative to the\r\n// current output buffer position\r\nfunction DecodeDist(pWork, rep_length) {\r\n  // Next 2-8 bits in the input buffer is the distance position code\r\n  const dist_pos_code = pWork.DistPosCodes[pWork.bit_buff & 0xFF];\r\n  const dist_pos_bits = pWork.DistBits[dist_pos_code];\r\n  if (WasteBits(pWork, dist_pos_bits)) {\r\n    return 0;\r\n  }\r\n\r\n  let distance;\r\n  if (rep_length === 2) {\r\n    // If the repetition is only 2 bytes length,\r\n    // then take 2 bits from the stream in order to get the distance\r\n    distance = (dist_pos_code << 2) | (pWork.bit_buff & 0x03);\r\n    if (WasteBits(pWork, 2)) {\r\n      return 0;\r\n    }\r\n  } else {\r\n    // If the repetition is more than 2 bytes length,\r\n    // then take \"dsize_bits\" bits in order to get the distance\r\n    distance = (dist_pos_code << pWork.dsize_bits) | (pWork.bit_buff & pWork.dsize_mask);\r\n    if (WasteBits(pWork, pWork.dsize_bits)) {\r\n      return 0;\r\n    }\r\n  }\r\n  return distance + 1;\r\n}\r\n\r\nfunction Expand(pWork) {\r\n  let outputPos = 0x1000;          // Initialize output buffer position\r\n\r\n  // Decode the next literal from the input data.\r\n  // The returned literal can either be an uncompressed byte (next_literal < 0x100)\r\n  // or an encoded length of the repeating byte sequence that\r\n  // is to be copied to the current buffer position\r\n  let result, next_literal;\r\n  while ((result = next_literal = DecodeLit(pWork)) < 0x305) {\r\n    // If the literal is greater than 0x100, it holds length\r\n    // of repeating byte sequence\r\n    // literal of 0x100 means repeating sequence of 0x2 bytes\r\n    // literal of 0x101 means repeating sequence of 0x3 bytes\r\n    // ...\r\n    // literal of 0x305 means repeating sequence of 0x207 bytes\r\n    if(next_literal >= 0x100) {\r\n      // Get the length of the repeating sequence.\r\n      // Note that the repeating block may overlap the current output position,\r\n      // for example if there was a sequence of equal bytes\r\n      let rep_length = next_literal - 0xFE;\r\n      // Get backward distance to the repetition\r\n      const minus_dist = DecodeDist(pWork, rep_length);\r\n      if (minus_dist === 0) {\r\n        result = 0x306;\r\n        break;\r\n      }\r\n\r\n      // Target and source pointer\r\n      let target = outputPos;\r\n      let source = target - minus_dist;\r\n\r\n      // Update buffer output position\r\n      outputPos += rep_length;\r\n\r\n      // Copy the repeating sequence\r\n      const out_buff = pWork.out_buff;\r\n      while (rep_length-- > 0) {\r\n        out_buff[target++] = out_buff[source++];\r\n      }\r\n    } else {\r\n      pWork.out_buff[outputPos++] = next_literal;\r\n    }\r\n\r\n    // Flush the output buffer, if number of extracted bytes has reached the end\r\n    if (outputPos >= 0x2000) {\r\n      // Copy decompressed data into user buffer\r\n      pWork.write_buf(pWork.out_buff.subarray(0x1000, 0x2000));\r\n\r\n      // Now copy the decompressed data to the first half of the buffer.\r\n      // This is needed because the decompression might reuse them as repetitions.\r\n      // Note that if the output buffer overflowed previously, the extra decompressed bytes\r\n      // are stored in \"out_buff_overflow\", and they will now be\r\n      // within decompressed part of the output buffer.\r\n      pWork.out_buff.copyWithin(0, 0x1000, outputPos);\r\n      outputPos -= 0x1000;\r\n    }\r\n  }\r\n\r\n  // Flush any remaining decompressed bytes\r\n  pWork.write_buf(pWork.out_buff.subarray(0x1000, outputPos));\r\n  return result;\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\n// Main exploding function.\r\nexport function explode(read_buf, write_buf) {\r\n  const buffer = new ArrayBuffer(0x3104);\r\n  const pWork = {\r\n    read_buf,\r\n    write_buf,\r\n    in_pos: 3,\r\n    extra_bits: 0,\r\n    in_buff: new Uint8Array(buffer, 0, 0x800),\r\n    DistPosCodes: new Uint8Array(buffer, 0x800, 0x100),\r\n    LengthCodes: new Uint8Array(buffer, 0x900, 0x100),\r\n    offs2C34: new Uint8Array(buffer, 0xA00, 0x100),\r\n    offs2D34: new Uint8Array(buffer, 0xB00, 0x100),\r\n    offs2E34: new Uint8Array(buffer, 0xC00, 0x80),\r\n    offs2EB4: new Uint8Array(buffer, 0xC80, 0x100),\r\n    ChBitsAsc: new Uint8Array(buffer, 0xD80, 0x100),\r\n    DistBits: new Uint8Array(buffer, 0xE80, 0x40),\r\n    LenBits: new Uint8Array(buffer, 0xEC0, 0x10),\r\n    ExLenBits: new Uint8Array(buffer, 0xED0, 0x10),\r\n    LenBase: new Uint16Array(buffer, 0xEE0, 0x10),\r\n    out_buff: new Uint8Array(buffer, 0xF00, 0x2204),\r\n  };\r\n  pWork.in_bytes = read_buf(pWork.in_buff);\r\n  if (pWork.in_bytes <= 4) {\r\n    return CMP_BAD_DATA;\r\n  }\r\n  pWork.ctype = pWork.in_buff[0];\r\n  pWork.dsize_bits = pWork.in_buff[1];\r\n  pWork.bit_buff = pWork.in_buff[2];\r\n\r\n  // Test for the valid dictionary size\r\n  if(4 > pWork.dsize_bits || pWork.dsize_bits > 6) {\r\n    return CMP_INVALID_DICTSIZE;\r\n  }\r\n\r\n  pWork.dsize_mask = 0xFFFF >> (0x10 - pWork.dsize_bits); // Shifted by 'sar' instruction\r\n\r\n  if(pWork.ctype !== CMP_BINARY) {\r\n    if(pWork.ctype !== CMP_ASCII) {\r\n      return CMP_INVALID_MODE;\r\n    }\r\n\r\n    pWork.ChBitsAsc.set(ChBitsAsc);\r\n    GenAscTabs(pWork);\r\n  }\r\n\r\n  pWork.LenBits.set(LenBits);\r\n  GenDecodeTabs(pWork.LengthCodes, LenCode, pWork.LenBits, pWork.LenBits.length);\r\n  pWork.ExLenBits.set(ExLenBits);\r\n  pWork.LenBase.set(LenBase);\r\n  pWork.DistBits.set(DistBits);\r\n  GenDecodeTabs(pWork.DistPosCodes, DistCode, pWork.DistBits, pWork.DistBits.length);\r\n  if(Expand(pWork) !== 0x306) {\r\n    return CMP_NO_ERROR;\r\n  }\r\n      \r\n  return CMP_ABORT;\r\n}\r\n\r\nexport default explode;\r\n","const W = new Uint32Array(80);\r\n\r\nconst SHA1CircularShift = (shift, value) => ((value << shift) | (value >> (32 - shift)));\r\n\r\nclass SHA1 {\r\n  digest = new Uint32Array(5);\r\n  count = 0;\r\n\r\n  input8(u8) {\r\n    const u32 = new Uint32Array(u8.buffer, u8.byteOffset, 16);\r\n    this.input(u32);\r\n  }\r\n  input(u32) {\r\n    this.count += u32.length * 32;\r\n    for (let i = 0; i < 16; ++i) {\r\n      W[i] = u32[i];\r\n    }\r\n    for (let i = 16; i < 80; ++i) {\r\n      W[i] = W[i - 16] ^ W[i - 14] ^ W[i - 8] ^ W[i - 3];\r\n    }\r\n    let A = this.digest[0];\r\n    let B = this.digest[1];\r\n    let C = this.digest[2];\r\n    let D = this.digest[3];\r\n    let E = this.digest[4];\r\n\r\n    for (let i = 0; i < 20; i++) {\r\n      const temp = SHA1CircularShift(5, A) + ((B & C) | ((~B) & D)) + E + W[i] + 0x5A827999;\r\n      E = D;\r\n      D = C;\r\n      C = SHA1CircularShift(30, B);\r\n      B = A;\r\n      A = temp | 0;\r\n    }\r\n\r\n    for (let i = 20; i < 40; i++) {\r\n      const temp = SHA1CircularShift(5, A) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1;\r\n      E = D;\r\n      D = C;\r\n      C = SHA1CircularShift(30, B);\r\n      B = A;\r\n      A = temp | 0;\r\n    }\r\n\r\n    for (let i = 40; i < 60; i++) {\r\n      const temp = SHA1CircularShift(5, A) + ((B & C) | (B & D) | (C & D)) + E + W[i] + 0x8F1BBCDC;\r\n      E = D;\r\n      D = C;\r\n      C = SHA1CircularShift(30, B);\r\n      B = A;\r\n      A = temp | 0;\r\n    }\r\n\r\n    for (let i = 60; i < 80; i++) {\r\n      const temp = SHA1CircularShift(5, A) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6;\r\n      E = D;\r\n      D = C;\r\n      C = SHA1CircularShift(30, B);\r\n      B = A;\r\n      A = temp | 0;\r\n    }\r\n\r\n    this.digest[0] += A;\r\n    this.digest[1] += B;\r\n    this.digest[2] += C;\r\n    this.digest[3] += D;\r\n    this.digest[4] += E;\r\n  }\r\n\r\n  constructor() {\r\n\t  this.digest[0] = 0x67452301;\r\n\t  this.digest[1] = 0xEFCDAB89;\r\n\t  this.digest[2] = 0x98BADCFE;\r\n\t  this.digest[3] = 0x10325476;\r\n    this.digest[4] = 0xC3D2E1F0;\r\n    \r\n    this.digest8 = new Uint8Array(this.digest.buffer);\r\n  }\r\n}\r\n\r\nclass Random {\r\n  constructor(seed) {\r\n    this.seed = seed;\r\n  }\r\n  next() {\r\n    this.seed = (((this.seed * 3) << 16) + ((this.seed * 67) << 8) + (this.seed * 253) + 2531011) | 0;\r\n    return (this.seed >> 16) & 0x7FFF;\r\n  }\r\n}\r\n\r\nfunction codec_init_key(password) {\r\n  const rand = new Random(0x7058);\r\n  const key = new Uint8Array(136);\r\n  const k32 = new Uint32Array(key.buffer);\r\n  for (let i = 0; i < 136; ++i) {\r\n    key[i] = rand.next();\r\n  }\r\n  const pw = new Uint8Array(64);\r\n  for (let i = 0; i < 64; ++i) {\r\n    pw[i] = password.charCodeAt(i % password.length);\r\n  }\r\n\r\n  let sha = new SHA1();\r\n  sha.input8(pw);\r\n\r\n  for (let i = 0; i < 34; ++i) {\r\n    k32[i] ^= sha.digest[i % sha.digest.length];\r\n  }\r\n\r\n  sha = new SHA1();\r\n  sha.input(k32.subarray(18));\r\n  return sha;\r\n}\r\n\r\nexport default function codec_decode(data, password) {\r\n  if (data.length <= 8) {\r\n    return;\r\n  }\r\n  const size = data.length - 8;\r\n  if (size % 64) {\r\n    return;\r\n  }\r\n\r\n  if (data[size + 4]) {\r\n    return;\r\n  }\r\n\r\n  const last_size = data[size + 5];\r\n  const result_size = size + last_size - 64;\r\n  const result = new Uint8Array(result_size);\r\n\r\n  const sha = codec_init_key(password);\r\n  const size32 = size >> 2;\r\n  const data32 = new Uint32Array(data.buffer, data.byteOffset, size32 + 1);\r\n  const buf32 = new Uint32Array(16);\r\n  const buf = new Uint8Array(buf32.buffer);\r\n\r\n  for (let i = 0; i < size32; i += 16) {\r\n    for (let j = 0; j < 16; ++j) {\r\n      buf32[j] = data32[i + j] ^ sha.digest[j % sha.digest.length];\r\n    }\r\n    sha.input(buf32);\r\n    result.set(i === size32 - 16 ? buf.subarray(0, last_size) : buf, i * 4);\r\n  }\r\n  if (data32[size32] !== sha.digest[0]) {\r\n    return;\r\n  }\r\n  return result;\r\n}\r\n","import { explode } from './explode';\r\nimport codec_decode from './codec';\r\n\r\nfunction pkzip_decompress(data, out_size) {\r\n  if (data.length === out_size) {\r\n    return data;\r\n  }\r\n\r\n  const output = new Uint8Array(out_size);\r\n  let in_pos = 0;\r\n  let out_pos = 0;\r\n  function read_buf(dst) {\r\n    const count = Math.min(data.length - in_pos, dst.length);\r\n    dst.set(data.subarray(in_pos, count));\r\n    in_pos += count;\r\n    return count;\r\n  }\r\n  function write_buf(src) {\r\n    if (out_pos + src.length > out_size) {\r\n      throw Error('decompress buffer overflow');\r\n    }\r\n    output.set(src, out_pos);\r\n    out_pos += src.length;\r\n  }\r\n\r\n  if (explode(read_buf, write_buf) || out_pos !== out_size) {\r\n    return null;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nconst hashtable = (function() {\r\n  const hashtable = new Uint32Array(1280);\r\n  let seed = 0x00100001;\r\n  for (let i = 0; i < 256; i++) {\r\n    for (let j = i; j < 1280; j += 256) {\r\n      seed = (seed * 125 + 3) % 0x2AAAAB;\r\n      const a = (seed & 0xFFFF) << 16;\r\n      seed = (seed * 125 + 3) % 0x2AAAAB;\r\n      const b = (seed & 0xFFFF);\r\n      hashtable[j] = a | b;\r\n    }\r\n  }\r\n  return hashtable;\r\n})();\r\nexport function decrypt(u32, key) {\r\n  let seed = 0xEEEEEEEE;\r\n  for (let i = 0; i < u32.length; ++i) {\r\n    seed += hashtable[0x400 + (key & 0xFF)];\r\n    u32[i] ^= seed + key;\r\n    seed = (u32[i] + seed * 33 + 3) | 0;\r\n    key = ((~key << 0x15) + 0x11111111) | (key >>> 0x0B);\r\n  }\r\n}\r\nexport function decrypt8(u8, key) {\r\n  decrypt(new Uint32Array(u8.buffer, u8.byteOffset, u8.length >> 2), key);\r\n}\r\nexport function encrypt(u32, key) {\r\n  let seed = 0xEEEEEEEE;\r\n  for (let i = 0; i < u32.length; ++i) {\r\n    seed += hashtable[0x400 + (key & 0xFF)];\r\n    const orig = u32[i];\r\n    u32[i] ^= seed + key;\r\n    seed = (orig + seed * 33 + 3) | 0;\r\n    key = ((~key << 0x15) + 0x11111111) | (key >>> 0x0B);\r\n  }\r\n}\r\nexport function encrypt8(u8, key) {\r\n  encrypt(new Uint32Array(u8.buffer, u8.byteOffset, u8.length >> 2), key);\r\n}\r\nexport function hash(name, type) {\r\n  let seed1 = 0x7FED7FED;\r\n  let seed2 = 0xEEEEEEEE;\r\n  for (let i = 0; i < name.length; ++i) {\r\n    let ch = name.charCodeAt(i);\r\n    if (ch >= 0x61 && ch <= 0x7A) {\r\n      ch -= 0x20;\r\n    }\r\n    if (ch === 0x2F) {\r\n      ch = 0x5C;\r\n    }\r\n    seed1 = hashtable[type * 256 + ch] ^ (seed1 + seed2);\r\n    seed2 = (ch + seed1 + seed2 * 33 + 3) | 0;\r\n  }\r\n  return seed1 >>> 0;\r\n}\r\n\r\nexport function path_name(name) {\r\n  const pos = Math.max(name.lastIndexOf('/'), name.lastIndexOf('\\\\'));\r\n  return name.substring(pos + 1);\r\n}\r\n\r\nconst Flags = {\r\n  CompressPkWare: 0x00000100,\r\n  CompressMulti: 0x00000200,\r\n  Compressed: 0x0000FF00,\r\n  Encrypted: 0x00010000,\r\n  FixSeed: 0x00020000,\r\n  PatchFile: 0x00100000,\r\n  SingleUnit: 0x01000000,\r\n  DummyFile: 0x02000000,\r\n  SectorCrc: 0x04000000,\r\n  Exists: 0x80000000,\r\n};\r\n\r\nexport class MpqReader {\r\n  constructor(buffer) {\r\n    this.buffer = buffer;\r\n    this.u8 = new Uint8Array(buffer);\r\n    this.u32 = new Uint32Array(buffer, 0, buffer.byteLength >> 2);\r\n\r\n    this.readHeader();\r\n  }\r\n\r\n  readHeader() {\r\n    const {u8, u32} = this;\r\n    if (u32[0] !== 0x1A51504D) {\r\n      throw Error('invalid MPQ header');\r\n    }\r\n    const sizeId = u8[14] + (u8[15] << 8);\r\n    const hashOffset = u32[4];\r\n    const blockOffset = u32[5];\r\n    const hashCount = u32[6];\r\n    const blockCount = u32[7];\r\n    this.hashTable = this.readTable(hashOffset, hashCount, \"(hash table)\");\r\n    this.blockTable = this.readTable(blockOffset, blockCount, \"(block table)\");\r\n    this.blockSize = 1 << (9 + sizeId);\r\n  }\r\n\r\n  readTable(offset, count, key) {\r\n    const buffer = new Uint32Array(this.buffer.slice(offset, offset + count * 16));\r\n    decrypt(buffer, hash(key, 3));\r\n    return buffer;\r\n  }\r\n\r\n  fileIndex(name) {\r\n    const {hashTable} = this;\r\n    const length = hashTable.length >> 2;\r\n    const index = hash(name, 0) % length;\r\n    const keyA = hash(name, 1), keyB = hash(name, 2);\r\n    for (let i = index, count = 0; hashTable[i * 4 + 3] !== 0xFFFFFFFF && count < length; i = (i + 1) % length, ++count) {\r\n      if (hashTable[i * 4] === keyA && hashTable[i * 4 + 1] === keyB && hashTable[i * 4 + 3] !== 0xFFFFFFFE) {\r\n        return i;\r\n      }\r\n    }\r\n  }\r\n\r\n  readRaw(name) {\r\n    const index = this.fileIndex(name);\r\n    if (index == null) {\r\n      return;\r\n    }\r\n    const block = this.hashTable[index * 4 + 3];\r\n    const info = {\r\n      filePos: this.blockTable[block * 4],\r\n      cmpSize: this.blockTable[block * 4 + 1],\r\n      fileSize: this.blockTable[block * 4 + 2],\r\n      flags: this.blockTable[block * 4 + 3],\r\n      key: hash(path_name(name), 3),\r\n    };\r\n    if ((info.flags & Flags.PatchFile) || info.filePos + info.cmpSize > this.buffer.byteLength) {\r\n      return;\r\n    }\r\n    if (!(info.flags & Flags.Compressed)) {\r\n      info.cmpSize = info.fileSize;\r\n    }\r\n    if (info.flags & Flags.FixSeed) {\r\n      info.key = (info.key + info.filePos) ^ info.fileSize;\r\n    }\r\n    return {info, data: new Uint8Array(this.buffer, info.filePos, info.cmpSize)};\r\n  }\r\n\r\n  read(name) {\r\n    const raw = this.readRaw(name);\r\n    if (!raw) {\r\n      return;\r\n    }\r\n    let {info, data} = raw;\r\n    data = data.slice();\r\n\r\n    if (info.flags & Flags.SingleUnit) {\r\n      if (info.flags & Flags.Encrypted) {\r\n        decrypt8(data, info.key);\r\n      }\r\n      if (info.flags & Flags.CompressMulti) {\r\n        return;\r\n      } else if (info.flags & Flags.CompressPkWare) {\r\n        return pkzip_decompress(data, info.fileSize);\r\n      }\r\n      return data;\r\n    } else if (!(info.flags & Flags.Compressed)) {\r\n      if (info.flags & Flags.Encrypted) {\r\n        for (let i = 0; i < info.fileSize; i += this.blockSize) {\r\n          decrypt8(data.subarray(i, Math.min(info.fileSize, i + this.blockSize)), info.key + i / this.blockSize);\r\n        }\r\n      }\r\n      return data;\r\n    } else {\r\n      const numBlocks = Math.floor((info.fileSize + this.blockSize - 1) / this.blockSize);\r\n      const tableSize = numBlocks + 1;\r\n      if (data.length < tableSize * 4) {\r\n        return;\r\n      }\r\n      const blocks = new Uint32Array(data.buffer, 0, tableSize);\r\n      if (info.flags & Flags.Encrypted) {\r\n        decrypt(blocks, info.key - 1);\r\n      }\r\n      const output = new Uint8Array(info.fileSize);\r\n      for (let i = 0; i < numBlocks; ++i) {\r\n        const oPos = i * this.blockSize;\r\n        const uSize = Math.min(this.blockSize, info.fileSize - oPos);\r\n        if (blocks[i + 1] > data.length) {\r\n          return;\r\n        }\r\n        let tmp = data.subarray(blocks[i], blocks[i + 1]);\r\n        if (info.flags & Flags.Encrypted) {\r\n          // this is not safe, but our files are small enough\r\n          decrypt8(tmp, info.key + i);\r\n        }\r\n        if (info.flags & Flags.CompressMulti) {\r\n          return;\r\n        } else if (info.flags & Flags.CompressPkWare) {\r\n          tmp = pkzip_decompress(tmp, uSize);\r\n        }\r\n        if (!tmp || tmp.length !== uSize) {\r\n          return;\r\n        }\r\n        output.set(tmp, oPos);\r\n      }\r\n      return output;\r\n    }\r\n  }\r\n}\r\n\r\nfunction getPassword(name) {\r\n  if (name.match(/spawn\\d+\\.sv/i)) {\r\n    return 'lshbkfg1'; // single, spawn\r\n  } else if (name.match(/share_\\d+\\.sv/i)) {\r\n    return 'lshbkfg1'; // multi, spawn\r\n  } else if (name.match(/multi_\\d+\\.sv/i)) {\r\n    return 'szqnlsk1'; // multi, retail\r\n  } else {\r\n    return 'xrgyrkj1'; // single, retail\r\n  }\r\n}\r\n\r\nexport default function getPlayerName(data, name) {\r\n  try {\r\n    const reader = new MpqReader(data);\r\n    const hero = codec_decode(reader.read(\"hero\"), getPassword(name));\r\n    const nameEnd = hero.indexOf(0, 16);\r\n    const result = {};\r\n    result.name = String.fromCharCode(...hero.subarray(16, nameEnd));\r\n    result.cls = hero[48];\r\n    result.level = hero[53];\r\n    return result;\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n}\r\n","import enTranslations from './en.json';\nimport zhTwTranslations from './zh-tw.json';\nimport zhCnTranslations from './zh-cn.json';\nimport jaTranslations from './ja.json';\nimport koTranslations from './ko.json';\n// 新增的語言導入\nimport deTranslations from './de.json';\nimport esTranslations from './es.json';\nimport frTranslations from './fr.json';\nimport itTranslations from './it.json';\nimport ptTranslations from './pt.json';\nimport nlTranslations from './nl.json';\nimport svTranslations from './sv.json';\nimport ruTranslations from './ru.json';\n\nconst translations = {\n  'en': enTranslations,\n  'zh-tw': zhTwTranslations,\n  'zh-cn': zhCnTranslations,\n  'ja': jaTranslations,\n  'ko': koTranslations,\n  // 新增的語言\n  'de': deTranslations,\n  'es': esTranslations,\n  'fr': frTranslations,\n  'it': itTranslations,\n  'pt': ptTranslations,\n  'nl': nlTranslations,\n  'sv': svTranslations,\n  'ru': ruTranslations\n};\n\nclass I18n {\n  constructor() {\n    this.currentLanguage = this.loadLanguage();\n    this.listeners = [];\n  }\n\n  loadLanguage() {\n    // 先檢查 localStorage\n    const saved = localStorage.getItem('diablo-language');\n    if (saved && translations[saved]) {\n      return saved;\n    }\n    \n    // 檢查瀏覽器語言\n    const browserLang = navigator.language || navigator.userLanguage || 'en';\n    \n    // 中文語言處理\n    if (browserLang.startsWith('zh')) {\n      if (browserLang.includes('TW') || browserLang.includes('HK') || browserLang.includes('MO')) {\n        return 'zh-tw';\n      } else if (browserLang.includes('CN') || browserLang.includes('SG')) {\n        return 'zh-cn';\n      }\n      // 預設為簡體中文\n      return 'zh-cn';\n    } \n    // 日韓語處理\n    else if (browserLang.startsWith('ja')) {\n      return 'ja';\n    } else if (browserLang.startsWith('ko')) {\n      return 'ko';\n    }\n    // 新增語言的自動檢測\n    else if (browserLang.startsWith('de')) {\n      return 'de';\n    } else if (browserLang.startsWith('es')) {\n      return 'es';\n    } else if (browserLang.startsWith('fr')) {\n      return 'fr';\n    } else if (browserLang.startsWith('it')) {\n      return 'it';\n    } else if (browserLang.startsWith('pt')) {\n      return 'pt';\n    } else if (browserLang.startsWith('nl')) {\n      return 'nl';\n    } else if (browserLang.startsWith('sv')) {\n      return 'sv';\n    } else if (browserLang.startsWith('ru')) {\n      return 'ru';\n    }\n    \n    return 'en';\n  }\n\n  setLanguage(lang) {\n    if (translations[lang] && this.currentLanguage !== lang) {\n      this.currentLanguage = lang;\n      localStorage.setItem('diablo-language', lang);\n      this.notifyListeners();\n    }\n  }\n\n  getCurrentLanguage() {\n    return this.currentLanguage;\n  }\n\n  getAvailableLanguages() {\n    return [\n      { code: 'en', name: 'English' },\n      { code: 'zh-tw', name: '繁體中文' },\n      { code: 'zh-cn', name: '简体中文' },\n      { code: 'ja', name: '日本語' },\n      { code: 'ko', name: '한국어' },\n      // 新增的語言選項\n      { code: 'de', name: 'Deutsch' },\n      { code: 'es', name: 'Español' },\n      { code: 'fr', name: 'Français' },\n      { code: 'it', name: 'Italiano' },\n      { code: 'pt', name: 'Português' },\n      { code: 'nl', name: 'Nederlands' },\n      { code: 'sv', name: 'Svenska' },\n      { code: 'ru', name: 'Русский' }\n    ];\n  }\n\n  t(key, params = {}) {\n    const keys = key.split('.');\n    let value = translations[this.currentLanguage];\n    \n    for (const k of keys) {\n      if (value && typeof value === 'object' && k in value) {\n        value = value[k];\n      } else {\n        // Fallback to English if key not found\n        value = translations.en;\n        for (const k2 of keys) {\n          if (value && typeof value === 'object' && k2 in value) {\n            value = value[k2];\n          } else {\n            return key; // Return key if not found in any language\n          }\n        }\n        break;\n      }\n    }\n    \n    if (typeof value === 'string') {\n      // Replace parameters in the string\n      return value.replace(/\\{(\\w+)\\}/g, (match, paramName) => {\n        return params[paramName] || match;\n      });\n    }\n    \n    return key;\n  }\n\n  addListener(callback) {\n    this.listeners.push(callback);\n  }\n\n  removeListener(callback) {\n    this.listeners = this.listeners.filter(listener => listener !== callback);\n  }\n\n  notifyListeners() {\n    this.listeners.forEach(callback => callback(this.currentLanguage));\n  }\n}\n\nconst i18n = new I18n();\n\nexport default i18n;\n","import React, { useState, useEffect } from 'react';\r\nimport i18n from '../i18n';\r\nimport './LanguageSelector.scss';\r\n\r\nconst LanguageSelector = () => {\r\n  const [currentLanguage, setCurrentLanguage] = useState(i18n.getCurrentLanguage());\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    const handleLanguageChange = (newLanguage) => {\r\n      setCurrentLanguage(newLanguage);\r\n    };\r\n    \r\n    i18n.addListener(handleLanguageChange);\r\n    \r\n    return () => {\r\n      i18n.removeListener(handleLanguageChange);\r\n    };\r\n  }, []);\r\n\r\n  const languages = i18n.getAvailableLanguages();\r\n  const currentLangInfo = languages.find(lang => lang.code === currentLanguage);\r\n\r\n  const handleLanguageChange = (langCode) => {\r\n    i18n.setLanguage(langCode);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"language-selector\">\r\n      <button \r\n        className=\"language-button\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        aria-label={i18n.t('ui.language')}\r\n      >\r\n        <span role=\"img\" aria-label=\"Language\">🌐</span> {currentLangInfo?.name}\r\n      </button>\r\n      \r\n      {isOpen && (\r\n        <div className=\"language-dropdown\">\r\n          {languages.map(lang => (\r\n            <button\r\n              key={lang.code}\r\n              className={`language-option ${lang.code === currentLanguage ? 'active' : ''}`}\r\n              onClick={() => handleLanguageChange(lang.code)}\r\n            >\r\n              {lang.name}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageSelector;\r\n","function no_sound() {\r\n  return {\r\n    create_sound: () => 0,\r\n    duplicate_sound: () => 0,\r\n    play_sound: () => undefined,\r\n    set_volume: () => undefined,\r\n    stop_sound: () => undefined,\r\n    delete_sound: () => undefined,\r\n  };\r\n}\r\n\r\nfunction decodeAudioData(context, buffer) {\r\n  return new Promise((resolve, reject) => {\r\n    context.decodeAudioData(buffer, resolve, reject);\r\n  });\r\n}\r\n\r\nexport default function init_sound() {\r\n  const AudioContext = window.AudioContext || window.webkitAudioContext;\r\n  const StereoPannerNode = window.StereoPannerNode;\r\n  if (!AudioContext) {\r\n    return no_sound();\r\n  }\r\n\r\n  let context = null;\r\n  try {\r\n    context = new AudioContext();\r\n    context.resume();\r\n  } catch (e) {\r\n  }\r\n  const sounds = new Map();\r\n\r\n  return {\r\n    create_sound_raw(id, data, length, channels, rate) {\r\n      if (!context) {\r\n        return;\r\n      }\r\n      const buffer = context.createBuffer(channels, length, rate);\r\n      for (let i = 0; i < channels; ++i) {\r\n        buffer.getChannelData(i).set(data.subarray(i * length, i * length + length));\r\n      }\r\n      sounds.set(id, {\r\n        buffer: Promise.resolve(buffer),\r\n        gain: context.createGain(),\r\n        panner: StereoPannerNode && new StereoPannerNode(context, {pan: 0}),\r\n      });\r\n    },\r\n    create_sound(id, data) {\r\n      if (!context) {\r\n        return;\r\n      }\r\n      const buffer = decodeAudioData(context, data.buffer);\r\n      sounds.set(id, {\r\n        buffer,\r\n        gain: context.createGain(),\r\n        panner: StereoPannerNode && new StereoPannerNode(context, {pan: 0}),\r\n      });\r\n    },\r\n    duplicate_sound(id, srcId) {\r\n      if (!context) {\r\n        return;\r\n      }\r\n      const src = sounds.get(srcId);\r\n      if (!src) {\r\n        return;\r\n      }\r\n      sounds.set(id, {\r\n        buffer: src.buffer,\r\n        gain: context.createGain(),\r\n        panner: StereoPannerNode && new StereoPannerNode(context, {pan: 0}),\r\n      });\r\n    },\r\n    play_sound(id, volume, pan, loop) {\r\n      const src = sounds.get(id);\r\n      if (src) {\r\n        if (src.source) {\r\n          src.source.then(source => source.stop());\r\n        }\r\n        src.gain.gain.value = Math.pow(2.0, volume / 1000.0);\r\n        const relVolume = Math.pow(2.0, pan / 1000.0);\r\n        if (src.panner) {\r\n          src.panner.pan.value = 1.0 - 2.0 / (1.0 + relVolume);\r\n        }\r\n        src.source = src.buffer.then(buffer => {\r\n          const source = context.createBufferSource();\r\n          source.buffer = buffer;\r\n          source.loop = !!loop;\r\n          let node = source.connect(src.gain);\r\n          if (src.panner) {\r\n            node = node.connect(src.panner);\r\n          }\r\n          node.connect(context.destination);\r\n          source.start();\r\n          return source;\r\n        });\r\n      }\r\n    },\r\n    set_volume(id, volume) {\r\n      const src = sounds.get(id);\r\n      if (src) {\r\n        src.gain.gain.value = Math.pow(2.0, volume / 1000.0);\r\n      }\r\n    },\r\n    stop_sound(id) {\r\n      const src = sounds.get(id);\r\n      if (src && src.source) {\r\n        src.source.then(source => source.stop());\r\n        delete src.source;\r\n      }\r\n    },\r\n    delete_sound(id) {\r\n      const src = sounds.get(id);\r\n      if (src && src.source) {\r\n        src.source.then(source => source.stop());\r\n      }\r\n      sounds.delete(id);\r\n    },\r\n\r\n    stop_all() {\r\n      for (let [, sound] of sounds) {\r\n        if (sound.source) {\r\n          sound.source.then(source => source.stop());\r\n        }\r\n      }\r\n      sounds.clear();\r\n      context = null;\r\n    }\r\n  };\r\n}\r\n","import axios from 'axios';\r\n\r\nconst SpawnSizes = [50274091, 25830791];\r\n\r\nexport { SpawnSizes };\r\n\r\nexport default async function load_spawn(api, fs) {\r\n  let file = fs.files.get('spawn.mpq');\r\n  if (file && !SpawnSizes.includes(file.byteLength)) {\r\n    fs.files.delete('spawn.mpq');\r\n    await fs.delete('spawn.mpq');\r\n    file = null;\r\n  }\r\n  if (!file) {\r\n    // First, get metadata\r\n    const metadataResponse = await axios.request({\r\n      url: '/chunks/spawn.mpq.meta',\r\n      responseType: 'json',\r\n      headers: {\r\n        'Cache-Control': 'max-age=31536000'\r\n      }\r\n    });\r\n    \r\n    const { totalSize, numChunks } = metadataResponse.data;\r\n    \r\n    if (!SpawnSizes.includes(totalSize)) {\r\n      throw Error(\"Invalid spawn.mpq size. Try clearing cache and refreshing the page.\");\r\n    }\r\n    \r\n    // Download all chunks\r\n    const chunks = [];\r\n    let loadedBytes = 0;\r\n    \r\n    const createProgressHandler = (chunkIndex, currentLoadedBytes) => (e) => {\r\n      if (api.onProgress) {\r\n        const downloadingText = api.texts ? api.texts.downloading : 'Downloading';\r\n        api.onProgress({\r\n          text: `${downloadingText} chunk ${chunkIndex + 1}/${numChunks}...`,\r\n          loaded: currentLoadedBytes + e.loaded,\r\n          total: totalSize\r\n        });\r\n      }\r\n    };\r\n    \r\n    for (let i = 0; i < numChunks; i++) {\r\n      const chunkResponse = await axios.request({\r\n        url: `/chunks/spawn.mpq.chunk${i.toString().padStart(3, '0')}`,\r\n        responseType: 'arraybuffer',\r\n        onDownloadProgress: createProgressHandler(i, loadedBytes),\r\n        headers: {\r\n          'Cache-Control': 'max-age=31536000'\r\n        }\r\n      });\r\n      \r\n      chunks.push(new Uint8Array(chunkResponse.data));\r\n      loadedBytes += chunkResponse.data.byteLength;\r\n    }\r\n    \r\n    // Reassemble chunks\r\n    const data = new Uint8Array(totalSize);\r\n    let offset = 0;\r\n    \r\n    for (const chunk of chunks) {\r\n      data.set(chunk, offset);\r\n      offset += chunk.length;\r\n    }\r\n    \r\n    fs.files.set('spawn.mpq', data);\r\n    fs.update('spawn.mpq', data.slice());\r\n  }\r\n  return fs;\r\n}\r\n","export class buffer_reader {\r\n  constructor(buffer) {\r\n    this.buffer = (buffer instanceof Uint8Array ? buffer : new Uint8Array(buffer));\r\n    this.pos = 0;\r\n  }\r\n  done() {\r\n    return this.pos === this.buffer.byteLength;\r\n  }\r\n  read8() {\r\n    if (this.pos >= this.buffer.byteLength) {\r\n      throw Error('packet too small');\r\n    }\r\n    return this.buffer[this.pos++];\r\n  }\r\n  read16() {\r\n    const {pos, buffer} = this;\r\n    if (pos + 2 > buffer.byteLength) {\r\n      throw Error('packet too small');\r\n    }\r\n    const result = buffer[pos] | (buffer[pos + 1] << 8);\r\n    this.pos += 2;\r\n    return result;\r\n  }\r\n  read32() {\r\n    const {pos, buffer} = this;\r\n    if (pos + 4 > buffer.byteLength) {\r\n      throw Error('packet too small');\r\n    }\r\n    const result = buffer[pos] | (buffer[pos + 1] << 8) | (buffer[pos + 2] << 16) | (buffer[pos + 3] << 24);\r\n    this.pos += 4;\r\n    return result;\r\n  }\r\n  read_str() {\r\n    const length = this.read8();\r\n    const {pos, buffer} = this;\r\n    if (pos + length > buffer.byteLength) {\r\n      throw Error('packet too small');\r\n    }\r\n    const result = String.fromCharCode(...buffer.subarray(pos, pos + length));\r\n    this.pos += length;\r\n    return result;\r\n  }\r\n  read_buf() {\r\n    const size = this.read32();\r\n    const result = this.buffer.subarray(this.pos, this.pos + size);\r\n    this.pos += size;\r\n    return result;\r\n  }\r\n}\r\nexport class buffer_writer {\r\n  constructor(length) {\r\n    this.buffer = new Uint8Array(length);\r\n    this.pos = 0;\r\n  }\r\n  get result() {\r\n    return this.buffer.buffer;\r\n  }\r\n  write8(value) {\r\n    this.buffer[this.pos++] = value;\r\n    return this;\r\n  }\r\n  write16(value) {\r\n    const {pos, buffer} = this;\r\n    buffer[pos] = value;\r\n    buffer[pos + 1] = value >> 8;\r\n    this.pos += 2;\r\n    return this;\r\n  }\r\n  write32(value) {\r\n    const {pos, buffer} = this;\r\n    buffer[pos] = value;\r\n    buffer[pos + 1] = value >> 8;\r\n    buffer[pos + 2] = value >> 16;\r\n    buffer[pos + 3] = value >> 24;\r\n    this.pos += 4;\r\n    return this;\r\n  }\r\n  write_str(value) {\r\n    const length = value.length;\r\n    this.write8(length);\r\n    const {pos, buffer} = this;\r\n    for (let i = 0; i < length; ++i) {\r\n      buffer[pos + i] = value.charCodeAt(i);\r\n    }\r\n    this.pos += length;\r\n    return this;\r\n  }\r\n  rest(value) {\r\n    this.buffer.set(value, this.pos);\r\n    this.pos += value.byteLength;\r\n    return this;\r\n  }\r\n  write_buf(value) {\r\n    this.write32(value.byteLength);\r\n    this.rest(value);\r\n    return this;\r\n  }\r\n}\r\n\r\nexport const RejectionReason = {\r\n  JOIN_SUCCESS: 0x00,\r\n  JOIN_ALREADY_IN_GAME: 0x01,\r\n  JOIN_GAME_NOT_FOUND: 0x02,\r\n  JOIN_INCORRECT_PASSWORD: 0x03,\r\n  JOIN_VERSION_MISMATCH: 0x04,\r\n  JOIN_GAME_FULL: 0x05,\r\n  CREATE_GAME_EXISTS: 0x06,\r\n};\r\n\r\nexport function read_packet(reader, types) {\r\n  const code = reader.read8();\r\n  const cls = Object.values(types).find(cls => cls.code === code);\r\n  if (!cls) {\r\n    throw Error('invalid packet code');\r\n  }\r\n  return {type: cls, packet: cls.read(reader)};\r\n}\r\nexport function packet_size(type, packet) {\r\n  return (typeof type.size === \"function\" ? type.size(packet) : type.size) + 1;\r\n}\r\nexport function write_packet(type, packet) {\r\n  const size = packet_size(type, packet);\r\n  return type.write(new buffer_writer(size).write8(type.code), packet).result;\r\n}\r\n\r\nexport function make_batch(types) {\r\n  return {\r\n    code: 0x00,\r\n    read: reader => {\r\n      const count = reader.read16();\r\n      const packets = [];\r\n      for (let i = 0; i < count; ++i) {\r\n        packets.push(read_packet(reader, types()));\r\n      }\r\n      return packets;\r\n    },\r\n    size: packets => packets.reduce((sum, {type, packet}) => sum + packet_size(type, packet), 2),\r\n    write: (writer, packets) => {\r\n      writer.write16(packets.length);\r\n      for (let {type, packet} of packets) {\r\n        type.write(writer.write8(type.code), packet);\r\n      }\r\n      return writer;\r\n    },\r\n  };\r\n}\r\n\r\nexport const server_packet = {\r\n  info: {\r\n    code: 0x32,\r\n    read: reader => ({version: reader.read32()}),\r\n    size: 4,\r\n    write: (writer, {version}) => writer.write32(version),\r\n  },\r\n  game_list: {\r\n    code: 0x21,\r\n    read: reader => {\r\n      const count = reader.read16();\r\n      const games = [];\r\n      for (let i = 0; i < count; ++i) {\r\n        games.push({type: reader.read32(), name: reader.read_str()});\r\n      }\r\n      return {games};\r\n    },\r\n    size: ({games}) => games.reduce((sum, {name}) => sum + 5 + name.length, 2),\r\n    write: (writer, {games}) => {\r\n      writer.write16(games.length);\r\n      for (let {type, name} of games) {\r\n        writer.write32(type);\r\n        writer.write_str(name);\r\n      }\r\n      return writer;\r\n    },\r\n  },\r\n  join_accept: {\r\n    code: 0x12,\r\n    read: reader => ({cookie: reader.read32(), index: reader.read8(), seed: reader.read32(), difficulty: reader.read32()}),\r\n    size: 13,\r\n    write: (writer, {cookie, index, seed, difficulty}) => writer.write32(cookie).write8(index).write32(seed).write32(difficulty),\r\n  },\r\n  join_reject: {\r\n    code: 0x15,\r\n    read: reader => ({cookie: reader.read32(), reason: reader.read8()}),\r\n    size: 5,\r\n    write: (writer, {cookie, reason}) => writer.write32(cookie).write8(reason),\r\n  },\r\n  connect: {\r\n    code: 0x13,\r\n    read: reader => ({id: reader.read8()}),\r\n    size: 1,\r\n    write: (writer, {id}) => writer.write8(id),\r\n  },\r\n  disconnect: {\r\n    code: 0x14,\r\n    read: reader => ({id: reader.read8(), reason: reader.read32()}),\r\n    size: 5,\r\n    write: (writer, {id, reason}) => writer.write8(id).write32(reason),\r\n  },\r\n  message: {\r\n    code: 0x01,\r\n    read: reader => ({id: reader.read8(), payload: reader.read_buf()}),\r\n    size: ({payload}) => 5 + payload.byteLength,\r\n    write: (writer, {id, payload}) => writer.write8(id).write_buf(payload),\r\n  },\r\n  turn: {\r\n    code: 0x02,\r\n    read: reader => ({id: reader.read8(), turn: reader.read32()}),\r\n    size: 5,\r\n    write: (writer, {id, turn}) => writer.write8(id).write32(turn),\r\n  },\r\n  batch: make_batch(() => server_packet),\r\n};\r\n\r\nexport const client_packet = {\r\n  info: {\r\n    code: 0x31,\r\n    read: reader => ({version: reader.read32()}),\r\n    size: 4,\r\n    write: (writer, {version}) => writer.write32(version),\r\n  },\r\n  game_list: {\r\n    code: 0x21,\r\n    read: () => ({}),\r\n    size: 0,\r\n    write: writer => writer,\r\n  },\r\n  create_game: {\r\n    code: 0x22,\r\n    read: reader => ({cookie: reader.read32(), name: reader.read_str(), password: reader.read_str(), difficulty: reader.read32()}),\r\n    size: ({name, password}) => 10 + name.length + password.length,\r\n    write: (writer, {cookie, name, password, difficulty}) => writer.write32(cookie).write_str(name).write_str(password).write32(difficulty),\r\n  },\r\n  join_game: {\r\n    code: 0x23,\r\n    read: reader => ({cookie: reader.read32(), name: reader.read_str(), password: reader.read_str()}),\r\n    size: ({name, password}) => 6 + name.length + password.length,\r\n    write: (writer, {cookie, name, password}) => writer.write32(cookie).write_str(name).write_str(password),\r\n  },\r\n  leave_game: {\r\n    code: 0x24,\r\n    read: () => ({}),\r\n    size: 0,\r\n    write: writer => writer,\r\n  },\r\n  drop_player: {\r\n    code: 0x03,\r\n    read: reader => ({id: reader.read8(), reason: reader.read32()}),\r\n    size: 5,\r\n    write: (writer, {id, reason}) => writer.write8(id).write32(reason),\r\n  },\r\n  message: {\r\n    code: 0x01,\r\n    read: reader => ({id: reader.read8(), payload: reader.read_buf()}),\r\n    size: ({payload}) => 5 + payload.byteLength,\r\n    write: (writer, {id, payload}) => writer.write8(id).write_buf(payload),\r\n  },\r\n  turn: {\r\n    code: 0x02,\r\n    read: reader => ({turn: reader.read32()}),\r\n    size: 4,\r\n    write: (writer, {turn}) => writer.write32(turn),\r\n  },\r\n  batch: make_batch(() => server_packet),\r\n};\r\n","import Peer from 'peerjs';\r\nimport { buffer_reader, read_packet, write_packet, client_packet, server_packet, RejectionReason } from './packet';\r\n\r\n/*function log_packet(data, type) {\r\n  const reader = new buffer_reader(data);\r\n  const id = reader.read8();\r\n  for (let [name, {code, read}] of Object.entries(type)) {\r\n    if (code === id && (name !== 'message' && name !== 'turn')) {\r\n      console.log(`${type === client_packet ? 'client_packet' : 'server_packet'}.${name} ${JSON.stringify(read(reader))}`);\r\n    }\r\n  }\r\n}*/\r\n\r\nconst PeerID = name => `diabloweb_dDv62yHQrZJP28tBEHL_${name}`;\r\nconst Options = {port: 443, secure: true};\r\nconst MAX_PLRS = 4;\r\n\r\nclass webrtc_server {\r\n  constructor(version, {cookie, name, password, difficulty}, onMessage, onClose) {\r\n    this.version = version;\r\n    this.name = name;\r\n    this.password = password;\r\n    this.difficulty = difficulty;\r\n    this.onMessage = onMessage;\r\n    this.onClose = onClose;\r\n\r\n    this.peer = new Peer(PeerID(name), Options);\r\n    this.peer.on('connection', conn => this.onConnect(conn));\r\n    this.players = [];\r\n    this.myplr = 0;\r\n\r\n    this.seed = Math.floor(Math.random() * Math.pow(2, 32));\r\n\r\n    const onError = () => {\r\n      onMessage(write_packet(server_packet.join_reject, {cookie, reason: RejectionReason.CREATE_GAME_EXISTS}));\r\n      onClose();\r\n      this.peer.off('error', onError);\r\n      this.peer.off('open', onOpen);\r\n    };\r\n    const onOpen = () => {\r\n      //console.log('peer open');\r\n      setTimeout(() => {\r\n        onMessage(write_packet(server_packet.join_accept, {cookie, index: 0, seed: this.seed, difficulty}));\r\n        onMessage(write_packet(server_packet.connect, {id: 0}));\r\n      }, 0);\r\n      this.peer.off('error', onError);\r\n      this.peer.off('open', onOpen);\r\n    };\r\n    this.peer.on('error', onError);\r\n    this.peer.on('open', onOpen);\r\n\r\n    //this.peer.on('error', err => console.log('peer error:', err));\r\n  }\r\n\r\n  onConnect(conn) {\r\n    //conn.on('error', err => console.log('conn error:', err));\r\n    //console.log('conn open');\r\n    const peer = {conn};\r\n    conn.on('data', packet => {\r\n      const reader = new buffer_reader(packet);\r\n      const {type, packet: pkt} = read_packet(reader, client_packet);\r\n      switch (type.code) {\r\n      case client_packet.info.code:\r\n        peer.version = pkt.version;\r\n        break;\r\n      case client_packet.join_game.code:\r\n        if (peer.version !== this.version) {\r\n          conn.send(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_VERSION_MISMATCH}));\r\n        } else if (pkt.name !== this.name) {\r\n          conn.send(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_GAME_NOT_FOUND}));\r\n        } else if (pkt.password !== this.password) {\r\n          conn.send(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_INCORRECT_PASSWORD}));\r\n        } else {\r\n          let i = 1;\r\n          while (i < MAX_PLRS && this.players[i]) {\r\n            ++i;\r\n          }\r\n          if (i >= MAX_PLRS) {\r\n            conn.send(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_GAME_FULL}));            \r\n          } else {\r\n            this.players[i] = peer;\r\n            peer.id = i;\r\n            conn.send(write_packet(server_packet.join_accept, {cookie: pkt.cookie, index: i, seed: this.seed, difficulty: this.difficulty}));\r\n            this.send(0xFF, write_packet(server_packet.connect, {id: i}));\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n        if (peer.id != null) {\r\n          this.handle(peer.id, type.code, pkt);\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n      if (!reader.done()) {\r\n        throw Error('packet too large');\r\n      }\r\n    });\r\n    conn.on('close', () => {\r\n      //console.log('conn close');\r\n      if (peer.id != null) {\r\n        this.drop(peer.id, 0x40000006);\r\n      }\r\n    });\r\n  }\r\n\r\n  send(mask, pkt) {\r\n    for (let i = 1; i < MAX_PLRS; ++i) {\r\n      if ((mask & (1 << i)) && this.players[i]) {\r\n        if (this.players[i].conn) {\r\n          this.players[i].conn.send(pkt);\r\n        }\r\n      }\r\n    }\r\n    // self last since it will destroy the buffer\r\n    if (mask & 1) {\r\n      this.onMessage(pkt);\r\n    }\r\n  }\r\n\r\n  drop(id, reason) {\r\n    if (id === 0) {\r\n      for (let i = 1; i < MAX_PLRS; ++i) {\r\n        this.drop(i, 0x40000006);\r\n      }\r\n      this.onMessage(write_packet(server_packet.disconnect, {id, reason}));\r\n      this.peer.destroy();\r\n      this.onClose();\r\n    } else if (this.players[id]) {\r\n      this.send(0xFF, write_packet(server_packet.disconnect, {id, reason}));\r\n      this.players[id].id = null;\r\n      if (this.players[id].conn) {\r\n        this.players[id].conn.close();\r\n      }\r\n      this.players[id] = null;\r\n    }\r\n  }\r\n\r\n  handle(id, code, pkt) {\r\n    switch (code) {\r\n    case client_packet.leave_game.code:\r\n      this.drop(id, 3);\r\n      break;\r\n    case client_packet.drop_player.code:\r\n      this.drop(pkt.id, pkt.reason);\r\n      break;\r\n    case client_packet.message.code:\r\n      this.send(pkt.id === 0xFF ? ~(1 << id) : (1 << pkt.id), write_packet(server_packet.message, {id, payload: pkt.payload}));\r\n      break;\r\n    case client_packet.turn.code:\r\n      this.send(~(1 << id), write_packet(server_packet.turn, {id, turn: pkt.turn}));\r\n      break;\r\n    default:\r\n      throw Error(`invalid packet ${code}`);\r\n    }\r\n  }\r\n}\r\n\r\nclass webrtc_client {\r\n  pending = [];\r\n\r\n  constructor(version, {cookie, name, password}, onMessage, onClose) {\r\n    this.peer = new Peer(Options);\r\n    this.conn = this.peer.connect(PeerID(name));\r\n\r\n    let needUnreg = true;\r\n    const unreg = () => {\r\n      if (!needUnreg) {\r\n        return;\r\n      }\r\n      needUnreg = false;\r\n      this.peer.off('error', onError);\r\n      this.conn.off('error', onError);\r\n      this.conn.off('open', onOpen);\r\n      clearTimeout(timeout);\r\n    };\r\n    const onError = () => {\r\n      onMessage(write_packet(server_packet.join_reject, {cookie, reason: RejectionReason.JOIN_GAME_NOT_FOUND}));\r\n      onClose();\r\n      unreg();\r\n    };\r\n    const onOpen = () => {\r\n      this.conn.send(write_packet(client_packet.info, {version}));\r\n      this.conn.send(write_packet(client_packet.join_game, {cookie, name, password}));\r\n      for (let pkt of this.pending) {\r\n        this.conn.send(pkt);\r\n      }\r\n      this.pending = null;\r\n      this.conn.off('open', onOpen);\r\n    };\r\n    const timeout = setTimeout(onError, 10000);\r\n    this.peer.on('error', onError);\r\n    this.conn.on('error', onError);\r\n    this.conn.on('open', onOpen);\r\n\r\n    //this.peer.on('error', err => console.log('peer error:', err));\r\n    //this.conn.on('error', err => console.log('conn error:', err));\r\n\r\n    this.conn.on('data', data => {\r\n      unreg();\r\n      const reader = new buffer_reader(data);\r\n      const {type, packet: pkt} = read_packet(reader, server_packet);\r\n      switch (type.code) {\r\n      case server_packet.join_accept.code:\r\n        this.myplr = pkt.index;\r\n        break;\r\n      case server_packet.join_reject.code:\r\n        onClose();\r\n        break;\r\n      case server_packet.disconnect.code:\r\n        if (pkt.id === 'myplr') {\r\n          onClose();\r\n        }\r\n        break;\r\n      default:\r\n      }\r\n      onMessage(data);\r\n    });\r\n    this.conn.on('close', data => {\r\n      onClose();\r\n    });\r\n  }\r\n\r\n  send(packet) {\r\n    if (this.pending) {\r\n      this.pending.push(packet);\r\n    } else {\r\n      this.conn.send(packet);\r\n    }\r\n  }\r\n}\r\n\r\nexport default function webrtc_open(onMessage) {\r\n  let server = null, client = null;\r\n\r\n  let version = 0;\r\n\r\n  /*const prevMessage = onMessage;\r\n  onMessage = data => {\r\n    log_packet(data, server_packet);\r\n    prevMessage(data);\r\n  };*/\r\n\r\n  return {\r\n    send: function(packet) {\r\n      //log_packet(packet, client_packet);\r\n      const reader = new buffer_reader(packet);\r\n      const {type, packet: pkt} = read_packet(reader, client_packet);\r\n      switch (type.code) {\r\n      case client_packet.info.code:\r\n        version = pkt.version;\r\n        break;\r\n      case client_packet.create_game.code:\r\n        if (server || client) {\r\n          onMessage(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_ALREADY_IN_GAME}));\r\n        } else {\r\n          server = new webrtc_server(version, pkt, onMessage, () => server = null);\r\n        }\r\n        break;\r\n      case client_packet.join_game.code:\r\n        if (server || client) {\r\n          onMessage(write_packet(server_packet.join_reject, {cookie: pkt.cookie, reason: RejectionReason.JOIN_ALREADY_IN_GAME}));\r\n        } else {\r\n          client = new webrtc_client(version, pkt, onMessage, () => client = null);\r\n        }\r\n        break;\r\n      default:\r\n        if (server) {\r\n          server.handle(0, type.code, pkt);\r\n          if (type.code === client_packet.leave_game.code) {\r\n            server = null;\r\n          }\r\n        } else if (client) {\r\n          client.send(packet);\r\n          if (type.code === client_packet.leave_game.code) {\r\n            client = null;\r\n          }\r\n          return;\r\n        } else if (type.code !== client_packet.leave_game.code) {\r\n          throw Error(`invalid packet ${type.code}`);\r\n        }\r\n      }\r\n      if (!reader.done()) {\r\n        throw Error('packet too large');\r\n      }\r\n    },\r\n  };\r\n}\r\n","import Worker from './game.worker.js';\r\nimport init_sound from './sound';\r\nimport load_spawn from './load_spawn';\r\nimport webrtc_open from './webrtc';\r\nimport i18n from '../i18n';\r\n\r\nfunction onRender(api, ctx, {bitmap, images, text, clip, belt}) {\r\n  if (bitmap) {\r\n    ctx.transferFromImageBitmap(bitmap);\r\n  } else {\r\n    for (let {x, y, w, h, data} of images) {\r\n      const image = ctx.createImageData(w, h);\r\n      image.data.set(data);\r\n      ctx.putImageData(image, x, y);\r\n    }\r\n    if (text.length) {\r\n      ctx.save();\r\n      ctx.font = 'bold 13px Times New Roman';\r\n      if (clip) {\r\n        const {x0, y0, x1, y1} = clip;\r\n        ctx.beginPath();\r\n        ctx.rect(x0, y0, x1 - x0, y1 - y0);\r\n        ctx.clip();\r\n      }\r\n      for (let {x, y, text: str, color} of text) {\r\n        const r = ((color >> 16) & 0xFF);\r\n        const g = ((color >> 8) & 0xFF);\r\n        const b = (color & 0xFF);\r\n        ctx.fillStyle = `rgb(${r}, ${g}, ${b})`;\r\n        ctx.fillText(str, x, y + 22);\r\n      }\r\n      ctx.restore();\r\n    }\r\n  }\r\n\r\n  api.updateBelt(belt);\r\n}\r\n\r\nfunction testOffscreen() {\r\n  return false;\r\n  // This works but I couldn't see any performance difference, and support for 2D canvas in workers is very poor.\r\n  // In this mode, instead of sending a batch of areas to draw back to the main thread, the worker does all drawing on its own and sends a complete bitmap object back.\r\n  // However, this effectively clears the worker's canvas, so we need to redraw the whole frame every time, which defeats the performance gained from reduced copying.\r\n  /*try {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const offscreen = canvas.transferControlToOffscreen();\r\n    const context = offscreen.getContext(\"2d\");\r\n    return context != null;\r\n  } catch (e) {\r\n    return false;\r\n  }*/\r\n}\r\n\r\nasync function do_load_game(api, audio, mpq, spawn) {\r\n  const fs = await api.fs;\r\n  if (spawn && !mpq) {\r\n    // Pass translated texts to load_spawn through api object\r\n    api.texts = {\r\n      downloading: i18n.t('progress.downloading')\r\n    };\r\n    await load_spawn(api, fs);\r\n  }\r\n\r\n  let context = null, offscreen = false;\r\n  if (testOffscreen()) {\r\n    context = api.canvas.getContext(\"bitmaprenderer\");\r\n    offscreen = true;\r\n  } else {\r\n    context = api.canvas.getContext(\"2d\", {alpha: false});\r\n  }\r\n  return await new Promise((resolve, reject) => {\r\n    try {\r\n      const worker = new Worker();\r\n\r\n      let packetQueue = [];\r\n      const webrtc = webrtc_open(data => {\r\n        packetQueue.push(data);\r\n      });\r\n\r\n      worker.addEventListener(\"message\", ({data}) => {\r\n        switch (data.action) {\r\n        case \"loaded\":\r\n          resolve((func, ...params) => worker.postMessage({action: \"event\", func, params}));\r\n          break;\r\n        case \"render\":\r\n          onRender(api, context, data.batch);\r\n          break;\r\n        case \"audio\":\r\n          audio[data.func](...data.params);\r\n          break;\r\n        case \"audioBatch\":\r\n          for (let {func, params} of data.batch) {\r\n            audio[func](...params);\r\n          }\r\n          break;\r\n        case \"fs\":\r\n          fs[data.func](...data.params);\r\n          break;\r\n        case \"cursor\":\r\n          api.setCursorPos(data.x, data.y);\r\n          break;\r\n        case \"keyboard\":\r\n          api.openKeyboard(data.rect);\r\n          break;\r\n        case \"error\":\r\n          audio.stop_all();\r\n          api.onError(data.error, data.stack);\r\n          break;\r\n        case \"failed\":\r\n          reject({message: data.error, stack: data.stack});\r\n          break;\r\n        case \"progress\":\r\n          api.onProgress({text: data.text, loaded: data.loaded, total: data.total});\r\n          break;\r\n        case \"exit\":\r\n          api.onExit();\r\n          break;\r\n        case \"current_save\":\r\n          api.setCurrentSave(data.name);\r\n          break;\r\n          case \"packet\":\r\n          webrtc.send(data.buffer);\r\n          break;\r\n        case \"packetBatch\":\r\n          for (let packet of data.batch) {\r\n            webrtc.send(packet);\r\n          }\r\n          break;\r\n        default:\r\n        }\r\n      });          \r\n      const transfer= [];\r\n      for (let [, file] of fs.files) {\r\n        transfer.push(file.buffer);\r\n      }\r\n      const texts = {\r\n        loading: i18n.t('progress.loading'),\r\n        initializing: i18n.t('progress.initializing')\r\n      };\r\n      worker.postMessage({action: \"init\", files: fs.files, mpq, spawn, offscreen, texts}, transfer);\r\n      setInterval(() => {\r\n        if (packetQueue.length) {\r\n          worker.postMessage({action: \"packetBatch\", batch: packetQueue}, packetQueue);\r\n          packetQueue.length = 0;\r\n        }\r\n      }, 20);\r\n      delete fs.files;\r\n    } catch (e) {\r\n      reject(e);\r\n    }\r\n  });\r\n}\r\n\r\nexport default function load_game(api, mpq, spawn) {\r\n  const audio = init_sound();\r\n  return do_load_game(api, audio, mpq, spawn);\r\n}\r\n","import Worker from './mpqcmp.worker.js';\r\nimport MpqBinary from './MpqCmp.wasm';\r\nimport ListFile from './ListFile.txt';\r\nimport axios from 'axios';\r\n\r\nimport { decrypt, encrypt, hash, path_name } from '../api/savefile';\r\n\r\nconst MpqSize = 156977;\r\nconst ListSize = 75542;\r\n\r\nconst readFile = (file, progress) => new Promise((resolve, reject) => {\r\n  const reader = new FileReader();\r\n  reader.onload = () => {\r\n    if (progress) {\r\n      progress({loaded: file.size});\r\n    }\r\n    resolve(reader.result);\r\n  };\r\n  reader.onerror = () => reject(reader.error);\r\n  reader.onabort = () => reject();\r\n  if (progress) {\r\n    reader.addEventListener(\"progress\", progress);\r\n  }\r\n  reader.readAsArrayBuffer(file);\r\n});\r\n\r\nasync function loadFile(url, progress, responseType='arraybuffer') {\r\n  const binary = await axios.request({\r\n    url,\r\n    responseType,\r\n    onDownloadProgress: progress,\r\n  });\r\n  return binary.data;\r\n}\r\n\r\nfunction runWorker(data, transfer, progress) {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      const worker = new Worker();\r\n      worker.addEventListener(\"message\", ({data}) => {\r\n        switch (data.action) {\r\n        case \"result\":\r\n          resolve({buffer: data.buffer, blocks: data.blocks});\r\n          break;\r\n        case \"error\":\r\n          reject({message: data.error, stack: data.stack});\r\n          break;\r\n        case \"progress\":\r\n          progress(data.value);\r\n          break;\r\n        default:\r\n        }\r\n      });\r\n      worker.postMessage({action: \"run\", ...data}, transfer);\r\n    } catch (e) {\r\n      reject(e);\r\n    }\r\n  });\r\n}\r\n\r\nexport default async function compress(mpq, progress, texts = {loading: 'Loading...', processing: 'Processing...'}) {\r\n  progress(texts.loading);\r\n  const files = [];\r\n  function updateProgress() {\r\n    progress(texts.loading, files.reduce((sum, {loaded, weight}) => sum + loaded * weight, 0),\r\n      files.reduce((sum, {total, weight}) => sum + total * weight, 0));\r\n  }\r\n  const loader = file => e => { file.loaded = e.loaded; updateProgress(); };\r\n\r\n  const mpqsize = mpq.size;\r\n\r\n  const fHeader = {loaded: 0, weight: 1, total: mpqsize};\r\n  fHeader.ready = readFile(mpq.slice(0, 32), loader(fHeader));\r\n  files.push(fHeader);\r\n\r\n  const fBinary = {loaded: 0, weight: 5, total: MpqSize};\r\n  fBinary.ready = loadFile(MpqBinary, loader(fBinary));\r\n  files.push(fBinary);\r\n\r\n  const fList = {loaded: 0, weight: 5, total: ListSize};\r\n  fList.ready = loadFile(ListFile, loader(fList), 'text');\r\n  files.push(fList);\r\n\r\n  const header = new Uint32Array(await fHeader.ready);\r\n  const header16 = new Uint16Array(header.buffer);\r\n\r\n  if (header[0] !== 0x1A51504D) {\r\n    throw Error('invalid MPQ file');\r\n  }\r\n\r\n  const blockSize = 1 << (9 + header16[7]);\r\n  const hashTablePos = header[4];\r\n  const blockTablePos = header[5];\r\n  const hashTableSize = header[6];\r\n  const blockTableSize = header[7];\r\n  if (hashTablePos + hashTableSize * 16 > mpqsize || blockTablePos + blockTableSize * 16 > mpqsize) {\r\n    throw Error('invalid MPQ file');\r\n  }\r\n\r\n  const fHashTable = {loaded: 0, weight: 1, total: hashTableSize * 16};\r\n  const fBlockTable = {loaded: 0, weight: 1, total: blockTableSize * 16};\r\n  fHeader.total -= fHashTable.total + fBlockTable.total;\r\n  fHashTable.ready = readFile(mpq.slice(hashTablePos, hashTablePos + fHashTable.total), loader(fHashTable));\r\n  fBlockTable.ready = readFile(mpq.slice(blockTablePos, blockTablePos + fBlockTable.total), loader(fBlockTable));\r\n  files.push(fHashTable, fBlockTable);\r\n\r\n  const hashTable = new Uint32Array(await fHashTable.ready);\r\n  const blockTable = new Uint32Array(await fBlockTable.ready);\r\n  decrypt(hashTable, hash(\"(hash table)\", 3));\r\n  decrypt(blockTable, hash(\"(block table)\", 3));\r\n\r\n  const list = (await fList.ready).split(\"\\n\").map(name => name.trim()).filter(name => name.length);\r\n  const listMap = {};\r\n  const hashStr = (h1, h2) => h1.toString(16).padStart(8, '0') + h2.toString(16).padStart(8, '0');\r\n  for (let name of list) {\r\n    listMap[hashStr(hash(name, 1), hash(name, 2))] = name;\r\n  }\r\n\r\n  const NUM_TASKS = 4;\r\n  const tasks = [];\r\n  for (let i = 0; i < NUM_TASKS; ++i) {\r\n    tasks.push({\r\n      entries: [],\r\n      min: mpqsize,\r\n      max: 0,\r\n      progress: 0,\r\n    });\r\n  }\r\n  \r\n  for (let i = 0; i < hashTable.length / 4; ++i) {\r\n    const index = hashTable[i * 4 + 3];\r\n    if (index === 0xFFFFFFFF || index === 0xFFFFFFFE) {\r\n      continue;\r\n    }\r\n    const name = listMap[hashStr(hashTable[i * 4], hashTable[i * 4 + 1])];\r\n    if (!name) {\r\n      hashTable[i * 4 + 3] = 0xFFFFFFFE;\r\n      continue;\r\n    }\r\n\r\n    const filePos = blockTable[index * 4];\r\n    const cSize = blockTable[index * 4 + 1];\r\n\r\n    const task = tasks[Math.floor(filePos * NUM_TASKS / mpqsize)];\r\n    task.entries.push(i);\r\n    task.min = Math.min(task.min, filePos);\r\n    task.max = Math.max(task.max, filePos + cSize);\r\n  }\r\n\r\n  const numFiles = tasks.reduce((sum, task) => sum + task.entries.length, 0);\r\n\r\n  fHeader.total = 32;\r\n  for (let task of tasks) {\r\n    if (task.min < task.max) {\r\n      const fLoad = {loaded: 0, weight: 1, total: task.max - task.min};\r\n      task.ready = readFile(mpq.slice(task.min, task.max), loader(fLoad)).then(data => task.data = data);\r\n      files.push(fLoad);\r\n    }\r\n  }\r\n\r\n  await Promise.all(tasks.map(t => t.ready).filter(Boolean));\r\n  const binary = await fBinary.ready;\r\n\r\n  progress(texts.processing);\r\n\r\n  for (let task of tasks) {\r\n    if (task.data) {\r\n      const input = new Uint32Array(task.entries.length * 6);\r\n      task.entries.forEach((i, pos) => {\r\n        const index = hashTable[i * 4 + 3];\r\n        const name = listMap[hashStr(hashTable[i * 4], hashTable[i * 4 + 1])];\r\n        input[pos * 6] = blockTable[index * 4];\r\n        input[pos * 6 + 1] = blockTable[index * 4 + 1];\r\n        input[pos * 6 + 2] = blockTable[index * 4 + 2];\r\n        input[pos * 6 + 3] = blockTable[index * 4 + 3];\r\n        input[pos * 6 + 4] = hash(path_name(name), 3);\r\n        input[pos * 6 + 5] = name.match(/\\.wav$/i) ? 1 : 0;\r\n      });\r\n      task.run = runWorker({binary, mpq: task.data, input, offset: task.min, blockSize}, [task.data, input.buffer], value => {\r\n        task.progress = value;\r\n        const sum = tasks.reduce((sum, task) => sum + task.progress, 0);\r\n        progress(texts.processing, sum, numFiles);\r\n      }).then(res => task.result = res);\r\n    }\r\n  }\r\n\r\n  await Promise.all(tasks.map(t => t.run).filter(Boolean));\r\n\r\n  let outputPos = 32 + fHashTable.total + fBlockTable.total;\r\n  const outputSize = tasks.reduce((sum, {result}) => sum + (result ? result.buffer.byteLength : 0), outputPos);\r\n  const output = [header.buffer, hashTable.buffer, blockTable.buffer];\r\n\r\n  blockTable.fill(0);\r\n  let blockPos = 0;\r\n  for (let task of tasks) {\r\n    if (task.result) {\r\n      const {buffer, blocks} = task.result;\r\n      for (let pos = 0; pos < task.entries.length; ++pos) {\r\n        const i = task.entries[pos];\r\n        hashTable[i * 4 + 3] = blockPos + pos;\r\n        blocks[pos * 4] += outputPos;\r\n      }\r\n      blockTable.set(blocks, blockPos * 4);\r\n      blockPos += task.entries.length;\r\n      output.push(buffer);\r\n      outputPos += buffer.byteLength;\r\n    }\r\n  }\r\n\r\n  header[1] = 32;\r\n  header[2] = outputSize;\r\n  header16[6] = 1;\r\n  header16[7] = 7;\r\n  header[4] = 32;\r\n  header[5] = 32 + hashTable.length * 4;\r\n  header[6] = hashTable.length / 4;\r\n  header[7] = blockTable.length / 4;\r\n\r\n  encrypt(hashTable, hash(\"(hash table)\", 3));\r\n  encrypt(blockTable, hash(\"(block table)\", 3));\r\n\r\n  return new Blob(output, {type: 'binary/octet-stream'});\r\n}\r\n","import React from 'react';\r\nimport compress from './compress';\r\nimport i18n from '../i18n';\r\n\r\nexport default class CompressMpq extends React.Component {\r\n  state = {};\r\n\r\n  parseFile = e => {\r\n    const files = e.target.files;\r\n    if (files.length > 0) {\r\n      this.start(files[0]);\r\n    }\r\n  }\r\n\r\n  onProgress(progress) {\r\n    this.setState({progress});\r\n  }\r\n  onDone = blob => {\r\n    //const blob = new Blob([result], {type: 'binary/octet-stream'});\r\n    const url = URL.createObjectURL(blob);\r\n    this.setState({url});\r\n\r\n    const lnk = document.createElement('a');\r\n    lnk.setAttribute('href', url);\r\n    lnk.setAttribute('download', 'DIABDAT.MPQ');\r\n    document.body.appendChild(lnk);\r\n    lnk.click();\r\n    document.body.removeChild(lnk);\r\n  }\r\n  onError(message, stack) {\r\n    const { api } = this.props;\r\n    api.setState({compress: false});\r\n    api.onError(message, stack);\r\n  }\r\n\r\n  onClose = () => {\r\n    if (this.state.url) {\r\n      URL.revokeObjectURL(this.state.url);\r\n    }\r\n    this.props.api.setState({compress: false});\r\n  }\r\n\r\n  start(file) {\r\n    this.setState({started: true});\r\n    const texts = {\r\n      loading: i18n.t('progress.loading'),\r\n      processing: i18n.t('progress.processing')\r\n    };\r\n    compress(file, (text, loaded, total) => this.onProgress({text, loaded, total}), texts)\r\n      .then(this.onDone, e => this.onError(e.message, e.stack));\r\n  }\r\n\r\n  render() {\r\n    const { url, started, progress } = this.state;\r\n    if (url) {\r\n      return (\r\n        <div className=\"start\">\r\n          <p>\r\n            <a href={url} download=\"DIABDAT.MPQ\">{i18n.t('compression.downloadPrompt')}</a>\r\n          </p>\r\n          <div className=\"startButton\" onClick={this.onClose}>{i18n.t('ui.back')}</div>\r\n        </div>\r\n      );\r\n    }\r\n    if (started) {\r\n      return (\r\n        <div className=\"loading\">\r\n          {(progress && progress.text) || i18n.t('compression.processing')}\r\n          {progress != null && !!progress.total && (\r\n            <span className=\"progressBar\"><span><span style={{width: `${Math.round(100 * progress.loaded / progress.total)}%`}}/></span></span>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"start\">\r\n        <p>\r\n          {i18n.t('compression.description')}\r\n        </p>\r\n        <form>\r\n          <label htmlFor=\"loadFile\" className=\"startButton\">{i18n.t('ui.selectMPQ')}</label>\r\n          <input accept=\".mpq\" type=\"file\" id=\"loadFile\" style={{display: \"none\"}} onChange={this.parseFile}/>\r\n        </form>\r\n        <div className=\"startButton\" onClick={this.onClose}>{i18n.t('ui.back')}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport classNames from 'classnames';\r\nimport ReactGA from 'react-ga';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport getPlayerName from './api/savefile';\r\nimport i18n from './i18n';\r\nimport LanguageSelector from './components/LanguageSelector';\r\n\r\nimport { mapStackTrace } from 'sourcemapped-stacktrace';\r\n\r\nimport create_fs from './fs';\r\nimport load_game from './api/loader';\r\nimport { SpawnSizes } from './api/load_spawn';\r\nimport CompressMpq from './mpqcmp';\r\n\r\nimport Peer from 'peerjs';\r\n\r\nwindow.Peer = Peer;\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  ReactGA.initialize('UA-43123589-6');\r\n  ReactGA.pageview('/');\r\n}\r\n\r\nfunction reportLink(e, retail) {\r\n  const message = (e.message || \"Unknown error\") + (e.stack ? \"\\n\" + e.stack : \"\");\r\n  const url = new URL(\"https://github.com/d07RiV/diabloweb/issues/new\");\r\n  url.searchParams.set(\"body\",\r\n`**Description:**\r\n[Please describe what you were doing before the error occurred]\r\n\r\n**App version:**\r\nDiabloWeb ${process.env.VERSION} (${retail ? 'Retail' : 'Shareware'})\r\n\r\n**Error message:**\r\n    \r\n${message.split(\"\\n\").map(line => \"    \" + line).join(\"\\n\")}\r\n\r\n**User agent:**\r\n\r\n    ${navigator.userAgent}\r\n\r\n**Save file:**\r\n[Please attach the save file, if applicable. The error box should have a link to download the current save you were playing; alternatively, you can open dev console on the game page (F12) and type in ${\"`DownloadSaves()`\"}]\r\n`);\r\n  return url.toString();\r\n}\r\n\r\nfunction isDropFile(e) {\r\n  if (e.dataTransfer.items) {\r\n    for (let i = 0; i < e.dataTransfer.items.length; ++i) {\r\n      if (e.dataTransfer.items[i].kind === \"file\") {\r\n        return true;\r\n      }\r\n    }\r\n  } if (e.dataTransfer.files.length) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction getDropFile(e) {\r\n  if (e.dataTransfer.items) {\r\n    for (let i = 0; i < e.dataTransfer.items.length; ++i) {\r\n      if (e.dataTransfer.items[i].kind === \"file\") {\r\n        return e.dataTransfer.items[i].getAsFile();\r\n      }\r\n    }\r\n  } if (e.dataTransfer.files.length) {\r\n    return e.dataTransfer.files[0];\r\n  }\r\n}\r\n\r\nconst TOUCH_MOVE = 0;\r\nconst TOUCH_RMB = 1;\r\nconst TOUCH_SHIFT = 2;\r\n\r\nfunction findKeyboardRule() {\r\n  for (let sheet of document.styleSheets) {\r\n    for (let rule of sheet.cssRules) {\r\n      if (rule.type === CSSRule.MEDIA_RULE && rule.conditionText === '(min-aspect-ratio: 3/1)') {\r\n        for (let sub of rule.cssRules) {\r\n          if (sub.selectorText === '.App.keyboard .Body .inner') {\r\n            return sub;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\nlet keyboardRule = null;\r\ntry {\r\n  keyboardRule = findKeyboardRule();\r\n} catch (e) {\r\n}\r\n\r\nconst Link = ({children, ...props}) => <a target=\"_blank\" rel=\"noopener noreferrer\" {...props}>{children}</a>;\r\n\r\nclass App extends React.Component {\r\n  files = new Map();\r\n  state = {started: false, loading: false, dropping: 0, has_spawn: false, language: i18n.getCurrentLanguage()};\r\n  cursorPos = {x: 0, y: 0};\r\n\r\n  touchControls = false;\r\n  touchButtons = [null, null, null, null, null, null, null, null, null, null];\r\n  touchCtx = [null, null, null, null, null, null];\r\n  touchMods = [false, false, false, false, false, false];\r\n  touchBelt = [-1, -1, -1, -1, -1, -1];\r\n  maxKeyboard = 0;\r\n\r\n  fs = create_fs(true);\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.setTouch0 = this.setTouch_.bind(this, 0);\r\n    this.setTouch1 = this.setTouch_.bind(this, 1);\r\n    this.setTouch2 = this.setTouch_.bind(this, 2);\r\n    this.setTouch3 = this.setTouchBelt_.bind(this, 3);\r\n    this.setTouch4 = this.setTouchBelt_.bind(this, 4);\r\n    this.setTouch5 = this.setTouchBelt_.bind(this, 5);\r\n\r\n    this.setTouch6 = this.setTouch_.bind(this, 6);\r\n    this.setTouch7 = this.setTouch_.bind(this, 7);\r\n    this.setTouch8 = this.setTouch_.bind(this, 8);\r\n    this.setTouch9 = this.setTouch_.bind(this, 9);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"drop\", this.onDrop, true);\r\n    document.addEventListener(\"dragover\", this.onDragOver, true);\r\n    document.addEventListener(\"dragenter\", this.onDragEnter, true);\r\n    document.addEventListener(\"dragleave\", this.onDragLeave, true);\r\n\r\n    // Add i18n listener\r\n    this.handleLanguageChange = (newLanguage) => {\r\n      this.setState({language: newLanguage});\r\n    };\r\n    i18n.addListener(this.handleLanguageChange);\r\n\r\n    this.fs.then(fs => {\r\n      const spawn = fs.files.get('spawn.mpq');\r\n      if (spawn && SpawnSizes.includes(spawn.byteLength)) {\r\n        this.setState({has_spawn: true});\r\n      }\r\n      if ([...fs.files.keys()].filter(name => name.match(/\\.sv$/i)).length) {\r\n        this.setState({save_names: true});\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.handleLanguageChange) {\r\n      i18n.removeListener(this.handleLanguageChange);\r\n    }\r\n  }\r\n\r\n  onDrop = e => {\r\n    const file = getDropFile(e);\r\n    if (file) {\r\n      e.preventDefault();\r\n      if (this.compressMpq) {\r\n        this.compressMpq.start(file);\r\n      } else {\r\n        this.start(file);\r\n      }\r\n    }\r\n    this.setState({dropping: 0});\r\n  }\r\n  onDragEnter = e => {\r\n    e.preventDefault();\r\n    this.setDropping(1);\r\n  }\r\n  onDragOver = e => {\r\n    if (isDropFile(e)) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  onDragLeave = e => {\r\n    this.setDropping(-1);\r\n  }\r\n  setDropping(inc) {\r\n    this.setState(({dropping}) => ({dropping: Math.max(dropping + inc, 0)}));\r\n  }\r\n\r\n  onError(message, stack) {\r\n    (async () => {\r\n      const errorObject = {message};\r\n      if (this.saveName) {\r\n        errorObject.save = await (await this.fs).fileUrl(this.saveName);\r\n      }\r\n      if (stack) {\r\n        mapStackTrace(stack, stack => {\r\n          this.setState(({error}) => !error && {error: {...errorObject, stack: stack.join(\"\\n\")}});\r\n        });\r\n      } else {\r\n        this.setState(({error}) => !error && {error: errorObject});\r\n      }\r\n    })();\r\n  }\r\n\r\n  openKeyboard(rect) {\r\n    if (rect) {\r\n      this.showKeyboard = {\r\n        left: `${(100 * (rect[0] - 10) / 640).toFixed(2)}%`,\r\n        top: `${(100 * (rect[1] - 10) / 480).toFixed(2)}%`,\r\n        width: `${(100 * (rect[2] - rect[0] + 20) / 640).toFixed(2)}%`,\r\n        height: `${(100 * (rect[3] - rect[1] + 20) / 640).toFixed(2)}%`,\r\n      };\r\n      this.maxKeyboard = rect[4];\r\n      this.element.classList.add(\"keyboard\");\r\n      Object.assign(this.keyboard.style, this.showKeyboard);\r\n      this.keyboard.focus();\r\n      if (keyboardRule) {\r\n        keyboardRule.style.transform = `translate(-50%, ${(-(rect[1] + rect[3]) * 56.25 / 960).toFixed(2)}vw)`;\r\n      }\r\n    } else {\r\n      this.showKeyboard = false;\r\n      this.element.classList.remove(\"keyboard\");\r\n      this.keyboard.blur();\r\n      this.keyboard.value = \"\";\r\n      this.keyboardNum = 0;\r\n    }\r\n  }\r\n\r\n  setCursorPos(x, y) {\r\n    const rect = this.canvas.getBoundingClientRect();\r\n    this.cursorPos = {\r\n      x: rect.left + (rect.right - rect.left) * x / 640,\r\n      y: rect.top + (rect.bottom - rect.top) * y / 480,\r\n    };\r\n    setTimeout(() => {\r\n      this.game(\"DApi_Mouse\", 0, 0, 0, x, y);\r\n    });\r\n  }\r\n\r\n  onProgress(progress) {\r\n    this.setState({progress});\r\n  }\r\n\r\n  onExit() {\r\n    if (!this.state.error) {\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  setCurrentSave(name) {\r\n    this.saveName = name;\r\n  }\r\n\r\n  showSaves = () => {\r\n    if (this.state.save_names === true) {\r\n      this.updateSaves().then(() => this.setState({show_saves: !this.state.show_saves}));\r\n    } else {\r\n      this.setState({show_saves: !this.state.show_saves});\r\n    }\r\n  }\r\n  updateSaves() {\r\n    return this.fs.then(fs => {\r\n      const saves = {};\r\n      [...fs.files.keys()].filter(name => name.match(/\\.sv$/i)).forEach(name => {\r\n        saves[name] = getPlayerName(fs.files.get(name).buffer, name);\r\n      });\r\n      this.setState({save_names: saves});\r\n    });\r\n  }\r\n  removeSave(name) {\r\n    if (window.confirm(i18n.t('ui.deleteSave', {fileName: name}))) {\r\n      (async () => {\r\n        const fs = await this.fs;\r\n        await fs.delete(name.toLowerCase());\r\n        fs.files.delete(name.toLowerCase());\r\n        this.updateSaves();\r\n      })();\r\n    }\r\n  }\r\n  downloadSave(name) {\r\n    this.fs.then(fs => fs.download(name));\r\n  }\r\n\r\n  drawBelt(idx, slot) {\r\n    if (!this.canvas) return;\r\n    if (!this.touchButtons[idx]) {\r\n      return;\r\n    }\r\n    this.touchBelt[idx] = slot;\r\n    if (slot >= 0) {\r\n      this.touchButtons[idx].style.display = \"block\";\r\n      this.touchCtx[idx].drawImage(this.canvas, 205 + 29 * slot, 357, 28, 28, 0, 0, 28, 28);\r\n    } else {\r\n      this.touchButtons[idx].style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  updateBelt(belt) {\r\n    if (belt) {\r\n      const used = new Set();\r\n      let pos = 3;\r\n      for (let i = 0; i < belt.length && pos < 6; ++i) {\r\n        if (belt[i] >= 0 && !used.has(belt[i])) {\r\n          this.drawBelt(pos++, i);\r\n          used.add(belt[i]);\r\n        }\r\n      }\r\n      for (; pos < 6; ++pos) {\r\n        this.drawBelt(pos, -1);\r\n      }\r\n    } else {\r\n      this.drawBelt(3, -1);\r\n      this.drawBelt(4, -1);\r\n      this.drawBelt(5, -1);\r\n    }\r\n  }\r\n\r\n  start(file) {\r\n    if (file && file.name.match(/\\.sv$/i)) {\r\n      this.fs.then(fs => fs.upload(file)).then(() => {\r\n        this.updateSaves();\r\n      });\r\n      return;\r\n    }\r\n    if (this.state.show_saves) {\r\n      return;\r\n    }\r\n    if (file && !file.name.match(/\\.mpq$/i)) {\r\n      window.alert(i18n.t('errors.invalidMPQ'));\r\n      return;\r\n    }\r\n\r\n    document.removeEventListener(\"drop\", this.onDrop, true);\r\n    document.removeEventListener(\"dragover\", this.onDragOver, true);\r\n    document.removeEventListener(\"dragenter\", this.onDragEnter, true);\r\n    document.removeEventListener(\"dragleave\", this.onDragLeave, true);\r\n    this.setState({dropping: 0});\r\n\r\n    const retail = !!(file && !file.name.match(/^spawn\\.mpq$/i));\r\n    if (process.env.NODE_ENV === 'production') {\r\n      ReactGA.event({\r\n        category: 'Game',\r\n        action: retail ? 'Start Retail' : 'Start Shareware',\r\n      });\r\n    }\r\n\r\n    this.setState({loading: true, retail});\r\n\r\n    load_game(this, file, !retail).then(game => {\r\n      this.game = game;\r\n\r\n      document.addEventListener('mousemove', this.onMouseMove, true);\r\n      document.addEventListener('mousedown', this.onMouseDown, true);\r\n      document.addEventListener('mouseup', this.onMouseUp, true);\r\n      document.addEventListener('keydown', this.onKeyDown, true);\r\n      document.addEventListener('keyup', this.onKeyUp, true);\r\n      document.addEventListener('contextmenu', this.onMenu, true);\r\n\r\n      document.addEventListener('touchstart', this.onTouchStart, {passive: false, capture: true});\r\n      document.addEventListener('touchmove', this.onTouchMove, {passive: false, capture: true});\r\n      document.addEventListener('touchend', this.onTouchEnd, {passive: false, capture: true});\r\n\r\n      document.addEventListener('pointerlockchange', this.onPointerLockChange);\r\n      window.addEventListener('resize', this.onResize);\r\n\r\n      this.setState({started: true});\r\n    }, e => this.onError(e.message, e.stack));\r\n  }\r\n\r\n  pointerLocked() {\r\n    return document.pointerLockElement === this.canvas || document.mozPointerLockElement === this.canvas;\r\n  }\r\n\r\n  mousePos(e) {\r\n    const rect = this.canvas.getBoundingClientRect();\r\n    if (this.pointerLocked()) {\r\n      this.cursorPos.x = Math.max(rect.left, Math.min(rect.right, this.cursorPos.x + e.movementX));\r\n      this.cursorPos.y = Math.max(rect.top, Math.min(rect.bottom, this.cursorPos.y + e.movementY));\r\n    } else {\r\n      this.cursorPos = {x: e.clientX, y: e.clientY};\r\n    }\r\n    return {\r\n      x: Math.max(0, Math.min(Math.round((this.cursorPos.x - rect.left) / (rect.right - rect.left) * 640), 639)),\r\n      y: Math.max(0, Math.min(Math.round((this.cursorPos.y - rect.top) / (rect.bottom - rect.top) * 480), 479)),\r\n    };\r\n  }\r\n\r\n  mouseButton(e) {\r\n    switch (e.button) {\r\n    case 0: return 1;\r\n    case 1: return 4;\r\n    case 2: return 2;\r\n    case 3: return 5;\r\n    case 4: return 6;\r\n    default: return 1;\r\n    }\r\n  }\r\n  eventMods(e) {\r\n    return ((e.shiftKey || this.touchMods[TOUCH_SHIFT]) ? 1 : 0) + (e.ctrlKey ? 2 : 0) + (e.altKey ? 4 : 0) + (e.touches ? 8 : 0);\r\n  }\r\n\r\n  onResize = () => {\r\n    document.exitPointerLock();\r\n  }\r\n\r\n  onPointerLockChange = () => {\r\n    if (window.screen && window.innerHeight === window.screen.height && !this.pointerLocked()) {\r\n      // assume that the user pressed escape\r\n      this.game(\"DApi_Key\", 0, 0, 27);\r\n      this.game(\"DApi_Key\", 1, 0, 27);\r\n    }\r\n  }\r\n\r\n  onMouseMove = e => {\r\n    if (!this.canvas) return;\r\n    const {x, y} = this.mousePos(e);\r\n    this.game(\"DApi_Mouse\", 0, 0, this.eventMods(e), x, y);\r\n    e.preventDefault();\r\n  }\r\n\r\n  onMouseDown = e => {\r\n    if (!this.canvas) return;\r\n    if (e.target === this.keyboard) {\r\n      return;\r\n    }\r\n    if (this.touchControls) {\r\n      this.touchControls = false;\r\n      this.element.classList.remove(\"touch\");\r\n    }\r\n    const {x, y} = this.mousePos(e);\r\n    if (window.screen && window.innerHeight === window.screen.height) {\r\n      // we're in fullscreen, let's get pointer lock!\r\n      if (!this.pointerLocked()) {\r\n        this.canvas.requestPointerLock();\r\n      }\r\n    }\r\n    this.game(\"DApi_Mouse\", 1, this.mouseButton(e), this.eventMods(e), x, y);\r\n    e.preventDefault();\r\n  }\r\n\r\n  onMouseUp = e => {\r\n    if (!this.canvas) return;\r\n    if (e.target === this.keyboard) {\r\n      //return;\r\n    }\r\n    const {x, y} = this.mousePos(e);\r\n    this.game(\"DApi_Mouse\", 2, this.mouseButton(e), this.eventMods(e), x, y);\r\n    if (e.target !== this.keyboard) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  onKeyDown = e => {\r\n    if (!this.canvas) return;\r\n    this.game(\"DApi_Key\", 0, this.eventMods(e), e.keyCode);\r\n    if (!this.showKeyboard && (e.keyCode >= 32 && e.key.length === 1)) {\r\n      this.game(\"DApi_Char\", e.key.charCodeAt(0));\r\n    } else if (e.keyCode === 8 || e.keyCode === 13) {\r\n      this.game(\"DApi_Char\", e.keyCode);\r\n    }\r\n    this.clearKeySel();\r\n    if (!this.showKeyboard) {\r\n      if (e.keyCode === 8 || e.keyCode === 9 || (e.keyCode >= 112 && e.keyCode <= 119)) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  onMenu = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  onKeyUp = e => {\r\n    if (!this.canvas) return;\r\n    this.game(\"DApi_Key\", 1, this.eventMods(e), e.keyCode);\r\n    this.clearKeySel();\r\n  }\r\n\r\n  clearKeySel() {\r\n    if (this.showKeyboard) {\r\n      const len = this.keyboard.value.length;\r\n      this.keyboard.setSelectionRange(len, len);\r\n    }\r\n  }\r\n\r\n  onKeyboardInner(flags) {\r\n    if (this.showKeyboard) {\r\n      const text = this.keyboard.value;\r\n      let valid;\r\n      if (this.maxKeyboard > 0) {\r\n        valid = (text.match(/[\\x20-\\x7E]/g) || []).join(\"\").substring(0, this.maxKeyboard);\r\n      } else {\r\n        const maxValue = -this.maxKeyboard;\r\n        if (text.match(/^\\d*$/)) {\r\n          this.keyboardNum = Math.min(text.length ? parseInt(text) : 0, maxValue);\r\n        }\r\n        valid = (this.keyboardNum ? this.keyboardNum.toString() : \"\");\r\n      }\r\n      if (text !== valid) {\r\n        this.keyboard.value = valid;\r\n      }\r\n      this.clearKeySel();\r\n      this.game(\"text\", valid, flags);\r\n    }\r\n  }\r\n  onKeyboard = () => {\r\n    this.onKeyboardInner(0);\r\n  }\r\n  onKeyboardBlur = () => {\r\n    this.onKeyboardInner(1);\r\n  }\r\n\r\n  parseFile = e => {\r\n    const files = e.target.files;\r\n    if (files.length > 0) {\r\n      this.start(files[0]);\r\n    }\r\n  }\r\n\r\n  parseSave = e => {\r\n    const files = e.target.files;\r\n    if (files.length > 0) {\r\n      this.start(files[0]);\r\n    }\r\n  }\r\n\r\n  touchButton = null;\r\n  touchCanvas = null;\r\n\r\n  setTouchMod(index, value, use) {\r\n    if (index < 3) {\r\n      this.touchMods[index] = value;\r\n      if (this.touchButtons[index]) {\r\n        this.touchButtons[index].classList.toggle(\"active\", value);\r\n      }\r\n    } else if (use && this.touchBelt[index] >= 0) {\r\n      const now = performance.now();\r\n      if (!this.beltTime || now - this.beltTime > 750) {\r\n        this.game(\"DApi_Char\", 49 + this.touchBelt[index]);\r\n        this.beltTime = now;\r\n      }\r\n    }\r\n  }\r\n\r\n  updateTouchButton(touches, release) {\r\n    let touchOther = null;\r\n    if (!this.touchControls) {\r\n      this.touchControls = true;\r\n      this.element.classList.add(\"touch\");\r\n    }\r\n    const btn = this.touchButton;\r\n    for (let {target, identifier, clientX, clientY} of touches) {\r\n      if (btn && btn.id === identifier && this.touchButtons[btn.index] === target) {\r\n        if (touches.length > 1) {\r\n          btn.stick = false;\r\n        }\r\n        btn.clientX = clientX;\r\n        btn.clientY = clientY;\r\n        this.touchCanvas = [...touches].find(t => t.identifier !== identifier);\r\n        if (this.touchCanvas) {\r\n          this.touchCanvas = {clientX: this.touchCanvas.clientX, clientY: this.touchCanvas.clientY};\r\n        }\r\n        delete this.panPos;\r\n        return this.touchCanvas != null;\r\n      }\r\n      const idx = this.touchButtons.indexOf(target);\r\n      if (idx >= 0 && !touchOther) {\r\n        touchOther = {id: identifier, index: idx, stick: true, original: this.touchMods[idx], clientX, clientY};\r\n      }\r\n    }\r\n    if (btn && !touchOther && release && btn.stick) {\r\n      const rect = this.touchButtons[btn.index].getBoundingClientRect();\r\n      const {clientX, clientY} = btn;\r\n      if (clientX >= rect.left && clientX < rect.right && clientY >= rect.top && clientY < rect.bottom) {\r\n        this.setTouchMod(btn.index, !btn.original, true);\r\n      } else {\r\n        this.setTouchMod(btn.index, btn.original);\r\n      }\r\n    } else if (btn) {\r\n      this.setTouchMod(btn.index, false);\r\n    }\r\n    this.touchButton = touchOther;\r\n    if (touchOther) {\r\n      if (touchOther.index < 6) {\r\n        this.setTouchMod(touchOther.index, true);\r\n        if (touchOther.index === TOUCH_MOVE) {\r\n          this.setTouchMod(TOUCH_RMB, false);\r\n        } else if (touchOther.index === TOUCH_RMB) {\r\n          this.setTouchMod(TOUCH_MOVE, false);\r\n        }\r\n        delete this.panPos;\r\n      } else {\r\n        // touching F key\r\n        this.game(\"DApi_Key\", 0, 0, 110 + touchOther.index);\r\n      }\r\n    } else if (touches.length === 2) {\r\n      const x = (touches[1].clientX + touches[0].clientX) / 2, y = (touches[1].clientY + touches[0].clientY) / 2;\r\n      if (this.panPos) {\r\n        const dx = x - this.panPos.x, dy = y - this.panPos.y;\r\n        const step = this.canvas.offsetHeight / 12;\r\n        if (Math.max(Math.abs(dx), Math.abs(dy)) > step) {\r\n          let key;\r\n          if (Math.abs(dx) > Math.abs(dy)) {\r\n            key = (dx > 0 ? 0x25 : 0x27);\r\n          } else {\r\n            key = (dy > 0 ? 0x26 : 0x28);\r\n          }\r\n          this.game(\"DApi_Key\", 0, 0, key);\r\n          // key up is ignored anyway\r\n          this.panPos = {x, y};\r\n        }\r\n      } else {\r\n        this.game(\"DApi_Mouse\", 0, 0, 24, 320, 180);\r\n        this.game(\"DApi_Mouse\", 2, 1, 24, 320, 180);\r\n        this.panPos = {x, y};\r\n      }\r\n      this.touchCanvas = null;\r\n      return false;\r\n    } else {\r\n      delete this.panPos;\r\n    }\r\n    this.touchCanvas = [...touches].find(t => !touchOther || t.identifier !== touchOther.id);\r\n    if (this.touchCanvas) {\r\n      this.touchCanvas = {clientX: this.touchCanvas.clientX, clientY: this.touchCanvas.clientY};\r\n    }\r\n    return this.touchCanvas != null;\r\n  }\r\n\r\n  onTouchStart = e => {\r\n    if (!this.canvas) return;\r\n    if (e.target === this.keyboard) {\r\n      return;\r\n    } else {\r\n      this.keyboard.blur();\r\n    }\r\n    e.preventDefault();\r\n    if (this.updateTouchButton(e.touches, false)) {\r\n      const {x, y} = this.mousePos(this.touchCanvas);\r\n      this.game(\"DApi_Mouse\", 0, 0, this.eventMods(e), x, y);\r\n      if (!this.touchMods[TOUCH_MOVE]) {\r\n        this.game(\"DApi_Mouse\", 1, this.touchMods[TOUCH_RMB] ? 2 : 1, this.eventMods(e), x, y);\r\n      }\r\n    }\r\n  }\r\n  onTouchMove = e => {\r\n    if (!this.canvas) return;\r\n    if (e.target === this.keyboard) {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    if (this.updateTouchButton(e.touches, false)) {\r\n      const {x, y} = this.mousePos(this.touchCanvas);\r\n      this.game(\"DApi_Mouse\", 0, 0, this.eventMods(e), x, y);\r\n    }\r\n  }\r\n  onTouchEnd = e => {\r\n    if (!this.canvas) return;\r\n    if (e.target === this.keyboard) {\r\n      //return;\r\n    } else {\r\n      e.preventDefault();\r\n    }\r\n    const prevTc = this.touchCanvas;\r\n    this.updateTouchButton(e.touches, true);\r\n    if (prevTc && !this.touchCanvas) {\r\n      const {x, y} = this.mousePos(prevTc);\r\n      this.game(\"DApi_Mouse\", 2, 1, this.eventMods(e), x, y);\r\n      this.game(\"DApi_Mouse\", 2, 2, this.eventMods(e), x, y);\r\n\r\n      if (this.touchMods[TOUCH_RMB] && (!this.touchButton || this.touchButton.index !== TOUCH_RMB)) {\r\n        this.setTouchMod(TOUCH_RMB, false);\r\n      }\r\n    }\r\n    if (!document.fullscreenElement) {\r\n      this.element.requestFullscreen();\r\n    }\r\n  }\r\n\r\n  setCanvas = e => this.canvas = e;\r\n  setElement = e => this.element = e;\r\n  setKeyboard = e => this.keyboard = e;\r\n  setTouch_(i, e) {\r\n    this.touchButtons[i] = e;\r\n  }\r\n  setTouchBelt_(i, e) {\r\n    this.touchButtons[i] = e;\r\n    if (e) {\r\n      const canvas = document.createElement(\"canvas\");\r\n      canvas.width = 28;\r\n      canvas.height = 28;\r\n      e.appendChild(canvas);\r\n      this.touchCtx[i] = canvas.getContext(\"2d\");\r\n    } else {\r\n      this.touchCtx[i] = null;\r\n    }\r\n  }\r\n\r\n  renderUi() {\r\n    const {started, loading, error, progress, has_spawn, save_names, show_saves, compress} = this.state;\r\n    if (show_saves && typeof save_names === \"object\") {\r\n      return (\r\n        <div className=\"start\">\r\n          <ul className=\"saveList\">\r\n            {Object.entries(save_names).map(([name, info]) => <li key={name}>\r\n              {name}{info ? <span className=\"info\">{info.name} (lv. {info.level} {i18n.t(`playerClass.${info.cls}`)})</span> : \"\"}\r\n              <FontAwesomeIcon className=\"btnDownload\" icon={faDownload} onClick={() => this.downloadSave(name)}/>\r\n              <FontAwesomeIcon className=\"btnRemove\" icon={faTimes} onClick={() => this.removeSave(name)}/>\r\n            </li>)}\r\n          </ul>\r\n          <form>\r\n            <label htmlFor=\"loadFile\" className=\"startButton\">{i18n.t('ui.uploadSave')}</label>\r\n            <input accept=\".sv\" type=\"file\" id=\"loadFile\" style={{display: \"none\"}} onChange={this.parseSave}/>\r\n          </form>\r\n          <div className=\"startButton\" onClick={() => this.setState({show_saves: false})}>{i18n.t('ui.back')}</div>\r\n        </div>\r\n      );\r\n    } else if (compress) {\r\n      return (\r\n        <CompressMpq api={this} ref={e => this.compressMpq = e}/>\r\n      );\r\n    } else if (error) {\r\n      return (\r\n        <Link className=\"error\" href={reportLink(error, this.state.retail)}>\r\n          <p className=\"header\">{i18n.t('errors.errorOccurred')}</p>\r\n          <p className=\"body\">{error.message}</p>\r\n          <p className=\"footer\">{i18n.t('errors.createIssue')}</p>\r\n          {error.save != null && <a href={error.save} download={this.saveName}>{i18n.t('ui.downloadSave')}</a>}\r\n        </Link>\r\n      );\r\n    } else if (loading && !started) {\r\n      return (\r\n        <div className=\"loading\">\r\n          {(progress && progress.text) || i18n.t('ui.loading')}\r\n          {progress != null && !!progress.total && (\r\n            <span className=\"progressBar\"><span><span style={{width: `${Math.round(100 * progress.loaded / progress.total)}%`}}/></span></span>\r\n          )}\r\n        </div>\r\n      );\r\n    } else if (!started) {\r\n      return (\r\n        <div className=\"start\">\r\n          <p>\r\n            {i18n.t('intro.description')}{\" \"}<Link href=\"https://github.com/anomixer/diabloweb\">https://github.com/anomixer/diabloweb</Link>\r\n          </p>\r\n          <p>\r\n            {i18n.t('intro.gameOwnership')}{\" \"}<Link href=\"https://www.gog.com/game/diablo\">GoG</Link> {i18n.t('intro.purchaseComplete')}\r\n            {\" \"}<span className=\"link\" onClick={() => this.setState({compress: true})}>{i18n.t('intro.compressionOption')}</span>\r\n          </p>\r\n          {!has_spawn && (\r\n            <p>\r\n              {i18n.t('intro.sharewareOption')}\r\n            </p>\r\n          )}\r\n          <form>\r\n            <label htmlFor=\"loadFile\" className=\"startButton\">{i18n.t('ui.selectMPQ')}</label>\r\n            <input accept=\".mpq\" type=\"file\" id=\"loadFile\" style={{display: \"none\"}} onChange={this.parseFile}/>\r\n          </form>\r\n          <div className=\"startButton\" onClick={() => this.start()}>{i18n.t('ui.playShareware')}</div>\r\n          {!!save_names && <div className=\"startButton\" onClick={this.showSaves}>{i18n.t('ui.manageSaves')}</div>}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {started, error, dropping} = this.state;\r\n    return (\r\n      <div className={classNames(\"App\", {touch: this.touchControls, started, dropping, keyboard: !!this.showKeyboard})} ref={this.setElement}>\r\n        <LanguageSelector />\r\n        <div className=\"touch-ui touch-mods\">\r\n          <div className={classNames(\"touch-button\", \"touch-button-0\", {active: this.touchMods[0]})} ref={this.setTouch0}/>\r\n          <div className={classNames(\"touch-button\", \"touch-button-1\", {active: this.touchMods[1]})} ref={this.setTouch1}/>\r\n          <div className={classNames(\"touch-button\", \"touch-button-2\", {active: this.touchMods[2]})} ref={this.setTouch2}/>\r\n        </div>\r\n        <div className=\"touch-ui touch-belt\">\r\n          <div className={classNames(\"touch-button\", \"touch-button-0\")} ref={this.setTouch3}/>\r\n          <div className={classNames(\"touch-button\", \"touch-button-1\")} ref={this.setTouch4}/>\r\n          <div className={classNames(\"touch-button\", \"touch-button-2\")} ref={this.setTouch5}/>\r\n        </div>\r\n        <div className=\"touch-ui fkeys-left\">\r\n          <div className={classNames(\"touch-button\", \"touch-button-3\")} ref={this.setTouch6} />\r\n          <div className={classNames(\"touch-button\", \"touch-button-4\")} ref={this.setTouch7} />\r\n        </div>\r\n        <div className=\"touch-ui fkeys-right\">\r\n          <div className={classNames(\"touch-button\", \"touch-button-5\")} ref={this.setTouch8} />\r\n          <div className={classNames(\"touch-button\", \"touch-button-6\")} ref={this.setTouch9} />\r\n        </div>\r\n        <div className=\"Body\">\r\n          <div className=\"inner\">\r\n            {!error && <canvas ref={this.setCanvas} width={640} height={480}/>}\r\n            <input type=\"text\" className=\"keyboard\" onChange={this.onKeyboard} onBlur={this.onKeyboardBlur} ref={this.setKeyboard} spellCheck={false} style={this.showKeyboard || {}}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"BodyV\">\r\n          {this.renderUi()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './reset.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.register({\r\n  onUpdate() {\r\n  },\r\n});\r\n"],"sourceRoot":""}